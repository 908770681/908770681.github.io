<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>八一建军节</title>
    <url>/archives/5b435262.html</url>
    <content><![CDATA[<ul>
<li>有人说如果你要写<span class="p h4 red">军旅</span>，</li>
<li>要写战备时找不到的<span class="p h4 gray">腰带</span>，</li>
<li>写武装过后大口呼吸的空气，</li>
<li>写野炊时的<span class="p h4 red">夕阳西下</span>，地上袅袅炊烟，</li>
<li>写夜训抬头望见的<span class="p h4 yellow">繁星点点</span>，</li>
<li>写驻训在山头上的冲锋，</li>
<li>写电话那头<psw>哭泣</psw>和<psw>离别</psw>，</li>
<li>写几年时间蜕变成了<span class="p h4 red">优秀</span>的战士……</li>
<li>我认为如果你要写军旅，就不能只写军旅，</li>
<li>你要写凌晨的哨音如何刺穿梦境，</li>
<li>写刚到新兵连体能训练后的<psw>《兵心》</psw>，</li>
<li>写检查内务时的紧张感，</li>
<li>写子弹在靶场烧灼的空气，</li>
<li>写五公里终点处的冰镇可乐，</li>
<li>写迷彩服内兜里姑娘的名字，</li>
<li>写<psw>《军中绿花》</psw>与<psw>《驼铃》</psw>，</li>
<li>写熄灯前的泡面和火腿，</li>
<li>写没有尽头的奔跑与夜哨，</li>
<li>写<emp>2</emp>-<kbd>4</kbd>的一轮孤月，</li>
<li>写站岗是望见村落灯火时的羡慕，</li>
<li>写夜岗时你所想念和怀念的人和事，</li>
<li>更要写这一路上的颠沛流离，和那再写也写不出的满身疲惫……</li>
</ul>
<div class="checkbox checked"><input type="radio" checked="checked">
            <p><strong>-I Love the Chinese People´s Lib-</strong></p>
            </div>
<div class="checkbox checked"><input type="radio" checked="checked">
            <p><strong>-中国人民解放军建军95周年-</strong></p>
            </div>
]]></content>
  </entry>
  <entry>
    <title>md文章中插入</title>
    <url>/archives/3a2b34c.html</url>
    <content><![CDATA[<h1 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h1><p><img src="/images/33780_88604ed2d9-qq_pic_merged_1596934233273.jpg" alt="label"></p>
<iframe width="100%" height="615" src="//player.bilibili.com/player.html?aid=23204013&bvid=BV19p411f7x9&cid=38628219&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>



<h1 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=375588815&amp;bvid=BV1so4y1m7U5&amp;cid=339262048&amp;page=1&amp;high_quality=1&amp;danmaku=0&quot; allowfullscreen=&quot;allowfullscreen&quot; width=&quot;100%&quot; height=&quot;500&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; sandbox=&quot;allow-top-navigation allow-same-origin allow-forms allow-scripts&quot;&gt;&lt;/iframe&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<iframe width="100%" height="615" src="//player.bilibili.com/player.html?aid=646135382&bvid=BV1Re4y1H7g8&cid=852098274&page=1&high_quality=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe>

<iframe width="100%" height="615" src="//player.bilibili.com/player.html?aid=23207325&bvid=BV1Xp411f7vh&cid=38634561&page=1&high_quality=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BILIBILI 地址PC端参数</span><br><span class="line">    &amp;high_quality=1   (1=最高画质 0=最低画质)</span><br><span class="line">    &amp;danmaku=0   (1=打开弹幕 0=关闭弹幕)</span><br><span class="line">iframe 参数</span><br><span class="line">    allowfullscreen=&quot;allowfullscreen&quot; #移动端全屏</span><br><span class="line">    sandbox=&quot;allow-top-navigation allow-same-origin allow-forms allow-scripts&quot; #禁止弹出网页</span><br></pre></td></tr></table></figure>
<p><img src="/images/geshi.jpg" alt="lb"></p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">align</th>
<th style="text-align:left">left right top middle bottom</th>
<th style="text-align:left">不赞成使用。请使用样式代替。规定如何根据周围的元素来对齐此框架。</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">frameborder</td>
<td style="text-align:left">10</td>
<td style="text-align:left">规定是否显示框架周围的边框。</td>
</tr>
<tr>
<td style="text-align:left">height</td>
<td style="text-align:left">pixels%</td>
<td style="text-align:left">规定 iframe 的高度。</td>
</tr>
<tr>
<td style="text-align:left">longdesc</td>
<td style="text-align:left">URL</td>
<td style="text-align:left">规定一个页面，该页面包含了有关iframe 的较长描述。</td>
</tr>
<tr>
<td style="text-align:left">marginheight</td>
<td style="text-align:left">pixels</td>
<td style="text-align:left">定义 iframe的顶部和底部的边距。</td>
</tr>
<tr>
<td style="text-align:left">marginwidth</td>
<td style="text-align:left">pixels</td>
<td style="text-align:left">定义 iframe的左侧和右侧的边距。</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">frame_name</td>
<td style="text-align:left">规定 iframe 的名称。</td>
</tr>
<tr>
<td style="text-align:left">sandbox</td>
<td style="text-align:left">“”allow-formsallow-same-originallow-scriptsallow-top-navigation    启用一系列对 <_iframe> 中内容的额外限制。</_iframe></td>
</tr>
<tr>
<td style="text-align:left">scrolling</td>
<td style="text-align:left">yesnoauto</td>
<td style="text-align:left">规定是否在 iframe中显示滚动条。</td>
</tr>
<tr>
<td style="text-align:left">seamless</td>
<td style="text-align:left">seamless</td>
<td style="text-align:left">规定 <_iframe> 看上去像是包含文档的一部分。</_iframe></td>
</tr>
<tr>
<td style="text-align:left">src</td>
<td style="text-align:left">URL</td>
<td style="text-align:left">规定在 iframe中显示的文档的 URL。</td>
</tr>
<tr>
<td style="text-align:left">srcdoc</td>
<td style="text-align:left">HTML_code</td>
<td style="text-align:left">规定在 <_iframe> 中显示的页面的 HTML 内容。</_iframe></td>
</tr>
<tr>
<td style="text-align:left">width</td>
<td style="text-align:left">pixels%</td>
<td style="text-align:left">定义 iframe 的宽度。</td>
</tr>
</tbody>
</table>
</div>
<hr>
<h1 id="添加网址链接"><a href="#添加网址链接" class="headerlink" title="添加网址链接"></a>添加网址链接</h1><div class="tip warning faa-horizontal animated-hover"><p><a href="https://music.163.com/#/outchain/2/27483200/">网易云</a></p>
</div>
<div class="tag link"><a class="link-card" title="网易云" href="https://music.163.com/#/outchain/2/27483200/"><div class="left"><img src="/archives/3a2b34c.htm/link.png"></div><div class="right"><p class="text">网易云</p><p class="url">https://music.163.com/#/outchain/2/27483200/</p></div></a></div>
<h1 id="外挂标签"><a href="#外挂标签" class="headerlink" title="外挂标签"></a>外挂标签</h1><div class="tip warning faa-horizontal animated-hover"><p><a href="https://akilar.top/posts/615e2dec/">参考网站</a></p>
</div>]]></content>
  </entry>
  <entry>
    <title>无题</title>
    <url>/archives/9b44950b.html</url>
    <content><![CDATA[<ul>
<li>现在的坚持，只是希望以后回想起来的时候想的是「真好，我撑下来了」而不是「要是再…就好了」。</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>&lt;是什么让你突然努力？&gt;</title>
    <url>/archives/7ef2643a.html</url>
    <content><![CDATA[<h1 id="“是什么让你突然努力？”"><a href="#“是什么让你突然努力？”" class="headerlink" title="“是什么让你突然努力？”"></a>“是什么让你突然努力？”</h1><ul>
<li>父亲的低头？</li>
<li>母亲的白发？</li>
<li>亲戚的冷漠？</li>
<li>朋友的离开？</li>
<li>空荡的口袋？</li>
<li>自己的不堪？</li>
<li>是爱而不得？</li>
<li>还是……</li>
<li>她父母说的一套房加20万</li>
<li>加油！陌生人！！！</li>
</ul>
<iframe width="100%" height="615" src="//player.bilibili.com/player.html?aid=558232035&bvid=BV1be4y1k7mP&cid=836789322&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
  </entry>
  <entry>
    <title>代码演示</title>
    <url>/archives/be82d226.html</url>
    <content><![CDATA[<h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">判断一个整数是否是回文数。</span><br><span class="line">回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</span><br><span class="line"><span class="comment">//转化为字符串实现</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPalindrome</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">reversedStr</span> <span class="operator">=</span> (<span class="keyword">new</span> <span class="title class_">StringBuilder</span>(x + <span class="string">&quot;&quot;</span>)).reverse().toString();</span><br><span class="line">        <span class="keyword">return</span> (x + <span class="string">&quot;&quot;</span>).equals(reversedStr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用数字解决问题</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    bool <span class="title function_">isPalindrome</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="comment">// 特殊情况：</span></span><br><span class="line">        <span class="comment">// 如上所述，当 x &lt; 0 时，x 不是回文数。</span></span><br><span class="line">        <span class="comment">// 同样地，如果数字的最后一位是 0，为了使该数字为回文，</span></span><br><span class="line">        <span class="comment">// 则其第一位数字也应该是 0</span></span><br><span class="line">        <span class="comment">// 只有 0 满足这一属性</span></span><br><span class="line">        <span class="keyword">if</span> (x &lt; <span class="number">0</span> || (x % <span class="number">10</span> == <span class="number">0</span> &amp;&amp; x != <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">revertedNumber</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (x &gt; revertedNumber) &#123;</span><br><span class="line">            revertedNumber = revertedNumber * <span class="number">10</span> + x % <span class="number">10</span>;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当数字长度为奇数时，我们可以通过 revertedNumber/10 去除处于中位的数字。</span></span><br><span class="line">        <span class="comment">// 例如，当输入为 12321 时，在 while 循环的末尾我们可以得到 x = 12，revertedNumber = 123，</span></span><br><span class="line">        <span class="comment">// 由于处于中位的数字不影响回文（它总是与自己相等），所以我们可以简单地将其去除。</span></span><br><span class="line">        <span class="keyword">return</span> x == revertedNumber || x == revertedNumber / <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>java</tag>
        <tag>力扣</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构</title>
    <url>/archives/79666db.html</url>
    <content><![CDATA[<p>第一章、绪论<br>1.1  数据结构的基本概念<br>1.1.1  基本概念和术语</p>
<ol>
<li>数据<br>数据是信息的载体，是描述客观事物属性性的数、字符及所有能输入到计算机中并被计算机程序识别和处理的符号的集合。数据是计算机程序加工的原料。</li>
<li>数据元素<br>数据元素时数据的基本单位，通常作为一个整体进行考虑和处理。一个数据元素可由若干个数据项组成，数据项是构成数据元素的不可分割的最小单位。例如，学生记录就是一个数据元素，它由学号、姓名、性别等数据项组成。</li>
<li>数据对象<br>数据对象是具有相同性质的数据元素的集合，是数据的一个子集。</li>
<li>数据类型<br>数据类型是一个值的集合和定义在此集合上的一组操作的总称。<br>1）原子类型：其值不可再分的数据类型。<br>2）结构类型：其值可以在分解为若干成分（分量）的数据类型。<br>3）抽象数据类型：抽象数据组织及与之相关的操作。<br>5.数据结构<br>数据结构是相互之间存在一种或多种特定关系的数据元素的集合。在任何问题中，数据元素都不是孤立存在的，它们之间存在某种关系，这种数据元素相互之间的关系称为结构（Structure）。数据结构包括三方面的内容：逻辑结构、存储结构和数据的运算。<br>数据的逻辑结构和存储结构是密不可分的两个方面，一个算法的设计取决于所选定的逻辑结构，而算法的实现依赖于所采用的的存储结构。<br>1.1.2  数据结构三要素</li>
<li>数据的逻辑结构<br>逻辑结构是指数据元素之间的逻辑关系，即从逻辑关系上描述数据。它与数据的存储无关，是独立于计算机的。<br>数据的逻辑结构分为线性结构和非线性结构，<br>1）线性表是典型的线性结构；<br>2）集合、树和图是典型的非线性结构。<br>数据的逻辑结构分类<br>集合：结构中的数据元素之间除“同属一个集合”外，别无其他关系。<br>线性结构：结构中的数据元素之间只存在一对一的关系。<br>树形结构：结构中的数据元素之间存在一对多的关系。<br>图状结构或网状结构：结构中的数据元素之间存在多对多的关系。</li>
<li>数据的存储结构<br>存储结构是指数据结构在计算机中的表示（又称映像），也称物理结构。它包括数据元素的表示和关系的表示。数据的存储结构是用计算机语言实现的逻辑结构，它依赖于计算机语言。数据的存储结构主要有顺序存储、链式存储、索引存储和散列存储。<br>1）顺序存储：把逻辑上相邻的元素存储在物理位置上也相邻的存储单元中，元素之间的关系由存储单元的邻接关系来体现。<br>（1）优点：可以实现随机存取，每个元素占用最少的存储空间；<br>（2）缺点：只能使用相邻的一整块存储单元，因此可能产生较多的外部碎片。<br>2）链式存储：不要求逻辑上相邻的元素在物理位置上也相邻，借助指示元素存储地址的指针来表示元素之间的逻辑关系。<br>（1）优点：不会出现碎片现象，能充分利用所有存储单元；<br>（2）缺点：每个元素因存储指针而占用额外的存储空间，且只能实现顺序存取。<br>3）索引存储：在存储元素信息的同时，还建立附加的索引表。索引表中的每项称为索引项，索引项的一般形式是（关键字，地址）。<br>（1）优点：检索速度快；<br>（2）缺点：附加的索引表额外占用存储空间。另外，增加和删除数据时也要修改索引表，因而会花费较多时间。<br>4）散列存储：根据元素的关键字直接计算出该元素的存储地址，又称哈希（Hash）存储。<br>（1）优点：检索、增加和删除结点的操作都很快；<br>（2）缺点：若散列函数不好，则可能出现元素存储单元的冲突，而解决冲突会增加时间和空间开销。<br>3.数据的运算<br>施加在数据上的运算包括运算的定义和实现。运算的定义是针对逻辑结构的，指出运算的功能；运算的实现是针对存储结构的，指出运算的具体操作步骤。<br>1.2  算法和算法的评价<br>1.2.1  算法的基本概念<br>算法是对特定问题求解步骤的一种描述，它是指令的有限序列，其中每条指令表示一个或多个操作。此外，一个算法还具有下列5个重要特性：<br>1）有穷性：一个算法必须总在执行有穷步之后结束，且每一步都可在有穷时间内完成。<br>2）确定性：算法中每条指令必须有确切的含义，对于相同的输入只能得出相同的输出。<br>3）可行性：算法中描述的操作都可以通过已经实现的基本运算执行有限次来实现。<br>4）输入：一个算法有零个或多个输入，这些输入取自于某个特定的对象的集合。<br>5）输出：一个算法有一个或多个输出，这些输出是与输入有着某种特定关系的量。<br>通常，设计一个“好”的算法应考虑以下目标：<br>1）正确性：算法应能够正确地解决求解问题。<br>2）可读性：算法应具有良好的可读性。<br>3）健壮性：输入非法数据时，算法能适当地做出反应或进行处理。<br>4）高效率和低存储量需求：效率指算法执行时间，存储量需求指算法执行过程中所需要的最大存储空间。<br>1.2.2  算法效率的度量<br>1.时间复杂度<br>一个语句的频度是指该语句在算法中被重复执行的次数。算法中所有语句的频度之和记为T(n)，它是该算法问题规模 n 的函数，时间复杂度主要分析T(n)的数量级。算法中基本运算（最深层循环内的语句）的频度与T(n)同数量级，因此通常采用算法中基本运算的频度 f(n) 来分析算法的时间复杂度。因此，算法的时间复杂度记为<br>T(n)=Of(n)<br>式中，O的含义是T(n)的数量级，其严格的数学定义是：若T(n)和 f(n)是定义在正整数集合上的两个函数，则存在正常数C和n₀，使得当n≥n₀时，都满足0≤T(n)≤Cf(n)<br>一般总是考虑在最坏情况下的时间复杂度，以保证算法的运行时间不会比它更长。<br>在分析一个程序的时间复杂性时，有以下两条规则：<br>a) 加法规则<pre><code>         T(n) = T₁(n) + T₂(n) = O(f(n)) + O(g(n)) = O(max(f(n)),g(n)))
</code></pre>b) 乘法规则<br>T(n) = T₁(n) × T₂(n) = O(f(n)) × O(g(n)) = O((f(n) × g(n))<br>常见的渐近时间复杂度为<br>O(1) &lt; O(log₂n) &lt; O(nlog₂n) &lt; O(n²) &lt; O(n³) &lt; O(2ⁿ) &lt; O(n!) &lt; O(nⁿ）<br>2.空间复杂度<br>算法的空间复杂度S(n)定义为该算法所耗费的存储空间，它是问题规模 n 的函数。记为<br>S(n) = O(g(n))<br>一个程序在执行时除了需要存储空间来存放本身所用的指令、常数、变量和输入数据外，还需要一些对数据进行操作的工作单元和存储一些为实现计算所需信息的辅助空间。若输入数据所占空间只取决于问题本身，和算法无关，则只需分析出输入和程序之外的额外空间。<br>算法原地工作是指算法所需的辅助空间为常量，即 O(1)。</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>787.归并排序</title>
    <url>/archives/abb4b35.html</url>
    <content><![CDATA[<h1 id="归并排序模板"><a href="#归并排序模板" class="headerlink" title="归并排序模板"></a>归并排序模板</h1><h2 id="C-模板"><a href="#C-模板" class="headerlink" title="C++模板"></a>C++模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = (l + r)/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">merge_sort</span>(q, l, mid);</span><br><span class="line">    <span class="built_in">merge_sort</span>(q, mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>, i = l, j = mid + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">        <span class="keyword">if</span> (q[i] &lt;= q[j]) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">        <span class="keyword">else</span> tmp[k ++ ] = q[j ++ ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= r) tmp[k ++ ] = q[j ++ ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = l, j = <span class="number">0</span>; i &lt;= r; i ++, j ++ ) q[i] = tmp[j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="C模板"><a href="#C模板" class="headerlink" title="C模板"></a>C模板</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span>&#123;</span><br><span class="line">    <span class="type">int</span> tmp[N];</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> mid = (l+r)/<span class="number">2</span>; </span><br><span class="line">    </span><br><span class="line">    merge_sort(q, l, mid);</span><br><span class="line">    merge_sort(q, mid+<span class="number">1</span>, r);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> k=<span class="number">0</span>, i=l, j=mid+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)   </span><br><span class="line">        <span class="keyword">if</span>(q[i] &lt;= q[j]) tmp[k++] = q[i++];</span><br><span class="line">        <span class="keyword">else</span> tmp[k++] = q[j++];</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) tmp[k++] = q[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) tmp[k++] = q[j++];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=l,j=<span class="number">0</span>; i &lt;= r;i++,j++) q[i]=tmp[j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定你一个长度为 n 的整数数列。</p>
<p>请你使用归并排序对这个数列按照从小到大进行排序。</p>
<p>并将排好序的数列按顺序输出。</p>
<p>输入格式<br>输入共两行，第一行包含整数 n。</p>
<p>第二行包含 n 个整数（所有整数均在 1∼109 范围内），表示整个数列。</p>
<p>输出格式<br>输出共一行，包含 n 个整数，表示排好序的数列。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤100000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>5<br>3 1 2 4 5</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>1 2 3 4 5</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> q[N], tmp[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = (l + r)/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">merge_sort</span>(q, l, mid);</span><br><span class="line">    <span class="built_in">merge_sort</span>(q, mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>, i = l, j = mid + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">        <span class="keyword">if</span> (q[i] &lt;= q[j]) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">        <span class="keyword">else</span> tmp[k ++ ] = q[j ++ ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= r) tmp[k ++ ] = q[j ++ ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = l, j = <span class="number">0</span>; i &lt;= r; i ++, j ++ ) q[i] = tmp[j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line">    <span class="built_in">merge_sort</span>(q, <span class="number">0</span>, n<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,q[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span>&#123;</span><br><span class="line">    <span class="type">int</span> tmp[N];</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> mid = (l+r)/<span class="number">2</span>; </span><br><span class="line">    </span><br><span class="line">    merge_sort(q, l, mid);</span><br><span class="line">    merge_sort(q, mid+<span class="number">1</span>, r);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> k=<span class="number">0</span>, i=l, j=mid+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)   </span><br><span class="line">        <span class="keyword">if</span>(q[i] &lt;= q[j]) tmp[k++] = q[i++];</span><br><span class="line">        <span class="keyword">else</span> tmp[k++] = q[j++];</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) tmp[k++] = q[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) tmp[k++] = q[j++];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=l,j=<span class="number">0</span>; i &lt;= r;i++,j++) q[i]=tmp[j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> q[N];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line">    merge_sort(q, <span class="number">0</span>, n<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i &lt; n; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,q[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>归并排序</tag>
      </tags>
  </entry>
  <entry>
    <title>1代码演示</title>
    <url>/archives/10cc6661.html</url>
    <content><![CDATA[<h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">判断一个整数是否是回文数。</span><br><span class="line">回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</span><br><span class="line"><span class="comment">//转化为字符串实现</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPalindrome</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">reversedStr</span> <span class="operator">=</span> (<span class="keyword">new</span> <span class="title class_">StringBuilder</span>(x + <span class="string">&quot;&quot;</span>)).reverse().toString();</span><br><span class="line">        <span class="keyword">return</span> (x + <span class="string">&quot;&quot;</span>).equals(reversedStr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用数字解决问题</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    bool <span class="title function_">isPalindrome</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="comment">// 特殊情况：</span></span><br><span class="line">        <span class="comment">// 如上所述，当 x &lt; 0 时，x 不是回文数。</span></span><br><span class="line">        <span class="comment">// 同样地，如果数字的最后一位是 0，为了使该数字为回文，</span></span><br><span class="line">        <span class="comment">// 则其第一位数字也应该是 0</span></span><br><span class="line">        <span class="comment">// 只有 0 满足这一属性</span></span><br><span class="line">        <span class="keyword">if</span> (x &lt; <span class="number">0</span> || (x % <span class="number">10</span> == <span class="number">0</span> &amp;&amp; x != <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">revertedNumber</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (x &gt; revertedNumber) &#123;</span><br><span class="line">            revertedNumber = revertedNumber * <span class="number">10</span> + x % <span class="number">10</span>;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当数字长度为奇数时，我们可以通过 revertedNumber/10 去除处于中位的数字。</span></span><br><span class="line">        <span class="comment">// 例如，当输入为 12321 时，在 while 循环的末尾我们可以得到 x = 12，revertedNumber = 123，</span></span><br><span class="line">        <span class="comment">// 由于处于中位的数字不影响回文（它总是与自己相等），所以我们可以简单地将其去除。</span></span><br><span class="line">        <span class="keyword">return</span> x == revertedNumber || x == revertedNumber / <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>java</tag>
        <tag>力扣</tag>
      </tags>
  </entry>
  <entry>
    <title>790.数的三次方根</title>
    <url>/archives/1fa56ed0.html</url>
    <content><![CDATA[<h1 id="二分模板"><a href="#二分模板" class="headerlink" title="二分模板"></a>二分模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">double</span> x)</span> </span>&#123;<span class="comment">/* ... */</span>&#125; <span class="comment">// 检查x是否满足某种性质</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">bsearch_3</span><span class="params">(<span class="type">double</span> l, <span class="type">double</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> eps = <span class="number">1e-6</span>;   <span class="comment">// eps 表示精度，取决于题目对精度的要求</span></span><br><span class="line">    <span class="keyword">while</span> (r - l &gt; eps)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">double</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">check</span>(mid)) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定一个浮点数 n，求它的三次方根。</p>
<p>输入格式<br>共一行，包含一个浮点数 n。</p>
<p>输出格式<br>共一行，包含一个浮点数，表示问题的解。</p>
<p>注意，结果保留 6 位小数。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>−10000≤n≤10000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>1000.00</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>10.000000</p>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p><img src="/images/33780_88604ed2d9-qq_pic_merged_1596934233273.jpg" alt="label"></p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> n,l,r,mid;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;n);</span><br><span class="line">    l=<span class="number">-10000</span>,r=<span class="number">10000</span>;</span><br><span class="line">    <span class="keyword">while</span>(r-l&gt;=<span class="number">1e-8</span>)&#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(mid * mid * mid&lt; n) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.6f&quot;</span>,l);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">double</span> n,l,r,mid;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;n);</span><br><span class="line">    l=<span class="number">-10000</span>,r=<span class="number">10000</span>;</span><br><span class="line">    <span class="keyword">while</span>(r-l&gt;=<span class="number">1e-8</span>)&#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(mid * mid * mid&lt; n) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%0.6f&quot;</span>,l);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>二分排序</tag>
      </tags>
  </entry>
  <entry>
    <title>792. 高精度减法</title>
    <url>/archives/6e837e45.html</url>
    <content><![CDATA[<h1 id="二分模板"><a href="#二分模板" class="headerlink" title="二分模板"></a>二分模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// C = A - B, 满足A &gt;= B, A &gt;= 0, B &gt;= 0</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sub</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A, vector&lt;<span class="type">int</span>&gt; &amp;B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, t = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>(); i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        t = A[i] - t;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; B.<span class="built_in">size</span>()) t -= B[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>((t + <span class="number">10</span>) % <span class="number">10</span>);</span><br><span class="line">        <span class="keyword">if</span> (t &lt; <span class="number">0</span>) t = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> t = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop_back</span>();</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">subtract</span><span class="params">(<span class="type">char</span> s[], <span class="type">char</span> s1[], <span class="type">char</span> s2[], <span class="type">int</span> len)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; len) &#123;</span><br><span class="line">        <span class="keyword">if</span>(s1[i] &lt; s2[i]) &#123;    <span class="comment">//不够减，借位</span></span><br><span class="line">            s1[i] += <span class="number">10</span>;</span><br><span class="line">            s1[i + <span class="number">1</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">        s[i] = s1[i] - s2[i];</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(!s[i]) i--;   <span class="comment">//去掉多余的0，如1000-999=1，s中存储的是1000，多余三个0</span></span><br><span class="line">    <span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);   <span class="comment">//1000-1000=0，s中为0000，避免把所有0都去掉</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">for</span> (  ; i &gt;= <span class="number">0</span>; i--)  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, s[i]);   <span class="comment">//从高位往低位输出</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定两个正整数（不含前导 0），计算它们的差，计算结果可能为负数。</p>
<p>输入格式<br>共两行，每行包含一个整数。</p>
<p>输出格式<br>共一行，包含所求的差。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤整数长度≤10^5</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>32<br>11</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>21</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是否有A&gt;=B </span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; A, vector&lt;<span class="type">int</span>&gt; &amp;B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(A.<span class="built_in">size</span>() != B.<span class="built_in">size</span>()) <span class="keyword">return</span> A.<span class="built_in">size</span>() &gt; B.<span class="built_in">size</span>();  <span class="comment">//直接ruturn 了就不用else</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = A.<span class="built_in">size</span>(); i &gt;= <span class="number">0</span>; i--) <span class="comment">//位数相等</span></span><br><span class="line">        <span class="keyword">if</span>(A[i] != B[i])</span><br><span class="line">            <span class="keyword">return</span> A[i] &gt; B[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vector &lt;<span class="type">int</span>&gt; <span class="built_in">sub</span>(vector&lt;<span class="type">int</span>&gt;&amp; A, vector&lt;<span class="type">int</span>&gt; &amp;B)</span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t = A[i] - t;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; B.<span class="built_in">size</span>()) t -= B[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>((t + <span class="number">10</span>) % <span class="number">10</span> ); <span class="comment">// 合而为1</span></span><br><span class="line">        <span class="keyword">if</span>(t &lt; <span class="number">0</span>)  t = <span class="number">1</span>;  <span class="comment">//如果t&lt;0 就需要借一位</span></span><br><span class="line">        <span class="keyword">else</span> t = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop_back</span>();  <span class="comment">//去掉前导0 如003 输出为3</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string a ,b;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; A, B;</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = a.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) A.<span class="built_in">push_back</span>(a[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = b.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) B.<span class="built_in">push_back</span>(b[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">cmp</span>(A,B)) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> C = <span class="built_in">sub</span>(A, B);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = C.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, C[i]);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> C = <span class="built_in">sub</span>(B, A);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = C.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, C[i]);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> s[N], s1[N], s2[N];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">reverse</span><span class="params">(<span class="type">char</span> s[], <span class="type">int</span> len)</span> &#123;  <span class="comment">//将数组反过来,从低位开始减</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) s[i] -= <span class="string">&#x27;0&#x27;</span>;   <span class="comment">//将&#x27;1&#x27;变成1</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>, j = len - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j) &#123;</span><br><span class="line">        <span class="type">char</span> c = s[i];</span><br><span class="line">        s[i] = s[j];</span><br><span class="line">        s[j] = c;</span><br><span class="line">        i++, j--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">subtract</span><span class="params">(<span class="type">char</span> s[], <span class="type">char</span> s1[], <span class="type">char</span> s2[], <span class="type">int</span> len)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; len) &#123;</span><br><span class="line">        <span class="keyword">if</span>(s1[i] &lt; s2[i]) &#123;    <span class="comment">//不够减，借位</span></span><br><span class="line">            s1[i] += <span class="number">10</span>;</span><br><span class="line">            s1[i + <span class="number">1</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">        s[i] = s1[i] - s2[i];</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(!s[i]) i--;   <span class="comment">//去掉多余的0，如1000-999=1，s中存储的是1000，多余三个0</span></span><br><span class="line">    <span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);   <span class="comment">//1000-1000=0，s中为0000，避免把所有0都去掉</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">for</span> (  ; i &gt;= <span class="number">0</span>; i--)  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, s[i]);   <span class="comment">//从高位往低位输出</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s%s&quot;</span>, s1, s2);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> len1 = <span class="built_in">strlen</span>(s1);</span><br><span class="line">    <span class="type">int</span> len2 = <span class="built_in">strlen</span>(s2);</span><br><span class="line">    <span class="type">int</span> len = len1 &gt;= len2 ? len1 : len2;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> sign = <span class="number">1</span>;   <span class="comment">//标志正负，1正0负</span></span><br><span class="line">    <span class="keyword">if</span>(len2 &gt; len1)  sign = <span class="number">0</span>;   <span class="comment">//判断s2大还是s1大，s2大答案为负</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(len1 == len2) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123; </span><br><span class="line">            <span class="keyword">if</span>(s1[i] != s2[i]) &#123;     <span class="comment">//找到第一位不一样的，s1大就是正，s2大就是负</span></span><br><span class="line">                <span class="keyword">if</span>(s1[i] &lt; s2[i]) &#123; </span><br><span class="line">                    sign = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!sign)  <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);   <span class="comment">//答案为负需要输出负号</span></span><br><span class="line">    reverse(s1, len1);</span><br><span class="line">    reverse(s2, len2);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!sign)  subtract(s, s2, s1, len);   <span class="comment">//s2大就拿s2减s1最后加个负号</span></span><br><span class="line">    <span class="keyword">else</span>  subtract(s, s1, s2, len);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>高精度</tag>
      </tags>
  </entry>
  <entry>
    <title>791.高精度加法</title>
    <url>/archives/381a3338.html</url>
    <content><![CDATA[<h1 id="二分模板"><a href="#二分模板" class="headerlink" title="二分模板"></a>二分模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// C = A + B, A &gt;= 0, B &gt;= 0</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">add</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A, vector&lt;<span class="type">int</span>&gt; &amp;B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (A.<span class="built_in">size</span>() &lt; B.<span class="built_in">size</span>()) <span class="keyword">return</span> <span class="built_in">add</span>(B, A);</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>(); i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        t += A[i];</span><br><span class="line">        <span class="keyword">if</span> (i &lt; B.<span class="built_in">size</span>()) t += B[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (t) C.<span class="built_in">push_back</span>(t);</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// C = A + B, A &gt;= 0, B &gt;= 0</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">char</span> c[], <span class="type">char</span> a[], <span class="type">char</span> b[], <span class="type">int</span> len)</span>&#123;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; len) &#123;           <span class="comment">//根据你们人类的习惯，先从个位数开始加</span></span><br><span class="line">        c[i] = (c[i] + a[i] + b[i]) % <span class="string">&#x27;0&#x27;</span>;  <span class="comment">//数组中存储的是字符串，相加的是ASCLL码中所对应的数值；%48，&#x27;1&#x27;实际上是49</span></span><br><span class="line">		<span class="keyword">if</span>(c[i] &gt; <span class="number">9</span>) &#123;     <span class="comment">//%48之后，s中存储的就是实际意义上的1，2，3了</span></span><br><span class="line">            c[i + <span class="number">1</span>]++;</span><br><span class="line">            c[i] %= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="keyword">if</span>(!c[i]) i--;   <span class="comment">//去掉多余的0，如4+5=9，i++，运算后i=1，s[1]=0,不能输出</span></span><br><span class="line">    <span class="keyword">for</span> (  ; i &gt;= <span class="number">0</span>; i--)  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, c[i]);   <span class="comment">//因为从低位开始加的，需要倒过来输出</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定两个正整数（不含前导 0），计算它们的和。</p>
<p>输入格式<br>共两行，每行包含一个整数。</p>
<p>输出格式<br>共一行，包含所求的和。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤整数长度≤100000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>12<br>23</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>35</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">add</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A, vector&lt;<span class="type">int</span>&gt; &amp;B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (A.<span class="built_in">size</span>() &lt; B.<span class="built_in">size</span>()) <span class="keyword">return</span> <span class="built_in">add</span>(B, A);<span class="comment">//为了方便计算，让A中保存较长的数字， B中保存较短的数字</span></span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;<span class="comment">//保存结果的数组</span></span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;<span class="comment">//进位，开始时是0</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>(); i ++ )<span class="comment">//依次计算每一位</span></span><br><span class="line">    &#123;</span><br><span class="line">        t += A[i];<span class="comment">//加上 A 的第 i 位上的数字</span></span><br><span class="line">        <span class="keyword">if</span> (i &lt; B.<span class="built_in">size</span>()) t += B[i];<span class="comment">//加上 B 的第 i 位上的数字</span></span><br><span class="line">        C.<span class="built_in">push_back</span>(t % <span class="number">10</span>); <span class="comment">//C 中放入结果</span></span><br><span class="line">        t /= <span class="number">10</span>;<span class="comment">//t 更新成进位</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (t) C.<span class="built_in">push_back</span>(t);<span class="comment">//最后如果进位上有数，放进结果数组</span></span><br><span class="line">    <span class="keyword">return</span> C;<span class="comment">//返回结果</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string a, b;<span class="comment">//以字符串形式保存输入的两个整数</span></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; A, B;<span class="comment">//保存两个整数的数组</span></span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;<span class="comment">//接收输入</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = a.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i -- ) A.<span class="built_in">push_back</span>(a[i] - <span class="string">&#x27;0&#x27;</span>);<span class="comment">//倒序存储第一个数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = b.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i -- ) B.<span class="built_in">push_back</span>(b[i] - <span class="string">&#x27;0&#x27;</span>);<span class="comment">//倒序存储第二个数</span></span><br><span class="line">    <span class="keyword">auto</span> C = <span class="built_in">add</span>(A, B);<span class="comment">//调用加和函数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = C.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i -- ) cout &lt;&lt; C[i];<span class="comment">//倒序输出C中的数字</span></span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> s[N], s1[N], s2[N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>, s1, s2);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> len1 = <span class="built_in">strlen</span>(s1);</span><br><span class="line">    <span class="type">int</span> len2 = <span class="built_in">strlen</span>(s2);</span><br><span class="line">    <span class="type">int</span> len = len1 &gt; len2 ? len1 : len2;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>, j = len1 - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j) &#123;        <span class="comment">//把两个数组反过来，好进位</span></span><br><span class="line">        <span class="type">char</span> c = s1[i];   </span><br><span class="line">        s1[i] = s1[j];</span><br><span class="line">        s1[j] = c;</span><br><span class="line">        i++, j--;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    i = <span class="number">0</span>, j = len2 - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j) &#123;</span><br><span class="line">        <span class="type">char</span> c = s2[i];</span><br><span class="line">        s2[i] = s2[j];</span><br><span class="line">        s2[j] = c;</span><br><span class="line">        i++, j--;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; len) &#123;           <span class="comment">//根据你们人类的习惯，先从个位数开始加</span></span><br><span class="line">        s[i] = (s[i] + s1[i] + s2[i]) % <span class="string">&#x27;0&#x27;</span>;   <span class="comment">//数组中存储的是字符串，相加的是ASCLL码中所对应的数值；%48，&#x27;1&#x27;实际上是49</span></span><br><span class="line">        <span class="keyword">if</span>(s[i] &gt; <span class="number">9</span>) &#123;     <span class="comment">//%48之后，s中存储的就是实际意义上的1，2，3了</span></span><br><span class="line">            s[i + <span class="number">1</span>]++;</span><br><span class="line">            s[i] %= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="keyword">if</span>(!s[i]) i--;   <span class="comment">//去掉多余的0，如4+5=9，i++，运算后i=1，s[1]=0,不能输出</span></span><br><span class="line">    <span class="keyword">for</span> (  ; i &gt;= <span class="number">0</span>; i--)  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, s[i]);   <span class="comment">//因为从低位开始加的，需要倒过来输出</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> c[N], a[N], b[N];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">reverse</span><span class="params">(<span class="type">char</span> c[],<span class="type">int</span> len)</span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>, j = len - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j) &#123;        <span class="comment">//把两个数组反过来，从低位开始相加 </span></span><br><span class="line">        <span class="type">char</span> k = c[i];   </span><br><span class="line">        c[i] = c[j];</span><br><span class="line">        c[j] = k;</span><br><span class="line">        i++, j--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">char</span> c[], <span class="type">char</span> a[], <span class="type">char</span> b[], <span class="type">int</span> len)</span>&#123;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; len) &#123;           <span class="comment">//根据你们人类的习惯，先从个位数开始加</span></span><br><span class="line">        c[i] = (c[i] + a[i] + b[i]) % <span class="string">&#x27;0&#x27;</span>;   <span class="comment">//数组中存储的是字符串，相加的是ASCLL码中所对应的数值；%48，&#x27;1&#x27;实际上是49</span></span><br><span class="line">		<span class="keyword">if</span>(c[i] &gt; <span class="number">9</span>) &#123;     <span class="comment">//%48之后，s中存储的就是实际意义上的1，2，3了</span></span><br><span class="line">            c[i + <span class="number">1</span>]++;</span><br><span class="line">            c[i] %= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="keyword">if</span>(!c[i]) i--;   <span class="comment">//去掉多余的0，如4+5=9，i++，运算后i=1，s[1]=0,不能输出</span></span><br><span class="line">    <span class="keyword">for</span> (  ; i &gt;= <span class="number">0</span>; i--)  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, c[i]);   <span class="comment">//因为从低位开始加的，需要倒过来输出</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> len1 = <span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="type">int</span> len2 = <span class="built_in">strlen</span>(b);</span><br><span class="line">    <span class="type">int</span> len = len1 &gt; len2 ? len1 : len2;</span><br><span class="line">    </span><br><span class="line">    reverse(a,len1);</span><br><span class="line">	reverse(b,len2); </span><br><span class="line">    </span><br><span class="line">   	add(c,a,b,len);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>高精度</tag>
      </tags>
  </entry>
  <entry>
    <title>788.逆序对的数量</title>
    <url>/archives/b1caa28e.html</url>
    <content><![CDATA[<h1 id="归并排序模板"><a href="#归并排序模板" class="headerlink" title="归并排序模板"></a>归并排序模板</h1><h2 id="C-模板"><a href="#C-模板" class="headerlink" title="C++模板"></a>C++模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">LL <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = (l + r)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    LL res = <span class="built_in">merge_sort</span>(l, mid) + <span class="built_in">merge_sort</span>(mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l, j = mid + <span class="number">1</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(q[i] &lt;= q[j]) tmp[k++] = q[i++];</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            res += mid - i + <span class="number">1</span>;</span><br><span class="line">            tmp[k++] = q[j++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) tmp[k++] = q[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) tmp[k++] = q[j++];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = l, j = <span class="number">0</span>; i &lt;= r; i++, j++) q[i] = tmp[j];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="C模板"><a href="#C模板" class="headerlink" title="C模板"></a>C模板</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">LL <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = (l + r)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    LL res = merge_sort(l, mid) + merge_sort(mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l, j = mid + <span class="number">1</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(q[i] &lt;= q[j]) tmp[k++] = q[i++];</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            res += mid - i + <span class="number">1</span>;</span><br><span class="line">            tmp[k++] = q[j++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) tmp[k++] = q[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) tmp[k++] = q[j++];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=l, j = <span class="number">0</span>; i &lt;= r; i++, j++) q[i] = tmp[j];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定一个长度为 n 的整数数列，请你计算数列中的逆序对的数量。</p>
<p>逆序对的定义如下：对于数列的第 i 个和第 j 个元素，如果满足 i<j 且 a[i]>a[j]，则其为一个逆序对；否则不是。</j></p>
<p>输入格式<br>第一行包含整数 n，表示数列的长度。</p>
<p>第二行包含 n 个整数，表示整个数列。</p>
<p>输出格式<br>输出一个整数，表示逆序对的个数。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤100000，<br>数列中的元素的取值范围 [1,10^9]。</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>6<br>2 3 4 5 6 1</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>5</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> q[N], tmp[N];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = (l + r)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    LL res = <span class="built_in">merge_sort</span>(l, mid) + <span class="built_in">merge_sort</span>(mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l, j = mid + <span class="number">1</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(q[i] &lt;= q[j]) tmp[k++] = q[i++];</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            res += mid - i + <span class="number">1</span>;</span><br><span class="line">            tmp[k++] = q[j++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) tmp[k++] = q[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) tmp[k++] = q[j++];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = l, j = <span class="number">0</span>; i &lt;= r; i++, j++) q[i] = tmp[j];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>,<span class="built_in">merge_sort</span>(<span class="number">0</span>, n - <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> q[<span class="number">100010</span>], tmp[<span class="number">100010</span>];</span><br><span class="line"></span><br><span class="line">LL <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = (l + r)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    LL res = merge_sort(l, mid) + merge_sort(mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l, j = mid + <span class="number">1</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(q[i] &lt;= q[j]) tmp[k++] = q[i++];</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            res += mid - i + <span class="number">1</span>;</span><br><span class="line">            tmp[k++] = q[j++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) tmp[k++] = q[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) tmp[k++] = q[j++];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=l, j = <span class="number">0</span>; i &lt;= r; i++, j++) q[i] = tmp[j];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>( i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, merge_sort(<span class="number">0</span>, n - <span class="number">1</span>));  <span class="comment">//long long型输出要用 %lld</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>归并排序</tag>
      </tags>
  </entry>
  <entry>
    <title>789.数的范围</title>
    <url>/archives/3241765f.html</url>
    <content><![CDATA[<h1 id="二分模板"><a href="#二分模板" class="headerlink" title="二分模板"></a>二分模板</h1><h2 id="C-模板"><a href="#C-模板" class="headerlink" title="C++模板"></a>C++模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;<span class="comment">/* ... */</span>&#125; <span class="comment">// 检查x是否满足某种性质</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 区间[l, r]被划分成[l, mid]和[mid + 1, r]时使用：</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bsearch_1</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">check</span>(mid)) r = mid;    <span class="comment">// check()判断mid是否满足性质</span></span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 区间[l, r]被划分成[l, mid - 1]和[mid, r]时使用：</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bsearch_2</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">check</span>(mid)) l = mid;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="C模板"><a href="#C模板" class="headerlink" title="C模板"></a>C模板</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> <span class="title function_">check</span><span class="params">(<span class="type">int</span> x)</span> &#123;<span class="comment">/* ... */</span>&#125; <span class="comment">// 检查x是否满足某种性质</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 区间[l, r]被划分成[l, mid]和[mid + 1, r]时使用：</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">bsearch_1</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = (l + r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (check(mid)) r = mid;    <span class="comment">// check()判断mid是否满足性质</span></span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 区间[l, r]被划分成[l, mid - 1]和[mid, r]时使用：</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">bsearch_2</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = (l + r + <span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (check(mid)) l = mid;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定一个按照升序排列的长度为 n 的整数数组，以及 q 个查询。</p>
<p>对于每个查询，返回一个元素 k 的起始位置和终止位置（位置从 0 开始计数）。</p>
<p>如果数组中不存在该元素，则返回 -1 -1。</p>
<p>输入格式<br>第一行包含整数 n 和 q，表示数组长度和询问个数。</p>
<p>第二行包含 n 个整数（均在 1∼10000 范围内），表示完整数组。</p>
<p>接下来 q 行，每行包含一个整数 k，表示一个询问元素。</p>
<p>输出格式<br>共 q 行，每行包含两个整数，表示所求元素的起始位置和终止位置。</p>
<p>如果数组中不存在该元素，则返回 -1 -1。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤100000<br>1≤q≤10000<br>1≤k≤10000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>6 3<br>1 2 2 3 3 4<br>3<br>4<br>5</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>3 4<br>5 5<br>-1 -1</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m; </span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">            <span class="type">int</span> mid = (l+r)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(q[mid] &gt;=x ) r = mid;</span><br><span class="line">            <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(q[l]!=x) <span class="built_in">printf</span>(<span class="string">&quot;-1 -1\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,l);</span><br><span class="line">            </span><br><span class="line">            <span class="type">int</span> l=<span class="number">0</span>, r=n<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">                <span class="type">int</span> mid = (l + r + <span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span>(q[mid]&lt;=x) l=mid;</span><br><span class="line">                <span class="keyword">else</span> r = mid - <span class="number">1</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,l);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m; </span><br><span class="line"><span class="type">int</span> q[<span class="number">100010</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">            <span class="type">int</span> mid = (l+r)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(q[mid] &gt;=x ) r = mid;</span><br><span class="line">            <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(q[l]!=x) <span class="built_in">printf</span>(<span class="string">&quot;-1 -1\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,l);</span><br><span class="line">            </span><br><span class="line">            <span class="type">int</span> l=<span class="number">0</span>, r=n<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">                <span class="type">int</span> mid = (l + r + <span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span>(q[mid]&lt;=x) l=mid;</span><br><span class="line">                <span class="keyword">else</span> r = mid - <span class="number">1</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,l);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>视频是为了更好地理解二分算法<blockquote>
<iframe width="100%" height="615" src="//player.bilibili.com/player.html?aid=841423368&bvid=BV1d54y1q7k7&cid=216724849&page=1&high_quality=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe>


</blockquote>
</li>
</ul>
]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>二分排序</tag>
      </tags>
  </entry>
  <entry>
    <title>785.快速排序</title>
    <url>/archives/ff8068c0.html</url>
    <content><![CDATA[<h1 id="快排模板"><a href="#快排模板" class="headerlink" title="快排模板"></a>快排模板</h1><h2 id="C-模板"><a href="#C-模板" class="headerlink" title="C++模板"></a>C++模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[(l + r) /<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++; <span class="keyword">while</span>(q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j --; <span class="keyword">while</span>(q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span>(i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">quick_sort</span>(q, l, j);</span><br><span class="line">    <span class="built_in">quick_sort</span>(q, j + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="C模板"><a href="#C模板" class="headerlink" title="C模板"></a>C模板</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[(l + r) /<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++; <span class="keyword">while</span>(q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j --; <span class="keyword">while</span>(q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span>(i &lt; j)&#123;</span><br><span class="line">            <span class="type">int</span> t = q[i];</span><br><span class="line">            q[i] = q[j];</span><br><span class="line">            q[j] = t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    quick_sort(q, l, j);</span><br><span class="line">    quick_sort(q, j + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定你一个长度为 n 的整数数列。</p>
<p>请你使用快速排序对这个数列按照从小到大进行排序。</p>
<p>并将排好序的数列按顺序输出。</p>
<p>输入格式<br>输入共两行，第一行包含整数 n。</p>
<p>第二行包含 n 个整数（所有整数均在 1∼109 范围内），表示整个数列。</p>
<p>输出格式<br>输出共一行，包含 n 个整数，表示排好序的数列。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤100000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>5<br>3 1 2 4 5</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>1 2 3 4 5</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[(l + r) /<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++; <span class="keyword">while</span>(q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j --; <span class="keyword">while</span>(q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span>(i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">quick_sort</span>(q, l, j);</span><br><span class="line">    <span class="built_in">quick_sort</span>(q, j + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">quick_sort</span>(q, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,q[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[(l + r) /<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++; <span class="keyword">while</span>(q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j --; <span class="keyword">while</span>(q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span>(i &lt; j)&#123;</span><br><span class="line">            <span class="type">int</span> t = q[i];</span><br><span class="line">            q[i] = q[j];</span><br><span class="line">            q[j] = t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    quick_sort(q, l, j);</span><br><span class="line">    quick_sort(q, j + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> q[N];</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line"></span><br><span class="line">    quick_sort(q, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,q[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>快速排序</tag>
      </tags>
  </entry>
  <entry>
    <title>786.第K个数</title>
    <url>/archives/e4e8a895.html</url>
    <content><![CDATA[<h1 id="快排模板"><a href="#快排模板" class="headerlink" title="快排模板"></a>快排模板</h1><h2 id="C-模板"><a href="#C-模板" class="headerlink" title="C++模板"></a>C++模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l == r) <span class="keyword">return</span> q[l];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[(l + r)/<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++ ; <span class="keyword">while</span> (q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j -- ; <span class="keyword">while</span> (q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j - l + <span class="number">1</span> &gt;= k) <span class="keyword">return</span> <span class="built_in">quick_sort</span>(q, l, j, k);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">quick_sort</span>(q, j + <span class="number">1</span>, r, k - (j - l + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="C模板"><a href="#C模板" class="headerlink" title="C模板"></a>C模板</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> k)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (l == r) <span class="keyword">return</span> q[l];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[(l + r)/<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++ ; <span class="keyword">while</span> (q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j -- ; <span class="keyword">while</span> (q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j)&#123;</span><br><span class="line">            <span class="type">int</span> temp = q[i];</span><br><span class="line">            q[i] = q[j];</span><br><span class="line">            q[j] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j - l + <span class="number">1</span> &gt;= k) <span class="keyword">return</span> quick_sort(q, l, j, k);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> quick_sort(q, j + <span class="number">1</span>, r, k - (j - l + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定一个长度为 n 的整数数列，以及一个整数 k，请用快速选择算法求出数列从小到大排序后的第 k 个数。</p>
<p>输入格式<br>第一行包含两个整数 n 和 k。</p>
<p>第二行包含 n 个整数（所有整数均在 1∼109 范围内），表示整数数列。</p>
<p>输出格式<br>输出一个整数，表示数列的第 k 小数。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤100000,<br>1≤k≤n；</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>5 3<br>2 4 1 5 3</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>3</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l == r) <span class="keyword">return</span> q[l];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[(l + r)/<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++ ; <span class="keyword">while</span> (q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j -- ; <span class="keyword">while</span> (q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j - l + <span class="number">1</span> &gt;= k) <span class="keyword">return</span> <span class="built_in">quick_sort</span>(q, l, j, k);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">quick_sort</span>(q, j + <span class="number">1</span>, r, k - (j - l + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="built_in">quick_sort</span>(q, <span class="number">0</span>, n - <span class="number">1</span>, k));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> k)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (l == r) <span class="keyword">return</span> q[l];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[(l + r)/<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++ ; <span class="keyword">while</span> (q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j -- ; <span class="keyword">while</span> (q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j)&#123;</span><br><span class="line">            <span class="type">int</span> temp = q[i];</span><br><span class="line">            q[i] = q[j];</span><br><span class="line">            q[j] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j - l + <span class="number">1</span> &gt;= k) <span class="keyword">return</span> quick_sort(q, l, j, k);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> quick_sort(q, j + <span class="number">1</span>, r, k - (j - l + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    <span class="type">int</span> q[N];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,quick_sort(q, <span class="number">0</span>, n - <span class="number">1</span>, k));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>快速排序</tag>
      </tags>
  </entry>
  <entry>
    <title>阿猫阿狗</title>
    <url>/archives/22323d85.html</url>
    <content><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="//music.163.com/outchain/player?type=2&id=27483200&auto=1&height=32"></iframe>

<hr>
<ul>
<li>故事讲到这里已经结束了。</li>
<li>故事里的他们每个人真真切切地活在我们周围，生动而鲜活。他们生活在社会的底层，生似蜉蝣，朝生暮死，不饮不食，自己熬度的百年光阴只是别人的弹指一挥。家长里短，为了一栋房子，一个学位，拼了命加班工作努力奔波，大家关心都是口袋几金，家里几平，孩子几个，这些俗不可耐的事情只能发生在人间。奔一辈子大房子，死后几平小墓地。大人物最懂开玩笑，谁都很重要。他们说我们都是社会的一颗螺丝钉，谁都不能缺少，人人有责。这就是要你坚持挺着，并且架上虚无缥缈的社会义务。然而现实阿猫阿狗都随水流一般，冲向下水道，在底处，并没什么不同，有眼有口，却没有风景和话语权。《2012》中臃肿的富人靠交钱就可以上诺亚方舟，而阿猫阿狗“面目模糊”，甚至“不入镜头”。<br>也或许，我们都是阿猫阿狗。</li>
<li>这个世界能有多公平呢？它不会因为你干最脏最累的活就给你最高工资，因为脏和累不是评判工资的标准；也不会因为你经历了风雨人生就给你幸福生活，更不会因为你一句“我没有功劳也有苦劳”就给你多发几万块年终奖。</li>
<li>“这首歌用高亢、坚决的韵律和呐喊抵触了歌词的负面情绪，明白这一切，讲出这些认识，讽刺挖苦，消极，但不怠慢。现在社会提倡积极，可盲目的积极值得提倡吗？消极未必就不是好事，消极能够更清醒一些，而清醒一些，活的明白一些，做一些事情也更能区分意义和价值。‘’就像在说即使社会残酷如此，阿猫阿狗依然奋进，因为知道他们的烈焰和利刃必须撕裂所有的痛苦和苦难，切开所有阻挡和荆棘， 生活才能得以继续。<br>最后以一首小诗结尾，但愿阿猫阿狗历经人生辗转之后，有一份安稳的生活。</li>
<li>“愿风裁取每一粒微尘</li>
<li>愿灵魂抵达记忆的尽头</li>
<li>愿一切的浩瀚都归于渺小</li>
<li>愿每身孤独都拥抱共鸣</li>
<li>愿衣襟带花</li>
<li>愿岁月风平。</li>
</ul>
<hr>
]]></content>
      <tags>
        <tag>随想</tag>
      </tags>
  </entry>
  <entry>
    <title>分享</title>
    <url>/archives/4f2a7d08.html</url>
    <content><![CDATA[<h1 id="一只特立独行的猪"><a href="#一只特立独行的猪" class="headerlink" title="一只特立独行的猪"></a>一只特立独行的猪</h1><ul>
<li>插队的时候，我喂过猪、也放过牛。假如没有人来管，这两种动物也完全知道该怎样生活。它们会自由自在地闲逛，饥则食渴则饮，春天来临时还要谈谈爱情；这样一来，它们的生活层次很低，完全乏善可陈。人来了以后，给它们的生活做出了安排：每一头牛和每一口猪的生活都有了主题。就它们中的大多数而言，这种生活主题是很悲惨的：前者的主题是干活，后者的主题是长肉。我不认为这有什么可抱怨的，因为我当时的生活也不见得丰富了多少，除了八个样板戏，也没有什么消遣。有极少数的猪和牛，它们的生活另有安排。以猪为例，种猪和母猪除了吃，还有别的事可干。就我所见，它们对这些安排也不大喜欢。种猪的任务是交配，换言之，我们的政策准许它当个花花公子。但是疲惫的种猪往往摆出一种肉猪（肉猪是阉过的）才有的正人君子架势，死活不肯跳到母猪背上去。母猪的任务是生崽儿，但有些母猪却要把猪崽儿吃掉。总的来说，人的安排使猪痛苦不堪。但它们还是接受了：猪总是猪啊。</li>
</ul>
<ul>
<li>对生活做种种设置是人特有的品性。不光是设置动物，也设置自己。我们知道，在古希腊有个斯巴达，那里的生活被设置得了无生趣，其目的就是要使男人成为亡命战士，使女人成为生育机器，前者像些斗鸡，后者像些母猪。这两类动物是很特别的，但我以为，它们肯定不喜欢自己的生活。但不喜欢又能怎么样？人也好，动物也罢，都很难改变自己的命运。</li>
</ul>
<ul>
<li>以下谈到的一只猪有些与众不同。我喂猪时，它已经有四五岁了，从名分上说，它是肉猪，但长得又黑又瘦，两眼炯炯有光。这家伙像山羊一样敏捷，一米高的猪栏一跳就过；它还能跳上猪圈的房顶，这一点又像是猫——所以它总是到处游逛，根本就不在圈里呆着。所有喂过猪的知青都把它当宠儿来对待，它也是我的宠儿——因为它只对知青好，容许他们走到三米之内，要是别的人，它早就跑了。它是公的，原本该劁掉。不过你去试试看，哪怕你把劁猪刀藏在身后，它也能嗅出来，朝你瞪大眼睛，噢噢地吼起来。我总是用细米糠熬的粥喂它，等它吃够了以后，才把糠兑到野草里喂别的猪。其他猪看了嫉妒，一起嚷起来。这时候整个猪场一片鬼哭狼嚎，但我和它都不在乎。吃饱了以后，它就跳上房顶去晒太阳，或者模仿各种声音。它会学汽车响、拖拉机响，学得都很像；有时整天不见踪影，我估计它到附近的村寨里找母猪去了。我们这里也有母猪，都关在圈里，被过度的生育搞得走了形，又脏又臭，它对它们不感兴趣；村寨里的母猪好看一些。它有很多精彩的事迹，但我喂猪的时间短，知道得有限，索性就不写了。总而言之，所有喂过猪的知青都喜欢它，喜欢它特立独行的派头儿，还说它活得潇洒。但老乡们就不这么浪漫，他们说，这猪不正经。领导则痛恨它，这一点以后还要谈到。我对它则不止是喜欢——我尊敬它，常常不顾自己虚长十几岁这一现实，把它叫做“猪兄”。如前所述，这位猪兄会模仿各种声音。我想它也学过人说话，但没有学会——假如学会了，我们就可以做倾心之谈。但这不能怪它。人和猪的音色差得太远了。</li>
</ul>
<ul>
<li>后来，猪兄学会了汽笛叫，这个本领给它招来了麻烦。我们那里有座糖厂，中午要鸣一次汽笛，让工人换班。我们队下地干活时，听见这次汽笛响就收工回来。我的猪兄每天上午十点钟总要跳到房上学汽笛，地里的人听见它叫就回来——这可比糖厂鸣笛早了一个半小时。坦白地说，这不能全怪猪兄，它毕竟不是锅炉，叫起来和汽笛还有些区别，但老乡们却硬说听不出来。领导上因此开了一个会，把它定成了破坏春耕的坏分子，要对它采取专政手段——会议的精神我已经知道了，但我不为它担忧——因为假如专政是指绳索和杀猪刀的话，那是一点门都没有的。以前的领导也不是没试过，一百人也治不住它。狗也没用：猪兄跑起来像颗鱼雷，能把狗撞出一丈开外。谁知这回是动了真格的，指导员带了二十几个人，手拿五四式手枪；副指导员带了十几人，手持看青的火枪，分两路在猪场外的空地上兜捕它。这就使我陷入了内心的矛盾：按我和它的交情，我该舞起两把杀猪刀冲出去，和它并肩战斗，但我又觉得这样做太过惊世骇俗——它毕竟是只猪啊；还有一个理由，我不敢对抗领导，我怀疑这才是问题之所在。总之，我在一边看着。猪兄的镇定使我佩服之极：它很冷静地躲在手枪和火枪的连线之内，任凭人喊狗咬，不离那条线。这样，拿手枪的人开火就会把拿火枪的打死，反之亦然；两头同时开火，两头都会被打死。至于它，因为目标小，多半没事。就这样连兜了几个圈子，它找到了一个空子，一头撞出去了；跑得潇洒之极。以后我在甘蔗地里还见过它一次，它长出了獠牙，还认识我，但已不容我走近了。这种冷淡使我痛心，但我也赞成它对心怀叵测的人保持距离。</li>
</ul>
<ul>
<li>我已经四十岁了，除了这只猪，还没见过谁敢于如此无视对生活的设置。相反，我倒见过很多想要设置别人生活的人，还有对被设置的生活安之若素的人。因为这个原故，我一直怀念这只特立独行的猪。插队的时候，我喂过猪、也放过牛。假如没有人来管，这两种动物也完全知道该怎样生活。它们会自由自在地闲逛，饥则食渴则饮，春天来临时还要谈谈爱情；这样一来，它们的生活层次很低，完全乏善可陈。人来了以后，给它们的生活做出了安排：每一头牛和每一口猪的生活都有了主题。就它们中的大多数而言，这种生活主题是很悲惨的：前者的主题是干活，后者的主题是长肉。我不认为这有什么可抱怨的，因为我当时的生活也不见得丰富了多少，除了八个样板戏，也没有什么消遣。有极少数的猪和牛，它们的生活另有安排。以猪为例，种猪和母猪除了吃，还有别的事可干。就我所见，它们对这些安排也不大喜欢。种猪的任务是交配，换言之，我们的政策准许它当个花花公子。但是疲惫的种猪往往摆出一种肉猪（肉猪是阉过的）才有的正人君子架势，死活不肯跳到母猪背上去。母猪的任务是生崽儿，但有些母猪却要把猪崽儿吃掉。总的来说，人的安排使猪痛苦不堪。但它们还是接受了：猪总是猪啊。</li>
</ul>
<ul>
<li>对生活做种种设置是人特有的品性。不光是设置动物，也设置自己。我们知道，在古希腊有个斯巴达，那里的生活被设置得了无生趣，其目的就是要使男人成为亡命战士，使女人成为生育机器，前者像些斗鸡，后者像些母猪。这两类动物是很特别的，但我以为，它们肯定不喜欢自己的生活。但不喜欢又能怎么样？人也好，动物也罢，都很难改变自己的命运。</li>
</ul>
<ul>
<li>以下谈到的一只猪有些与众不同。我喂猪时，它已经有四五岁了，从名分上说，它是肉猪，但长得又黑又瘦，两眼炯炯有光。这家伙像山羊一样敏捷，一米高的猪栏一跳就过；它还能跳上猪圈的房顶，这一点又像是猫——所以它总是到处游逛，根本就不在圈里呆着。所有喂过猪的知青都把它当宠儿来对待，它也是我的宠儿——因为它只对知青好，容许他们走到三米之内，要是别的人，它早就跑了。它是公的，原本该劁掉。不过你去试试看，哪怕你把劁猪刀藏在身后，它也能嗅出来，朝你瞪大眼睛，噢噢地吼起来。我总是用细米糠熬的粥喂它，等它吃够了以后，才把糠兑到野草里喂别的猪。其他猪看了嫉妒，一起嚷起来。这时候整个猪场一片鬼哭狼嚎，但我和它都不在乎。吃饱了以后，它就跳上房顶去晒太阳，或者模仿各种声音。它会学汽车响、拖拉机响，学得都很像；有时整天不见踪影，我估计它到附近的村寨里找母猪去了。我们这里也有母猪，都关在圈里，被过度的生育搞得走了形，又脏又臭，它对它们不感兴趣；村寨里的母猪好看一些。它有很多精彩的事迹，但我喂猪的时间短，知道得有限，索性就不写了。总而言之，所有喂过猪的知青都喜欢它，喜欢它特立独行的派头儿，还说它活得潇洒。但老乡们就不这么浪漫，他们说，这猪不正经。领导则痛恨它，这一点以后还要谈到。我对它则不止是喜欢——我尊敬它，常常不顾自己虚长十几岁这一现实，把它叫做“猪兄”。如前所述，这位猪兄会模仿各种声音。我想它也学过人说话，但没有学会——假如学会了，我们就可以做倾心之谈。但这不能怪它。人和猪的音色差得太远了。</li>
</ul>
<ul>
<li>后来，猪兄学会了汽笛叫，这个本领给它招来了麻烦。我们那里有座糖厂，中午要鸣一次汽笛，让工人换班。我们队下地干活时，听见这次汽笛响就收工回来。我的猪兄每天上午十点钟总要跳到房上学汽笛，地里的人听见它叫就回来——这可比糖厂鸣笛早了一个半小时。坦白地说，这不能全怪猪兄，它毕竟不是锅炉，叫起来和汽笛还有些区别，但老乡们却硬说听不出来。领导上因此开了一个会，把它定成了破坏春耕的坏分子，要对它采取专政手段——会议的精神我已经知道了，但我不为它担忧——因为假如专政是指绳索和杀猪刀的话，那是一点门都没有的。以前的领导也不是没试过，一百人也治不住它。狗也没用：猪兄跑起来像颗鱼雷，能把狗撞出一丈开外。谁知这回是动了真格的，指导员带了二十几个人，手拿五四式手枪；副指导员带了十几人，手持看青的火枪，分两路在猪场外的空地上兜捕它。这就使我陷入了内心的矛盾：按我和它的交情，我该舞起两把杀猪刀冲出去，和它并肩战斗，但我又觉得这样做太过惊世骇俗——它毕竟是只猪啊；还有一个理由，我不敢对抗领导，我怀疑这才是问题之所在。总之，我在一边看着。猪兄的镇定使我佩服之极：它很冷静地躲在手枪和火枪的连线之内，任凭人喊狗咬，不离那条线。这样，拿手枪的人开火就会把拿火枪的打死，反之亦然；两头同时开火，两头都会被打死。至于它，因为目标小，多半没事。就这样连兜了几个圈子，它找到了一个空子，一头撞出去了；跑得潇洒之极。以后我在甘蔗地里还见过它一次，它长出了獠牙，还认识我，但已不容我走近了。这种冷淡使我痛心，但我也赞成它对心怀叵测的人保持距离。</li>
</ul>
<ul>
<li>我已经四十岁了，除了这只猪，还没见过谁敢于如此无视对生活的设置。相反，我倒见过很多想要设置别人生活的人，还有对被设置的生活安之若素的人。因为这个原故，我一直怀念这只特立独行的猪。</li>
</ul>
<hr>
<h2 id="gt-注：文章取自王小波的《一只特立独行的猪》"><a href="#gt-注：文章取自王小波的《一只特立独行的猪》" class="headerlink" title="&gt; 注：文章取自王小波的《一只特立独行的猪》"></a>&gt; 注：文章取自王小波的《一只特立独行的猪》</h2><blockquote>
<p><strong>除了这只猪，还没见过谁敢于如此无视对生活的设置。相反，我倒见过很多想要设置别人生活的人，还有对被设置的生活安之若素的人。</strong></p>
<p><strong>或许人和猪一样，也是只求自由的本性，“它们会自由自在地闲逛，饥则食渴则饮，春天来临时还要谈谈爱情”，无疑，猪所处的这种自然状态，正如人所追求的自由生活一样，是一种自然的要求和生活方式。</strong></p>
</blockquote>
]]></content>
      <tags>
        <tag>一只特立独行的猪</tag>
        <tag>王小波</tag>
      </tags>
  </entry>
  <entry>
    <title>2019.6.8</title>
    <url>/archives/2ab0d059.html</url>
    <content><![CDATA[<p>知乎上有这么一个话题：<br><span class="p center logo h3 cyan">高考最后一科的最后一刻钟你在想什么？</span><br>2019.6.8.广东高考<br>最后一科是英语，<br>16:50停笔后看了眼时间，<br>合上笔，检查了一下答题卡和答题卷，<br>长舒了一口气，微微靠了靠墙，看向了窗外。<br>那天雨下的很大，夹着雷打。<br>结束后，并没有急着回宿舍收拾东西，<br>来到长廊上，<br><del>看着那时最喜欢的女生慢慢走出校门</del>，<br><del>自己心里清楚</del>，<br><del>也许是最后一次偷偷的看她了</del>!<br>太阳出来的刚刚好，<br>那是的彩虹是我见过最美丽的。<br>一切都结束了，好像一切也才刚刚开始!</p>
<p><img src="/images/gaokao.jpg" alt="gaokao"></p>
]]></content>
      <tags>
        <tag>话题</tag>
      </tags>
  </entry>
  <entry>
    <title>30天习惯养成</title>
    <url>/archives/162bc967.html</url>
    <content><![CDATA[<h1 id="连续断糖30天"><a href="#连续断糖30天" class="headerlink" title="连续断糖30天"></a>连续断糖30天</h1><iframe width="100%" height="615" src="//player.bilibili.com/player.html?aid=431084785&bvid=BV1iG411J7sp&cid=847870856&page=1&high_quality=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>


<h1 id="连续洗30天冷水澡"><a href="#连续洗30天冷水澡" class="headerlink" title="连续洗30天冷水澡"></a>连续洗30天冷水澡</h1><iframe width="100%" height="615" src="//player.bilibili.com/player.html?aid=469111103&bvid=BV1F5411R7jb&cid=720790486&page=1&high_quality=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen " sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe>


<h1 id="《糖-新一代健康杀手-》"><a href="#《糖-新一代健康杀手-》" class="headerlink" title="《糖:新一代健康杀手?》"></a>《糖:新一代健康杀手?》</h1><blockquote>
<p><strong>如果你听到我们每天摄入的糖在很大程度上造成了全球肥胖人数，以及罹患一些当代最常见的慢性疾病的人数激增的话你有何感想？而如果你听到糖就会上瘾，而且在很多你意想不到的食物中都添加了糖，你有何感想？</strong></p>
</blockquote>
<iframe width="100%" height="615" src="//player.bilibili.com/player.html?aid=511278476&bvid=BV17u411r7ff&cid=713323471&page=1&high_quality=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe>]]></content>
      <tags>
        <tag>30天习惯养成</tag>
      </tags>
  </entry>
  <entry>
    <title>APP精品网址导航</title>
    <url>/archives/433943fb.html</url>
    <content><![CDATA[<blockquote>
<p><strong>会不定期更新哦！</strong></p>
</blockquote>
<h1 id="资源下载网站："><a href="#资源下载网站：" class="headerlink" title="资源下载网站："></a>资源下载网站：</h1><p>在线下载Instagram<a href="https://instaer.app/">https://instaer.app/</a></p>
<p>推特视频下载<a href="https://twdown.net/">https://twdown.net/</a>     <a href="https://www.twitterfk.com/">https://www.twitterfk.com/</a></p>
<p>Youtube 下载器<a href="https://yt1s.com/zh-cn314">https://yt1s.com/zh-cn314</a>   <a href="https://zh.savefrom.net/126/">https://zh.savefrom.net/126/</a>  <a href="https://ytop1.com/en146">https://ytop1.com/en146</a></p>
<p>在线下载器<a href="https://www.online-downloader.com/index-Chinese">https://www.online-downloader.com/index-Chinese</a></p>
<p>油管音频下载<a href="https://www.mp3juices.cc/juicefca7e/">https://www.mp3juices.cc/juicefca7e/</a></p>
<p>油管字幕下载 <a href="https://downsub.com/">https://downsub.com/</a></p>
<p>Chrome浏览器插件下载<a href="https://www.chrome666.com/">https://www.chrome666.com/</a></p>
<p>天翼小站<a href="https://yun.hei521.cn/">https://yun.hei521.cn/</a></p>
<p>阿里云盘资源<a href="https://res.yunpan.win/">https://res.yunpan.win/</a></p>
<p>壁纸下载<a href="https://wallhaven.cc/">https://wallhaven.cc/</a></p>
<p>电子书下载<a href="https://zh.z-lib.org/">https://zh.z-lib.org/</a></p>
<p>无损音乐下载<a href="https://www.sq688.com/singer/10001.html">https://www.sq688.com/singer/10001.html</a></p>
<p>番剧下载<a href="https://nyaa.ink/">https://nyaa.ink/</a></p>
<p>动漫下载<a href="https://share.dmhy.org/">https://share.dmhy.org/</a></p>
<p>磁力搜索<a href="https://xn--0tr952eyzisl5a.com/">https://猫和老鼠.com/</a></p>
<h1 id="体育直播："><a href="#体育直播：" class="headerlink" title="体育直播："></a>体育直播：</h1><p>jrs直播<a href="http://www.zglkq.net/">http://www.zglkq.net/</a></p>
<p>jrskan直播<a href="http://www.jrskan.com/?live">http://www.jrskan.com/?live</a></p>
<p>310直播<a href="http://www.310.tv/">http://www.310.tv/</a></p>
<p>球吧网<a href="https://www.ballbar.cc/">https://www.ballbar.cc/</a></p>
<p>JRS直播<a href="http://jrszb222.com/">http://jrszb222.com/</a></p>
<h1 id="工具网站："><a href="#工具网站：" class="headerlink" title="工具网站："></a>工具网站：</h1><p>菜鸟工具<a href="https://c.runoob.com/">https://c.runoob.com/</a></p>
<p>favicon生成器<a href="https://www.favicon.cc/">https://www.favicon.cc/</a></p>
<p>老薛主机<a href="https://www.laoxuehost.com/hosting/">https://www.laoxuehost.com/hosting/</a></p>
<p>必盛云主机<a href="https://www.bisend.cn/">https://www.bisend.cn/</a></p>
<p>域名注册<a href="https://www.godaddy.com/en-sg">https://www.godaddy.com/en-sg</a></p>
<p>可能吧公众号排版器<a href="https://knb.im/mp/">https://knb.im/mp/</a></p>
<p>假名生成器<a href="https://www.fakenamegenerator.com/">https://www.fakenamegenerator.com/</a></p>
<p>临时邮箱<a href="https://www.linshiyouxiang.net/">https://www.linshiyouxiang.net/</a></p>
<p>全平台视频下载<a href="https://weibo.iiilab.com/">https://weibo.iiilab.com/</a></p>
<p>在线工具<a href="http://www.gjw123.com/#">http://www.gjw123.com/#</a></p>
<p>短网址跳转<a href="https://dwztz.com/">https://dwztz.com/</a></p>
<p>二维码梦工厂<a href="http://qrdream.com/">http://qrdream.com/</a></p>
<p>it之家签到<a href="https://fxxkcar.com/ithome.html">https://fxxkcar.com/ithome.html</a></p>
<p>IT之家自动签到程序<a href="https://iewl.herokuapp.com/www/addUser.html">https://iewl.herokuapp.com/www/addUser.html</a></p>
<p>YouTube下载<a href="https://www.y2mate.com/en373">https://www.y2mate.com/en373</a></p>
<p>在线图片去底工具<a href="https://www.aigei.com/bgremover/">https://www.aigei.com/bgremover/</a></p>
<p>iOS安卓来电黄页优化<a href="https://github.com/metowolf/vCards">https://github.com/metowolf/vCards</a></p>
<p>微信聊天记录导出<a href="http://wxbackup.imxfd.com/">http://wxbackup.imxfd.com/</a></p>
<p>极简简历<a href="https://www.polebrief.com/index">https://www.polebrief.com/index</a></p>
<p>简历本<a href="https://www.jianliben.com/">https://www.jianliben.com/</a></p>
<p>文库下载助手<a href="https://imwcr.cn/api/GetDocumentText/">https://imwcr.cn/api/GetDocumentText/</a></p>
<p>极简插件<a href="https://chrome.zzzmh.cn/#/index">https://chrome.zzzmh.cn/#/index</a></p>
<p>油猴脚本<a href="https://greasyfork.org/zh-CN/scripts">https://greasyfork.org/zh-CN/scripts</a></p>
<p>油猴插件<a href="https://www.tampermonkey.net/">https://www.tampermonkey.net/</a></p>
<p>10分钟邮箱<a href="https://10minutemail.net/m/">https://10minutemail.net/m/</a></p>
<p>假电子邮件生成器<a href="https://emailfake.com/">https://emailfake.com/</a></p>
<p>临时邮箱<a href="https://www.moakt.com/">https://www.moakt.com/</a></p>
<p>gmail临时邮箱<a href="https://www.smartnator.com/">https://www.smartnator.com/</a></p>
<p>免费接码<a href="https://mianfeijiema.com/">https://mianfeijiema.com/</a></p>
<p>免费在线接受短信<a href="https://yunjiema.net/">https://yunjiema.net/</a></p>
<p>Listen1音乐播放器<a href="https://listen1.github.io/listen1/">https://listen1.github.io/listen1/</a></p>
<p>图片放大<a href="http://waifu2x.udp.jp/">http://waifu2x.udp.jp/</a></p>
<p>白描<a href="https://web.baimiaoapp.com/">https://web.baimiaoapp.com/</a></p>
<p>PDF处理<a href="https://smallpdf.com/">https://smallpdf.com/</a></p>
<p>App历史版本查询<a href="https://tools.lancely.tech/apple/app-search">https://tools.lancely.tech/apple/app-search</a></p>
<p><a href="https://zh.z-lib.org/">数字图书馆</a></p>
<h1 id="影视网站："><a href="#影视网站：" class="headerlink" title="影视网站："></a>影视网站：</h1><p>泥巴影院午夜场-需魔法上网<a href="https://www.nbys1.tv/index.html">https://www.nbys1.tv/index.html</a></p>
<p>晗剧-韩剧<a href="https://www.hanju.fun/">https://www.hanju.fun/</a></p>
<p>努努影院<a href="https://www.nunuyy1.org/">https://www.nunuyy1.org/</a></p>
<p>蛋蛋赞影院<a href="https://www.dandanzan10.top/">https://www.dandanzan10.top/</a></p>
<p>港剧屋<a href="http://www.gangju5.cc/">http://www.gangju5.cc/</a></p>
<p>TVB云播港剧<a href="http://www.tvyb02.com/">http://www.tvyb02.com/</a></p>
<p>xijing美剧<a href="http://xijing.tv/movie/index">http://xijing.tv/movie/index</a></p>
<p>91日剧<a href="http://www.wwmulu.com/">http://www.wwmulu.com/</a></p>
<p>HDmoli<a href="https://www.hdmoli.com/">https://www.hdmoli.com/</a></p>
<p>哔嘀影视<a href="https://www.btbdys.com/">https://www.btbdys.com/</a></p>
<p>COKEMV<a href="https://cokemv.me/">https://cokemv.me/</a></p>
<p>NO视频<a href="https://www.novipnoad.com/">https://www.novipnoad.com/</a></p>
<p>独播库<a href="https://duboku.ru/">https://duboku.ru/</a></p>
<p>天空影视<a href="https://www.tkys.tv/">https://www.tkys.tv/</a></p>
<p>厂长资源<a href="https://www.qianoo.cn/">https://www.qianoo.cn/</a></p>
<p>555影视<a href="http://www.555dy.vip/">http://www.555dy.vip/</a></p>
<p>剧迷<a href="https://gimytv.app/">https://gimytv.app/</a></p>
<p>低端影视<a href="https://ddrk.me/">https://ddrk.me/</a></p>
<p>LeZhu<a href="http://www.lezhutv.com/">http://www.lezhutv.com/</a></p>
<p>Libvio<a href="https://www.libvio.me/">https://www.libvio.me/</a></p>
<p>真不卡<a href="https://www.zhenbuka5.com/">https://www.zhenbuka5.com/</a></p>
<h1 id="动漫网站："><a href="#动漫网站：" class="headerlink" title="动漫网站："></a>动漫网站：</h1><p>Zzzfun<a href="http://www.zzzfun.com/">http://www.zzzfun.com/</a></p>
<p>omofun动漫<a href="https://omofun.tv/">https://omofun.tv/</a></p>
<p>漫岛动漫<a href="https://www.mandao.tv/">https://www.mandao.tv/</a></p>
<p>Ebb<a href="https://ebb.io/">https://ebb.io/</a></p>
]]></content>
      <tags>
        <tag>APP精品网址导航</tag>
      </tags>
  </entry>
  <entry>
    <title>杂乱无章</title>
    <url>/archives/ddb74602.html</url>
    <content><![CDATA[<iframe width="100%" height="715" src="/img/WeChat_20221009161605.mp4" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen"> </iframe>]]></content>
      <tags>
        <tag>杂乱无章</tag>
      </tags>
  </entry>
  <entry>
    <title>清澈的爱</title>
    <url>/archives/19edc71e.html</url>
    <content><![CDATA[<ul>
<li>陈氏有男儿。</li>
<li>名祥榕。</li>
<li>闽州屏南人士，</li>
<li>遇寇而不畏生死，</li>
<li>热血洒于疆场。</li>
<li>冠三军，</li>
<li>慑外敌。</li>
<li>护中华夏，</li>
<li>震昆仑，</li>
<li>陈母姚氏闻儿绩，</li>
<li>不悲不泣，</li>
<li>傲然挺立，</li>
<li>遂问：“戍边烽火，吾儿勇否？”</li>
<li><p>众将答曰：“勇冠三军，青史留名！”</p>
</li>
<li><p>清澈的爱    只为中国</p>
</li>
<li>————19岁的陈祥榕烈士生前写下的战斗口号</li>
</ul>
]]></content>
      <tags>
        <tag>陈祥榕</tag>
      </tags>
  </entry>
  <entry>
    <title>诗词歌赋</title>
    <url>/archives/c4f018f0.html</url>
    <content><![CDATA[<div class="poem"><div class="poem-title">木兰花·拟古决绝词柬友</div><div class="poem-author">纳兰性德</div><p>人生若只如初见，何事秋风悲画扇。<br>等闲变却故人心，却道故人心易变。<br>骊山语罢清宵半，泪雨霖铃终不怨。<br>何如薄幸锦衣郎，比翼连枝当日愿。</p>
</div>]]></content>
      <tags>
        <tag>诗词歌赋</tag>
      </tags>
  </entry>
</search>
