<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>八一建军节</title>
    <url>/archives/5b435262.html</url>
    <content><![CDATA[<ul>
<li>有人说如果你要写<span class="p h4 red">军旅</span>,</li>
<li>要写战备时找不到的腰带,</li>
<li>写武装过后大口呼吸的空气,</li>
<li>写野炊时的夕阳西下,地上袅袅炊烟,</li>
<li>写夜训抬头望见的繁星点点,</li>
<li>写驻训在山头上的冲锋,</li>
<li>写电话那头哭泣和离别,</li>
<li>写几年时间蜕变成了优秀的战士……</li>
<li>我认为如果你要写军旅,就不能只写军旅,</li>
<li>你要写凌晨的哨音如何刺穿梦境，</li>
<li>写刚到新兵连体能训练后的<psw>《兵心》</psw>,</li>
<li>写检查内务时的紧张感,</li>
<li>写子弹在靶场烧灼的空气,</li>
<li>写五公里终点处的冰镇可乐,</li>
<li>写迷彩服内兜里姑娘的名字,</li>
<li>写<psw>《军中绿花》</psw>与<psw>《驼铃》</psw>,</li>
<li>写熄灯前的泡面和火腿,</li>
<li>写没有尽头的奔跑与夜哨,</li>
<li>写2-4的一轮孤月,</li>
<li>写站岗是望见村落灯火时的羡慕,</li>
<li>写夜岗时你所想念和怀念的人和事,</li>
<li>更要写这一路上的颠沛流离,和那再写也写不出的满身疲惫……</li>
</ul>
<div class="checkbox checked h2"><input type="radio" checked="checked">
            <p><strong>-I Love the Chinese People´s Lib-</strong></p>
            </div>
<div class="checkbox checked h2"><input type="radio" checked="checked">
            <p><strong>-中国人民解放军建军95周年-</strong></p>
            </div>
]]></content>
  </entry>
  <entry>
    <title>无题</title>
    <url>/archives/9b44950b.html</url>
    <content><![CDATA[<ul>
<li>现在的坚持，只是希望以后回想起来的时候想的是「真好，我撑下来了」而不是「要是再…就好了」。</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>md文章中插入</title>
    <url>/archives/3a2b34c.html</url>
    <content><![CDATA[<h1 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h1><p><img src="/images/33780_88604ed2d9-qq_pic_merged_1596934233273.jpg" alt="label"></p>
<iframe width="100%" height="615" src="//player.bilibili.com/player.html?aid=23204013&bvid=BV19p411f7x9&cid=38628219&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>



<h1 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=375588815&amp;bvid=BV1so4y1m7U5&amp;cid=339262048&amp;page=1&amp;high_quality=1&amp;danmaku=0&quot; allowfullscreen=&quot;allowfullscreen&quot; width=&quot;100%&quot; height=&quot;500&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; sandbox=&quot;allow-top-navigation allow-same-origin allow-forms allow-scripts&quot;&gt;&lt;/iframe&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<iframe width="100%" height="615" src="//player.bilibili.com/player.html?aid=646135382&bvid=BV1Re4y1H7g8&cid=852098274&page=1&high_quality=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe>

<iframe width="100%" height="615" src="//player.bilibili.com/player.html?aid=23207325&bvid=BV1Xp411f7vh&cid=38634561&page=1&high_quality=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BILIBILI 地址PC端参数</span><br><span class="line">    &amp;high_quality=1   (1=最高画质 0=最低画质)</span><br><span class="line">    &amp;danmaku=0   (1=打开弹幕 0=关闭弹幕)</span><br><span class="line">iframe 参数</span><br><span class="line">    allowfullscreen=&quot;allowfullscreen&quot; #移动端全屏</span><br><span class="line">    sandbox=&quot;allow-top-navigation allow-same-origin allow-forms allow-scripts&quot; #禁止弹出网页</span><br></pre></td></tr></table></figure>
<p><img src="/images/geshi.jpg" alt="lb"></p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">align</th>
<th style="text-align:left">left right top middle bottom</th>
<th style="text-align:left">不赞成使用。请使用样式代替。规定如何根据周围的元素来对齐此框架。</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">frameborder</td>
<td style="text-align:left">10</td>
<td style="text-align:left">规定是否显示框架周围的边框。</td>
</tr>
<tr>
<td style="text-align:left">height</td>
<td style="text-align:left">pixels%</td>
<td style="text-align:left">规定 iframe 的高度。</td>
</tr>
<tr>
<td style="text-align:left">longdesc</td>
<td style="text-align:left">URL</td>
<td style="text-align:left">规定一个页面，该页面包含了有关iframe 的较长描述。</td>
</tr>
<tr>
<td style="text-align:left">marginheight</td>
<td style="text-align:left">pixels</td>
<td style="text-align:left">定义 iframe的顶部和底部的边距。</td>
</tr>
<tr>
<td style="text-align:left">marginwidth</td>
<td style="text-align:left">pixels</td>
<td style="text-align:left">定义 iframe的左侧和右侧的边距。</td>
</tr>
<tr>
<td style="text-align:left">name</td>
<td style="text-align:left">frame_name</td>
<td style="text-align:left">规定 iframe 的名称。</td>
</tr>
<tr>
<td style="text-align:left">sandbox</td>
<td style="text-align:left">“”allow-formsallow-same-originallow-scriptsallow-top-navigation    启用一系列对 <_iframe> 中内容的额外限制。</_iframe></td>
</tr>
<tr>
<td style="text-align:left">scrolling</td>
<td style="text-align:left">yesnoauto</td>
<td style="text-align:left">规定是否在 iframe中显示滚动条。</td>
</tr>
<tr>
<td style="text-align:left">seamless</td>
<td style="text-align:left">seamless</td>
<td style="text-align:left">规定 <_iframe> 看上去像是包含文档的一部分。</_iframe></td>
</tr>
<tr>
<td style="text-align:left">src</td>
<td style="text-align:left">URL</td>
<td style="text-align:left">规定在 iframe中显示的文档的 URL。</td>
</tr>
<tr>
<td style="text-align:left">srcdoc</td>
<td style="text-align:left">HTML_code</td>
<td style="text-align:left">规定在 <_iframe> 中显示的页面的 HTML 内容。</_iframe></td>
</tr>
<tr>
<td style="text-align:left">width</td>
<td style="text-align:left">pixels%</td>
<td style="text-align:left">定义 iframe 的宽度。</td>
</tr>
</tbody>
</table>
</div>
<hr>
<h1 id="添加网址链接"><a href="#添加网址链接" class="headerlink" title="添加网址链接"></a>添加网址链接</h1><div class="tip warning faa-horizontal animated-hover"><p><a href="https://music.163.com/#/outchain/2/27483200/">网易云</a></p>
</div>
<div class="tag link"><a class="link-card" title="网易云" href="https://music.163.com/#/outchain/2/27483200/"><div class="left"><img src="/archives/3a2b34c.htm/link.png"></div><div class="right"><p class="text">网易云</p><p class="url">https://music.163.com/#/outchain/2/27483200/</p></div></a></div>
<h1 id="外挂标签"><a href="#外挂标签" class="headerlink" title="外挂标签"></a>外挂标签</h1><div class="tip warning faa-horizontal animated-hover"><p><a href="https://akilar.top/posts/615e2dec/">参考网站</a></p>
</div>]]></content>
  </entry>
  <entry>
    <title>&lt;是什么让你突然努力？&gt;</title>
    <url>/archives/7ef2643a.html</url>
    <content><![CDATA[<h1 id="“是什么让你突然努力？”"><a href="#“是什么让你突然努力？”" class="headerlink" title="“是什么让你突然努力？”"></a>“是什么让你突然努力？”</h1><ul>
<li>父亲的低头？</li>
<li>母亲的白发？</li>
<li>亲戚的冷漠？</li>
<li>朋友的离开？</li>
<li>空荡的口袋？</li>
<li>自己的不堪？</li>
<li>是爱而不得？</li>
<li>还是……</li>
<li>她父母说的一套房加20万</li>
<li>加油！陌生人！！！</li>
</ul>
<iframe width="100%" height="615" src="//player.bilibili.com/player.html?aid=558232035&bvid=BV1be4y1k7mP&cid=836789322&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
  </entry>
  <entry>
    <title>C++中vector的基本方法</title>
    <url>/archives/1807c063.html</url>
    <content><![CDATA[<h1 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h1><p>使用vector时，要导入include&lt; vector &gt; 头文件。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">初始化：<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt; <span class="title function_">result</span><span class="params">(nums.size(), <span class="number">0</span>)</span>;</span><br><span class="line"><span class="number">1.</span>push_back   将数据放入<span class="built_in">vector</span>中</span><br><span class="line"><span class="number">2.</span>pop_back    去掉末尾元素</span><br><span class="line"><span class="number">3.</span>at                得到对应下标的元素</span><br><span class="line"><span class="number">4.b</span>egin           得到数组头的指针</span><br><span class="line"><span class="number">5.</span>end             得到数组的最后一个单元+<span class="number">1</span>的指针</span><br><span class="line"><span class="number">6</span>．front         返回数组第一个元素</span><br><span class="line"><span class="number">7.b</span>ack           返回最后一个元素</span><br><span class="line"><span class="number">8.</span>max_size     得到<span class="built_in">vector</span>最大可以是多大</span><br><span class="line"><span class="number">9.</span>capacity       当前<span class="built_in">vector</span>分配的大小</span><br><span class="line"><span class="number">10.</span>size           当前使用数据的大小</span><br><span class="line"><span class="number">11.</span>resize         改变当前使用数据的大小，如果它比当前使用的大，则填充默认值</span><br><span class="line"><span class="number">12.</span>reserve      改变当前vecotr所分配空间的大小</span><br><span class="line"><span class="number">13.</span>erase         删除指针指向的数据项</span><br><span class="line"><span class="number">14.</span>clear          清空当前的<span class="built_in">vector</span></span><br><span class="line"><span class="number">15.</span>rbegin        将<span class="built_in">vector</span>反转后的开始指针返回(其实就是原来的end<span class="number">-1</span>)</span><br><span class="line"><span class="number">16.</span>rend          将<span class="built_in">vector</span>反转构的结束指针返回(其实就是原来的begin<span class="number">-1</span>)</span><br><span class="line"><span class="number">17.</span>empty        判断<span class="built_in">vector</span>是否为空</span><br><span class="line"><span class="number">18.</span>swap         与另一个<span class="built_in">vector</span>交换数据</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;::iterator 迭代器名;     常用语遍历<span class="built_in">vector</span></span><br></pre></td></tr></table></figure>
<p>【注】：<br>1.要注意end方法，其放回的并不是最后一个元素的指针，而是最后一个元素后一位的指针。<br>2.使用每个元素和使用数组时一样，可以直接用下标访问。<br>3.<strong>迭代器</strong>使用示例：<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span> </span>&#123;</span><br><span class="line">	vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line">	a.<span class="built_in">push_back</span>(<span class="number">3</span>);</span><br><span class="line">	a.<span class="built_in">push_back</span>(<span class="number">4</span>);</span><br><span class="line">	vector&lt;<span class="type">int</span>&gt;::iterator it;</span><br><span class="line">	<span class="keyword">for</span>(it=a.<span class="built_in">begin</span>();it!=a.<span class="built_in">end</span>();it++)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,*it);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="使用sort-函数对vector中的元素排序"><a href="#使用sort-函数对vector中的元素排序" class="headerlink" title="使用sort()函数对vector中的元素排序"></a>使用sort()函数对vector中的元素排序</h1><p>假设容器中有若干元素：<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; nums;</span><br><span class="line"><span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(),nums.<span class="built_in">end</span>());<span class="comment">//sort函数默认升序排序</span></span><br></pre></td></tr></table></figure><br>【注】：使用sort()要导入algorithm：#include &lt; algorithm &gt;</p>
]]></content>
      <tags>
        <tag>C++语言基础</tag>
      </tags>
  </entry>
  <entry>
    <title>788.逆序对的数量</title>
    <url>/archives/b1caa28e.html</url>
    <content><![CDATA[<h1 id="归并排序模板"><a href="#归并排序模板" class="headerlink" title="归并排序模板"></a>归并排序模板</h1><h2 id="C-模板"><a href="#C-模板" class="headerlink" title="C++模板"></a>C++模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">LL <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = (l + r)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    LL res = <span class="built_in">merge_sort</span>(l, mid) + <span class="built_in">merge_sort</span>(mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l, j = mid + <span class="number">1</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(q[i] &lt;= q[j]) tmp[k++] = q[i++];</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            res += mid - i + <span class="number">1</span>;</span><br><span class="line">            tmp[k++] = q[j++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) tmp[k++] = q[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) tmp[k++] = q[j++];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = l, j = <span class="number">0</span>; i &lt;= r; i++, j++) q[i] = tmp[j];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="C模板"><a href="#C模板" class="headerlink" title="C模板"></a>C模板</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">LL <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = (l + r)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    LL res = merge_sort(l, mid) + merge_sort(mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l, j = mid + <span class="number">1</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(q[i] &lt;= q[j]) tmp[k++] = q[i++];</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            res += mid - i + <span class="number">1</span>;</span><br><span class="line">            tmp[k++] = q[j++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) tmp[k++] = q[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) tmp[k++] = q[j++];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=l, j = <span class="number">0</span>; i &lt;= r; i++, j++) q[i] = tmp[j];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定一个长度为 n 的整数数列，请你计算数列中的逆序对的数量。</p>
<p>逆序对的定义如下：对于数列的第 i 个和第 j 个元素，如果满足 i<j 且 a[i]>a[j]，则其为一个逆序对；否则不是。</j></p>
<p>输入格式<br>第一行包含整数 n，表示数列的长度。</p>
<p>第二行包含 n 个整数，表示整个数列。</p>
<p>输出格式<br>输出一个整数，表示逆序对的个数。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤100000，<br>数列中的元素的取值范围 [1,10^9]。</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>6<br>2 3 4 5 6 1</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>5</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> q[N], tmp[N];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = (l + r)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    LL res = <span class="built_in">merge_sort</span>(l, mid) + <span class="built_in">merge_sort</span>(mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l, j = mid + <span class="number">1</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(q[i] &lt;= q[j]) tmp[k++] = q[i++];</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            res += mid - i + <span class="number">1</span>;</span><br><span class="line">            tmp[k++] = q[j++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) tmp[k++] = q[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) tmp[k++] = q[j++];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = l, j = <span class="number">0</span>; i &lt;= r; i++, j++) q[i] = tmp[j];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line"></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>,<span class="built_in">merge_sort</span>(<span class="number">0</span>, n - <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> q[<span class="number">100010</span>], tmp[<span class="number">100010</span>];</span><br><span class="line"></span><br><span class="line">LL <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = (l + r)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    LL res = merge_sort(l, mid) + merge_sort(mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l, j = mid + <span class="number">1</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(q[i] &lt;= q[j]) tmp[k++] = q[i++];</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            res += mid - i + <span class="number">1</span>;</span><br><span class="line">            tmp[k++] = q[j++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) tmp[k++] = q[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) tmp[k++] = q[j++];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=l, j = <span class="number">0</span>; i &lt;= r; i++, j++) q[i] = tmp[j];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> i;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>( i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, merge_sort(<span class="number">0</span>, n - <span class="number">1</span>));  <span class="comment">//long long型输出要用 %lld</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>归并排序</tag>
      </tags>
  </entry>
  <entry>
    <title>2816. 判断子序列</title>
    <url>/archives/5ae0626a.html</url>
    <content><![CDATA[<h1 id="双指针算法模板"><a href="#双指针算法模板" class="headerlink" title="双指针算法模板"></a>双指针算法模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> i=<span class="number">0</span>, j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;n &amp;&amp; j&lt;m)&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i] == b[j]) i++;</span><br><span class="line">    j++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i == n) <span class="built_in">printf</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定一个长度为 n 的整数序列 a1,a2,…,an 以及一个长度为 m 的整数序列 b1,b2,…,bm。</p>
<p>请你判断 a 序列是否为 b 序列的子序列。</p>
<p>子序列指序列的一部分项按原有次序排列而得的序列，例如序列 {a1,a3,a5} 是序列 {a1,a2,a3,a4,a5} 的一个子序列。</p>
<p><strong>输入格式</strong><br>第一行包含两个整数 n,m。</p>
<p>第二行包含 n 个整数，表示 a1,a2,…,an。</p>
<p>第三行包含 m 个整数，表示 b1,b2,…,bm。</p>
<p><strong>输出格式</strong><br>如果 a 序列是 b 序列的子序列，输出一行 Yes。</p>
<p>否则，输出 No。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤m≤105,<br>−109≤ai,bi≤109</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>3 5<br>1 3 5<br>1 2 3 4 5</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>Yes</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N],b[N];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>,j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; n &amp;&amp; j &lt; m)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] == b[j]) i++ ;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(i == n) <span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N],b[N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>, j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n &amp;&amp; j&lt;m)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] == b[j]) i++;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(i == n) <span class="built_in">printf</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>双指针算法</tag>
      </tags>
  </entry>
  <entry>
    <title>789.数的范围</title>
    <url>/archives/3241765f.html</url>
    <content><![CDATA[<h1 id="二分模板"><a href="#二分模板" class="headerlink" title="二分模板"></a>二分模板</h1><h2 id="C-模板"><a href="#C-模板" class="headerlink" title="C++模板"></a>C++模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;<span class="comment">/* ... */</span>&#125; <span class="comment">// 检查x是否满足某种性质</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 区间[l, r]被划分成[l, mid]和[mid + 1, r]时使用：</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bsearch_1</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">check</span>(mid)) r = mid;    <span class="comment">// check()判断mid是否满足性质</span></span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 区间[l, r]被划分成[l, mid - 1]和[mid, r]时使用：</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bsearch_2</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">check</span>(mid)) l = mid;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="C模板"><a href="#C模板" class="headerlink" title="C模板"></a>C模板</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> <span class="title function_">check</span><span class="params">(<span class="type">int</span> x)</span> &#123;<span class="comment">/* ... */</span>&#125; <span class="comment">// 检查x是否满足某种性质</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 区间[l, r]被划分成[l, mid]和[mid + 1, r]时使用：</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">bsearch_1</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = (l + r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (check(mid)) r = mid;    <span class="comment">// check()判断mid是否满足性质</span></span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 区间[l, r]被划分成[l, mid - 1]和[mid, r]时使用：</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">bsearch_2</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = (l + r + <span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (check(mid)) l = mid;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定一个按照升序排列的长度为 n 的整数数组，以及 q 个查询。</p>
<p>对于每个查询，返回一个元素 k 的起始位置和终止位置（位置从 0 开始计数）。</p>
<p>如果数组中不存在该元素，则返回 -1 -1。</p>
<p>输入格式<br>第一行包含整数 n 和 q，表示数组长度和询问个数。</p>
<p>第二行包含 n 个整数（均在 1∼10000 范围内），表示完整数组。</p>
<p>接下来 q 行，每行包含一个整数 k，表示一个询问元素。</p>
<p>输出格式<br>共 q 行，每行包含两个整数，表示所求元素的起始位置和终止位置。</p>
<p>如果数组中不存在该元素，则返回 -1 -1。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤100000<br>1≤q≤10000<br>1≤k≤10000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>6 3<br>1 2 2 3 3 4<br>3<br>4<br>5</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>3 4<br>5 5<br>-1 -1</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m; </span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">            <span class="type">int</span> mid = (l+r)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(q[mid] &gt;=x ) r = mid;</span><br><span class="line">            <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(q[l]!=x) <span class="built_in">printf</span>(<span class="string">&quot;-1 -1\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,l);</span><br><span class="line">            </span><br><span class="line">            <span class="type">int</span> l=<span class="number">0</span>, r=n<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">                <span class="type">int</span> mid = (l + r + <span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span>(q[mid]&lt;=x) l=mid;</span><br><span class="line">                <span class="keyword">else</span> r = mid - <span class="number">1</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,l);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m; </span><br><span class="line"><span class="type">int</span> q[<span class="number">100010</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">            <span class="type">int</span> mid = (l+r)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(q[mid] &gt;=x ) r = mid;</span><br><span class="line">            <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(q[l]!=x) <span class="built_in">printf</span>(<span class="string">&quot;-1 -1\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,l);</span><br><span class="line">            </span><br><span class="line">            <span class="type">int</span> l=<span class="number">0</span>, r=n<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">                <span class="type">int</span> mid = (l + r + <span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span>(q[mid]&lt;=x) l=mid;</span><br><span class="line">                <span class="keyword">else</span> r = mid - <span class="number">1</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,l);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>视频是为了更好地理解二分算法<blockquote>
<iframe width="100%" height="615" src="//player.bilibili.com/player.html?aid=841423368&bvid=BV1d54y1q7k7&cid=216724849&page=1&high_quality=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe>


</blockquote>
</li>
</ul>
]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>二分排序</tag>
      </tags>
  </entry>
  <entry>
    <title>790.数的三次方根</title>
    <url>/archives/1fa56ed0.html</url>
    <content><![CDATA[<h1 id="二分模板"><a href="#二分模板" class="headerlink" title="二分模板"></a>二分模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">double</span> x)</span> </span>&#123;<span class="comment">/* ... */</span>&#125; <span class="comment">// 检查x是否满足某种性质</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">bsearch_3</span><span class="params">(<span class="type">double</span> l, <span class="type">double</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> eps = <span class="number">1e-6</span>;   <span class="comment">// eps 表示精度，取决于题目对精度的要求</span></span><br><span class="line">    <span class="keyword">while</span> (r - l &gt; eps)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">double</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">check</span>(mid)) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定一个浮点数 n，求它的三次方根。</p>
<p>输入格式<br>共一行，包含一个浮点数 n。</p>
<p>输出格式<br>共一行，包含一个浮点数，表示问题的解。</p>
<p>注意，结果保留 6 位小数。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>−10000≤n≤10000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>1000.00</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>10.000000</p>
<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p><img src="/images/33780_88604ed2d9-qq_pic_merged_1596934233273.jpg" alt="label"></p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> n,l,r,mid;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;n);</span><br><span class="line">    l=<span class="number">-10000</span>,r=<span class="number">10000</span>;</span><br><span class="line">    <span class="keyword">while</span>(r-l&gt;=<span class="number">1e-8</span>)&#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(mid * mid * mid&lt; n) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.6f&quot;</span>,l);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">double</span> n,l,r,mid;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;n);</span><br><span class="line">    l=<span class="number">-10000</span>,r=<span class="number">10000</span>;</span><br><span class="line">    <span class="keyword">while</span>(r-l&gt;=<span class="number">1e-8</span>)&#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(mid * mid * mid&lt; n) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%0.6f&quot;</span>,l);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>二分排序</tag>
      </tags>
  </entry>
  <entry>
    <title>787.归并排序</title>
    <url>/archives/abb4b35.html</url>
    <content><![CDATA[<h1 id="归并排序模板"><a href="#归并排序模板" class="headerlink" title="归并排序模板"></a>归并排序模板</h1><h2 id="C-模板"><a href="#C-模板" class="headerlink" title="C++模板"></a>C++模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = (l + r)/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">merge_sort</span>(q, l, mid);</span><br><span class="line">    <span class="built_in">merge_sort</span>(q, mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>, i = l, j = mid + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">        <span class="keyword">if</span> (q[i] &lt;= q[j]) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">        <span class="keyword">else</span> tmp[k ++ ] = q[j ++ ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= r) tmp[k ++ ] = q[j ++ ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = l, j = <span class="number">0</span>; i &lt;= r; i ++, j ++ ) q[i] = tmp[j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="C模板"><a href="#C模板" class="headerlink" title="C模板"></a>C模板</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span>&#123;</span><br><span class="line">    <span class="type">int</span> tmp[N];</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> mid = (l+r)/<span class="number">2</span>; </span><br><span class="line">    </span><br><span class="line">    merge_sort(q, l, mid);</span><br><span class="line">    merge_sort(q, mid+<span class="number">1</span>, r);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> k=<span class="number">0</span>, i=l, j=mid+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)   </span><br><span class="line">        <span class="keyword">if</span>(q[i] &lt;= q[j]) tmp[k++] = q[i++];</span><br><span class="line">        <span class="keyword">else</span> tmp[k++] = q[j++];</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) tmp[k++] = q[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) tmp[k++] = q[j++];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=l,j=<span class="number">0</span>; i &lt;= r;i++,j++) q[i]=tmp[j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定你一个长度为 n 的整数数列。</p>
<p>请你使用归并排序对这个数列按照从小到大进行排序。</p>
<p>并将排好序的数列按顺序输出。</p>
<p>输入格式<br>输入共两行，第一行包含整数 n。</p>
<p>第二行包含 n 个整数（所有整数均在 1∼109 范围内），表示整个数列。</p>
<p>输出格式<br>输出共一行，包含 n 个整数，表示排好序的数列。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤100000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>5<br>3 1 2 4 5</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>1 2 3 4 5</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> q[N], tmp[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = (l + r)/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">merge_sort</span>(q, l, mid);</span><br><span class="line">    <span class="built_in">merge_sort</span>(q, mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>, i = l, j = mid + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">        <span class="keyword">if</span> (q[i] &lt;= q[j]) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">        <span class="keyword">else</span> tmp[k ++ ] = q[j ++ ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= r) tmp[k ++ ] = q[j ++ ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = l, j = <span class="number">0</span>; i &lt;= r; i ++, j ++ ) q[i] = tmp[j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line">    <span class="built_in">merge_sort</span>(q, <span class="number">0</span>, n<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,q[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span>&#123;</span><br><span class="line">    <span class="type">int</span> tmp[N];</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> mid = (l+r)/<span class="number">2</span>; </span><br><span class="line">    </span><br><span class="line">    merge_sort(q, l, mid);</span><br><span class="line">    merge_sort(q, mid+<span class="number">1</span>, r);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> k=<span class="number">0</span>, i=l, j=mid+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)   </span><br><span class="line">        <span class="keyword">if</span>(q[i] &lt;= q[j]) tmp[k++] = q[i++];</span><br><span class="line">        <span class="keyword">else</span> tmp[k++] = q[j++];</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) tmp[k++] = q[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) tmp[k++] = q[j++];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=l,j=<span class="number">0</span>; i &lt;= r;i++,j++) q[i]=tmp[j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> q[N];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line">    merge_sort(q, <span class="number">0</span>, n<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i &lt; n; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,q[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>归并排序</tag>
      </tags>
  </entry>
  <entry>
    <title>791.高精度加法</title>
    <url>/archives/381a3338.html</url>
    <content><![CDATA[<h1 id="二分模板"><a href="#二分模板" class="headerlink" title="二分模板"></a>二分模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// C = A + B, A &gt;= 0, B &gt;= 0</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">add</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A, vector&lt;<span class="type">int</span>&gt; &amp;B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (A.<span class="built_in">size</span>() &lt; B.<span class="built_in">size</span>()) <span class="keyword">return</span> <span class="built_in">add</span>(B, A);</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>(); i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        t += A[i];</span><br><span class="line">        <span class="keyword">if</span> (i &lt; B.<span class="built_in">size</span>()) t += B[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (t) C.<span class="built_in">push_back</span>(t);</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// C = A + B, A &gt;= 0, B &gt;= 0</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">char</span> c[], <span class="type">char</span> a[], <span class="type">char</span> b[], <span class="type">int</span> len)</span>&#123;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; len) &#123;           <span class="comment">//根据你们人类的习惯，先从个位数开始加</span></span><br><span class="line">        c[i] = (c[i] + a[i] + b[i]) % <span class="string">&#x27;0&#x27;</span>;  <span class="comment">//数组中存储的是字符串，相加的是ASCLL码中所对应的数值；%48，&#x27;1&#x27;实际上是49</span></span><br><span class="line">		<span class="keyword">if</span>(c[i] &gt; <span class="number">9</span>) &#123;     <span class="comment">//%48之后，s中存储的就是实际意义上的1，2，3了</span></span><br><span class="line">            c[i + <span class="number">1</span>]++;</span><br><span class="line">            c[i] %= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="keyword">if</span>(!c[i]) i--;   <span class="comment">//去掉多余的0，如4+5=9，i++，运算后i=1，s[1]=0,不能输出</span></span><br><span class="line">    <span class="keyword">for</span> (  ; i &gt;= <span class="number">0</span>; i--)  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, c[i]);   <span class="comment">//因为从低位开始加的，需要倒过来输出</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定两个正整数（不含前导 0），计算它们的和。</p>
<p>输入格式<br>共两行，每行包含一个整数。</p>
<p>输出格式<br>共一行，包含所求的和。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤整数长度≤100000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>12<br>23</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>35</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">add</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A, vector&lt;<span class="type">int</span>&gt; &amp;B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (A.<span class="built_in">size</span>() &lt; B.<span class="built_in">size</span>()) <span class="keyword">return</span> <span class="built_in">add</span>(B, A);<span class="comment">//为了方便计算，让A中保存较长的数字， B中保存较短的数字</span></span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;<span class="comment">//保存结果的数组</span></span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;<span class="comment">//进位，开始时是0</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>(); i ++ )<span class="comment">//依次计算每一位</span></span><br><span class="line">    &#123;</span><br><span class="line">        t += A[i];<span class="comment">//加上 A 的第 i 位上的数字</span></span><br><span class="line">        <span class="keyword">if</span> (i &lt; B.<span class="built_in">size</span>()) t += B[i];<span class="comment">//加上 B 的第 i 位上的数字</span></span><br><span class="line">        C.<span class="built_in">push_back</span>(t % <span class="number">10</span>); <span class="comment">//C 中放入结果</span></span><br><span class="line">        t /= <span class="number">10</span>;<span class="comment">//t 更新成进位</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (t) C.<span class="built_in">push_back</span>(t);<span class="comment">//最后如果进位上有数，放进结果数组</span></span><br><span class="line">    <span class="keyword">return</span> C;<span class="comment">//返回结果</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string a, b;<span class="comment">//以字符串形式保存输入的两个整数</span></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; A, B;<span class="comment">//保存两个整数的数组</span></span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;<span class="comment">//接收输入</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = a.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i -- ) A.<span class="built_in">push_back</span>(a[i] - <span class="string">&#x27;0&#x27;</span>);<span class="comment">//倒序存储第一个数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = b.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i -- ) B.<span class="built_in">push_back</span>(b[i] - <span class="string">&#x27;0&#x27;</span>);<span class="comment">//倒序存储第二个数</span></span><br><span class="line">    <span class="keyword">auto</span> C = <span class="built_in">add</span>(A, B);<span class="comment">//调用加和函数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = C.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i -- ) cout &lt;&lt; C[i];<span class="comment">//倒序输出C中的数字</span></span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> s[N], s1[N], s2[N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>, s1, s2);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> len1 = <span class="built_in">strlen</span>(s1);</span><br><span class="line">    <span class="type">int</span> len2 = <span class="built_in">strlen</span>(s2);</span><br><span class="line">    <span class="type">int</span> len = len1 &gt; len2 ? len1 : len2;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>, j = len1 - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j) &#123;        <span class="comment">//把两个数组反过来，好进位</span></span><br><span class="line">        <span class="type">char</span> c = s1[i];   </span><br><span class="line">        s1[i] = s1[j];</span><br><span class="line">        s1[j] = c;</span><br><span class="line">        i++, j--;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    i = <span class="number">0</span>, j = len2 - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j) &#123;</span><br><span class="line">        <span class="type">char</span> c = s2[i];</span><br><span class="line">        s2[i] = s2[j];</span><br><span class="line">        s2[j] = c;</span><br><span class="line">        i++, j--;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; len) &#123;           <span class="comment">//根据你们人类的习惯，先从个位数开始加</span></span><br><span class="line">        s[i] = (s[i] + s1[i] + s2[i]) % <span class="string">&#x27;0&#x27;</span>;   <span class="comment">//数组中存储的是字符串，相加的是ASCLL码中所对应的数值；%48，&#x27;1&#x27;实际上是49</span></span><br><span class="line">        <span class="keyword">if</span>(s[i] &gt; <span class="number">9</span>) &#123;     <span class="comment">//%48之后，s中存储的就是实际意义上的1，2，3了</span></span><br><span class="line">            s[i + <span class="number">1</span>]++;</span><br><span class="line">            s[i] %= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="keyword">if</span>(!s[i]) i--;   <span class="comment">//去掉多余的0，如4+5=9，i++，运算后i=1，s[1]=0,不能输出</span></span><br><span class="line">    <span class="keyword">for</span> (  ; i &gt;= <span class="number">0</span>; i--)  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, s[i]);   <span class="comment">//因为从低位开始加的，需要倒过来输出</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> c[N], a[N], b[N];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">reverse</span><span class="params">(<span class="type">char</span> c[],<span class="type">int</span> len)</span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>, j = len - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j) &#123;        <span class="comment">//把两个数组反过来，从低位开始相加 </span></span><br><span class="line">        <span class="type">char</span> k = c[i];   </span><br><span class="line">        c[i] = c[j];</span><br><span class="line">        c[j] = k;</span><br><span class="line">        i++, j--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">add</span><span class="params">(<span class="type">char</span> c[], <span class="type">char</span> a[], <span class="type">char</span> b[], <span class="type">int</span> len)</span>&#123;</span><br><span class="line">	<span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; len) &#123;           <span class="comment">//根据你们人类的习惯，先从个位数开始加</span></span><br><span class="line">        c[i] = (c[i] + a[i] + b[i]) % <span class="string">&#x27;0&#x27;</span>;   <span class="comment">//数组中存储的是字符串，相加的是ASCLL码中所对应的数值；%48，&#x27;1&#x27;实际上是49</span></span><br><span class="line">		<span class="keyword">if</span>(c[i] &gt; <span class="number">9</span>) &#123;     <span class="comment">//%48之后，s中存储的就是实际意义上的1，2，3了</span></span><br><span class="line">            c[i + <span class="number">1</span>]++;</span><br><span class="line">            c[i] %= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="keyword">if</span>(!c[i]) i--;   <span class="comment">//去掉多余的0，如4+5=9，i++，运算后i=1，s[1]=0,不能输出</span></span><br><span class="line">    <span class="keyword">for</span> (  ; i &gt;= <span class="number">0</span>; i--)  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, c[i]);   <span class="comment">//因为从低位开始加的，需要倒过来输出</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> len1 = <span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="type">int</span> len2 = <span class="built_in">strlen</span>(b);</span><br><span class="line">    <span class="type">int</span> len = len1 &gt; len2 ? len1 : len2;</span><br><span class="line">    </span><br><span class="line">    reverse(a,len1);</span><br><span class="line">	reverse(b,len2); </span><br><span class="line">    </span><br><span class="line">   	add(c,a,b,len);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>高精度</tag>
      </tags>
  </entry>
  <entry>
    <title>793. 高精度乘法</title>
    <url>/archives/995272c0.html</url>
    <content><![CDATA[<h1 id="高精度模板"><a href="#高精度模板" class="headerlink" title="高精度模板"></a>高精度模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">mul</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ;i &lt; A.<span class="built_in">size</span>() || t; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; A.<span class="built_in">size</span>()) </span><br><span class="line">            t += A[i] * b;</span><br><span class="line">        C.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">reverse</span><span class="params">(<span class="type">int</span> len, <span class="type">int</span> num)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;    <span class="comment">//把&#x27;1&#x27;换成1</span></span><br><span class="line">        s1[i] = s1[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>, j = len - <span class="number">1</span>;      <span class="comment">//将s1反过来</span></span><br><span class="line">    <span class="keyword">while</span>(i &lt; j) &#123;</span><br><span class="line">        <span class="type">int</span> t = s1[i];</span><br><span class="line">        s1[i] = s1[j];</span><br><span class="line">        s1[j] = t;</span><br><span class="line">        i++, j--;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++) &#123;   <span class="comment">//从低位开始乘，每一位都乘上num</span></span><br><span class="line">        <span class="type">int</span> t = s1[i] * num + a[i];   <span class="comment">//加a[i]是因为前一有进位的话，a[i]不为0</span></span><br><span class="line">        a[i] = t % <span class="number">10</span>;</span><br><span class="line">        a[i + <span class="number">1</span>] += t / <span class="number">10</span>;      <span class="comment">//进位</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (!a[i]) i--;   <span class="comment">//去掉前导0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(i &lt; <span class="number">0</span>)  <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);   <span class="comment">//答案为0，前导0就全部去掉了，i=-1</span></span><br><span class="line">    <span class="keyword">for</span> (  ; i &gt;= <span class="number">0</span>; i--)  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[i]);   <span class="comment">//从高位输出</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定两个非负整数（不含前导 0） A 和 B，请你计算 A×B 的值。</p>
<p><strong>输入格式</strong><br>共两行，第一行包含整数 A，第二行包含整数 B。</p>
<p><strong>输出格式</strong><br>共一行，包含 A×B 的值。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤A的长度≤100000,<br>0≤B≤10000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>2<br>3</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>26</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">mul</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ;i &lt; A.<span class="built_in">size</span>() || t; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; A.<span class="built_in">size</span>()) </span><br><span class="line">            t += A[i] * b;</span><br><span class="line">        C.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    string a;</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    </span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; A;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=a.<span class="built_in">size</span>()<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) A.<span class="built_in">push_back</span>(a[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">auto</span> C=<span class="built_in">mul</span>(A, b);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = C.<span class="built_in">size</span>() - <span class="number">1</span>;i&gt;=<span class="number">0</span> ;i--) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,C[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> s1[N];</span><br><span class="line"><span class="type">char</span> s2[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">reverse</span><span class="params">(<span class="type">int</span> len, <span class="type">int</span> num)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;    <span class="comment">//把&#x27;1&#x27;换成1</span></span><br><span class="line">        s1[i] = s1[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>, j = len - <span class="number">1</span>;      <span class="comment">//将s1反过来</span></span><br><span class="line">    <span class="keyword">while</span>(i &lt; j) &#123;</span><br><span class="line">        <span class="type">int</span> t = s1[i];</span><br><span class="line">        s1[i] = s1[j];</span><br><span class="line">        s1[j] = t;</span><br><span class="line">        i++, j--;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++) &#123;   <span class="comment">//从低位开始乘，每一位都乘上num</span></span><br><span class="line">        <span class="type">int</span> t = s1[i] * num + a[i];   <span class="comment">//加a[i]是因为前一有进位的话，a[i]不为0</span></span><br><span class="line">        a[i] = t % <span class="number">10</span>;</span><br><span class="line">        a[i + <span class="number">1</span>] += t / <span class="number">10</span>;      <span class="comment">//进位</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (!a[i]) i--;   <span class="comment">//去掉前导0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(i &lt; <span class="number">0</span>)  <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);   <span class="comment">//答案为0，前导0就全部去掉了，i=-1</span></span><br><span class="line">    <span class="keyword">for</span> (  ; i &gt;= <span class="number">0</span>; i--)  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[i]);   <span class="comment">//从高位输出</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s%s&quot;</span>, s1, s2);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> len1 = <span class="built_in">strlen</span>(s1);</span><br><span class="line">    <span class="type">int</span> len2 = <span class="built_in">strlen</span>(s2);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len2; i++) &#123;    <span class="comment">//把第二个数转成int</span></span><br><span class="line">        num = num * <span class="number">10</span> + (s2[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    reverse(len1, num);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>高精度</tag>
      </tags>
  </entry>
  <entry>
    <title>792. 高精度减法</title>
    <url>/archives/6e837e45.html</url>
    <content><![CDATA[<h1 id="二分模板"><a href="#二分模板" class="headerlink" title="二分模板"></a>二分模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// C = A - B, 满足A &gt;= B, A &gt;= 0, B &gt;= 0</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sub</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A, vector&lt;<span class="type">int</span>&gt; &amp;B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, t = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>(); i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        t = A[i] - t;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; B.<span class="built_in">size</span>()) t -= B[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>((t + <span class="number">10</span>) % <span class="number">10</span>);</span><br><span class="line">        <span class="keyword">if</span> (t &lt; <span class="number">0</span>) t = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> t = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop_back</span>();</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">subtract</span><span class="params">(<span class="type">char</span> s[], <span class="type">char</span> s1[], <span class="type">char</span> s2[], <span class="type">int</span> len)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; len) &#123;</span><br><span class="line">        <span class="keyword">if</span>(s1[i] &lt; s2[i]) &#123;    <span class="comment">//不够减，借位</span></span><br><span class="line">            s1[i] += <span class="number">10</span>;</span><br><span class="line">            s1[i + <span class="number">1</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">        s[i] = s1[i] - s2[i];</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(!s[i]) i--;   <span class="comment">//去掉多余的0，如1000-999=1，s中存储的是1000，多余三个0</span></span><br><span class="line">    <span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);   <span class="comment">//1000-1000=0，s中为0000，避免把所有0都去掉</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">for</span> (  ; i &gt;= <span class="number">0</span>; i--)  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, s[i]);   <span class="comment">//从高位往低位输出</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定两个正整数（不含前导 0），计算它们的差，计算结果可能为负数。</p>
<p>输入格式<br>共两行，每行包含一个整数。</p>
<p>输出格式<br>共一行，包含所求的差。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤整数长度≤10^5</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>32<br>11</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>21</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是否有A&gt;=B </span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; A, vector&lt;<span class="type">int</span>&gt; &amp;B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(A.<span class="built_in">size</span>() != B.<span class="built_in">size</span>()) <span class="keyword">return</span> A.<span class="built_in">size</span>() &gt; B.<span class="built_in">size</span>();  <span class="comment">//直接ruturn 了就不用else</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = A.<span class="built_in">size</span>(); i &gt;= <span class="number">0</span>; i--) <span class="comment">//位数相等</span></span><br><span class="line">        <span class="keyword">if</span>(A[i] != B[i])</span><br><span class="line">            <span class="keyword">return</span> A[i] &gt; B[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vector &lt;<span class="type">int</span>&gt; <span class="built_in">sub</span>(vector&lt;<span class="type">int</span>&gt;&amp; A, vector&lt;<span class="type">int</span>&gt; &amp;B)</span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t = A[i] - t;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; B.<span class="built_in">size</span>()) t -= B[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>((t + <span class="number">10</span>) % <span class="number">10</span> ); <span class="comment">// 合而为1</span></span><br><span class="line">        <span class="keyword">if</span>(t &lt; <span class="number">0</span>)  t = <span class="number">1</span>;  <span class="comment">//如果t&lt;0 就需要借一位</span></span><br><span class="line">        <span class="keyword">else</span> t = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop_back</span>();  <span class="comment">//去掉前导0 如003 输出为3</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string a ,b;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; A, B;</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = a.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) A.<span class="built_in">push_back</span>(a[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = b.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) B.<span class="built_in">push_back</span>(b[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">cmp</span>(A,B)) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> C = <span class="built_in">sub</span>(A, B);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = C.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, C[i]);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> C = <span class="built_in">sub</span>(B, A);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = C.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, C[i]);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> s[N], s1[N], s2[N];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">reverse</span><span class="params">(<span class="type">char</span> s[], <span class="type">int</span> len)</span> &#123;  <span class="comment">//将数组反过来,从低位开始减</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) s[i] -= <span class="string">&#x27;0&#x27;</span>;   <span class="comment">//将&#x27;1&#x27;变成1</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>, j = len - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j) &#123;</span><br><span class="line">        <span class="type">char</span> c = s[i];</span><br><span class="line">        s[i] = s[j];</span><br><span class="line">        s[j] = c;</span><br><span class="line">        i++, j--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">subtract</span><span class="params">(<span class="type">char</span> s[], <span class="type">char</span> s1[], <span class="type">char</span> s2[], <span class="type">int</span> len)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; len) &#123;</span><br><span class="line">        <span class="keyword">if</span>(s1[i] &lt; s2[i]) &#123;    <span class="comment">//不够减，借位</span></span><br><span class="line">            s1[i] += <span class="number">10</span>;</span><br><span class="line">            s1[i + <span class="number">1</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">        s[i] = s1[i] - s2[i];</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(!s[i]) i--;   <span class="comment">//去掉多余的0，如1000-999=1，s中存储的是1000，多余三个0</span></span><br><span class="line">    <span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);   <span class="comment">//1000-1000=0，s中为0000，避免把所有0都去掉</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">for</span> (  ; i &gt;= <span class="number">0</span>; i--)  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, s[i]);   <span class="comment">//从高位往低位输出</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s%s&quot;</span>, s1, s2);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> len1 = <span class="built_in">strlen</span>(s1);</span><br><span class="line">    <span class="type">int</span> len2 = <span class="built_in">strlen</span>(s2);</span><br><span class="line">    <span class="type">int</span> len = len1 &gt;= len2 ? len1 : len2;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> sign = <span class="number">1</span>;   <span class="comment">//标志正负，1正0负</span></span><br><span class="line">    <span class="keyword">if</span>(len2 &gt; len1)  sign = <span class="number">0</span>;   <span class="comment">//判断s2大还是s1大，s2大答案为负</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(len1 == len2) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123; </span><br><span class="line">            <span class="keyword">if</span>(s1[i] != s2[i]) &#123;     <span class="comment">//找到第一位不一样的，s1大就是正，s2大就是负</span></span><br><span class="line">                <span class="keyword">if</span>(s1[i] &lt; s2[i]) &#123; </span><br><span class="line">                    sign = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!sign)  <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);   <span class="comment">//答案为负需要输出负号</span></span><br><span class="line">    reverse(s1, len1);</span><br><span class="line">    reverse(s2, len2);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!sign)  subtract(s, s2, s1, len);   <span class="comment">//s2大就拿s2减s1最后加个负号</span></span><br><span class="line">    <span class="keyword">else</span>  subtract(s, s1, s2, len);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>高精度</tag>
      </tags>
  </entry>
  <entry>
    <title>795. 前缀和</title>
    <url>/archives/661a0aca.html</url>
    <content><![CDATA[<h1 id="前缀和与差分模板"><a href="#前缀和与差分模板" class="headerlink" title="前缀和与差分模板"></a>前缀和与差分模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">S[i] = a[<span class="number">1</span>] + a[<span class="number">2</span>] + ... a[i]</span><br><span class="line">a[l] + ... + a[r] = S[r] - S[l - <span class="number">1</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>输入一个长度为 n 的整数序列。</p>
<p>接下来再输入 m 个询问，每个询问输入一对 l,r。</p>
<p>对于每个询问，输出原序列中从第 l 个数到第 r 个数的和。</p>
<p><strong>输入格式</strong><br>第一行包含两个整数 n 和 m。</p>
<p>第二行包含 n 个整数，表示整数数列。</p>
<p>接下来 m 行，每行包含两个整数 l 和 r，表示一个询问的区间范围。</p>
<p><strong>输出格式</strong><br>共 m 行，每行输出一个询问的结果。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤l≤r≤n,<br>1≤n,m≤100000,<br>−1000≤数列中元素的值≤1000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>5 3<br>2 1 3 6 4<br>1 2<br>1 3<br>2 4</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>3<br>6<br>10</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[N], s[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i&lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) s[i] = s[i<span class="number">-1</span>] + a[i]; <span class="comment">//前缀和的初始化</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="type">int</span> l , r ;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;l ,&amp;r);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,s[r] - s[l<span class="number">-1</span>]);   <span class="comment">//区间和的计算</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N  100010</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[N], s[N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i&lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) s[i] = s[i<span class="number">-1</span>] + a[i]; <span class="comment">//前缀和的初始化</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="type">int</span> l , r ;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;l ,&amp;r);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,s[r] - s[l<span class="number">-1</span>]);   <span class="comment">//区间和的计算</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>前缀和与差分</tag>
      </tags>
  </entry>
  <entry>
    <title>796. 子矩阵的和</title>
    <url>/archives/e93fa612.html</url>
    <content><![CDATA[<h1 id="前缀和与差分模板"><a href="#前缀和与差分模板" class="headerlink" title="前缀和与差分模板"></a>前缀和与差分模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">S[i, j] = 第i行j列格子左上部分所有元素的和</span><br><span class="line">以(x1, y1)为左上角，(x2, y2)为右下角的子矩阵的和为：</span><br><span class="line">S[x2, y2] - S[x1 - <span class="number">1</span>, y2] - S[x2, y1 - <span class="number">1</span>] + S[x1 - <span class="number">1</span>, y1 - <span class="number">1</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>输入一个 n 行 m 列的整数矩阵，再输入 q 个询问，每个询问包含四个整数 x1,y1,x2,y2，表示一个子矩阵的左上角坐标和右下角坐标。</p>
<p>对于每个询问输出子矩阵中所有数的和。</p>
<p><strong>输入格式</strong><br>第一行包含三个整数 n，m，q。</p>
<p>接下来 n 行，每行包含 m 个整数，表示整数矩阵。</p>
<p>接下来 q 行，每行包含四个整数 x1,y1,x2,y2，表示一组询问。</p>
<p><strong>输出格式</strong><br>共 q 行，每行输出一个询问的结果。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n,m≤1000,<br>1≤q≤200000,<br>1≤x1≤x2≤n,<br>1≤y1≤y2≤m,<br>−1000≤矩阵内元素的值≤1000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>3 4 3<br>1 7 2 4<br>3 6 2 8<br>2 1 2 3<br>1 1 2 2<br>2 1 3 4<br>1 3 3 4</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>17<br>27<br>21</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N =<span class="number">1010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m,q;</span><br><span class="line"><span class="type">int</span> a[N][N], s[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;m, &amp;q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            s[i][j] = s[i - <span class="number">1</span>][j] + s[i][j - <span class="number">1</span>] - s[i - <span class="number">1</span>][j - <span class="number">1</span>] + a[i][j];  <span class="comment">//求前缀和</span></span><br><span class="line">            </span><br><span class="line">    <span class="keyword">while</span>(q --)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x1,y1,x2,y2;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>,&amp;x1,&amp;y1,&amp;x2,&amp;y2);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, s[x2][y2] - s[x1 - <span class="number">1</span>][y2] - s[x2][y1 - <span class="number">1</span>] + s[x1 - <span class="number">1</span>][y1 - <span class="number">1</span>]);  <span class="comment">//算部分和</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N  1010 </span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m,q;</span><br><span class="line"><span class="type">int</span> a[N][N], s[N][N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;m, &amp;q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            s[i][j] = s[i - <span class="number">1</span>][j] + s[i][j - <span class="number">1</span>] - s[i - <span class="number">1</span>][j - <span class="number">1</span>] + a[i][j];  <span class="comment">//求前缀和</span></span><br><span class="line">            </span><br><span class="line">    <span class="keyword">while</span>(q --)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x1,y1,x2,y2;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>,&amp;x1,&amp;y1,&amp;x2,&amp;y2);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, s[x2][y2] - s[x1 - <span class="number">1</span>][y2] - s[x2][y1 - <span class="number">1</span>] + s[x1 - <span class="number">1</span>][y1 - <span class="number">1</span>]);  <span class="comment">//算部分和</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>前缀和与差分</tag>
      </tags>
  </entry>
  <entry>
    <title>797.差分</title>
    <url>/archives/eacf8905.html</url>
    <content><![CDATA[<h1 id="差分"><a href="#差分" class="headerlink" title="差分"></a>差分</h1><p>类似于数学中的求导和积分，<strong>差分可以看成前缀和的逆运算。</strong></p>
<p><strong>差分数组：</strong></p>
<p>首先给定一个原数组a：a[1], a[2], a[3],,,,,, a[n];</p>
<p>然后我们构造一个数组b ： b[1] ,b[2] , b[3],,,,,, b[i];</p>
<p>使得 a[i] = b[1] + b[2 ]+ b[3] +,,,,,, + b[i]</p>
<p>也就是说，a数组是b数组的前缀和数组，反过来我们把b数组叫做a数组的<strong>差分数组</strong>。换句话说，每一个a[i]都是b数组中从头开始的一段区间和。</p>
<p>考虑如何构造差分b数组？</p>
<p>最为直接的方法</p>
<p><strong>如下：</strong><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a[0 ]= 0;</span><br><span class="line"></span><br><span class="line">b[1] = a[1] - a[0];</span><br><span class="line"></span><br><span class="line">b[2] = a[2] - a[1];</span><br><span class="line"></span><br><span class="line">b[3] =a [3] - a[2];</span><br><span class="line"></span><br><span class="line">........</span><br><span class="line"></span><br><span class="line">b[n] = a[n] - a[n-1];</span><br></pre></td></tr></table></figure><br>图示:<br><img src="https://img-blog.csdnimg.cn/20201217174809672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYyOTI4NQ==,size_16,color_FFFFFF,t_70" alt="label"></p>
<p>我们只要有b数组，通过前缀和运算，就可以在O(n) 的时间内得到a数组 。</p>
<p><strong>知道了差分数组有什么用呢？</strong> 别着急，慢慢往下看。</p>
<p><strong>话说有这么一个问题：</strong></p>
<p>给定区间[l ,r ]，让我们把a数组中的[ l, r]区间中的每一个数都加上c,即 a[l] + c , a[l+1] + c , a[l+2] + c ,,,,,, a[r] + c;</p>
<p>暴力做法是for循环l到r区间，时间复杂度O(n)，如果我们需要对原数组执行m次这样的操作，时间复杂度就会变成O(n<em>m)。有没有更高效的做法吗? <em>*考虑差分做法。</em></em></p>
<p><strong>始终要记得，a数组是b数组的前缀和数组</strong>，比如对b数组的b[i]的修改，会影响到a数组中从a[i]及往后的每一个数。</p>
<p>首先让差分b数组中的 b[l] + c ,a数组变成 a[l] + c ,a[l+1] + c,,,,,, a[n] + c;</p>
<p>然后我们打个补丁，b[r+1] - c, a数组变成 a[r+1] - c,a[r+2] - c,,,,,,,a[n] - c;</p>
<p><strong>为啥还要打个补丁？</strong></p>
<p><strong>我们画个图理解一下这个公式的由来:</strong><br><img src="https://img-blog.csdnimg.cn/20201215163431253.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYyOTI4NQ==,size_16,color_FFFFFF,t_70" alt="label"></p>
<p>b[l] + c，效果使得a数组中 a[l]及以后的数都加上了c(红色部分)，但我们只要求l到r区间加上c, 因此还需要执行 b[r+1] - c,让a数组中a[r+1]及往后的区间再减去c(绿色部分)，这样对于a[r] 以后区间的数相当于没有发生改变。</p>
<p>因此我们得出<strong>一维差分结论</strong>：给a数组中的[ l, r]区间中的每一个数都加上c,只需对差分数组b做 b[l] + = c, b[r+1] - = c。时间复杂度为O(1), 大大提高了效率。</p>
<p>总结：<br><img src="https://img-blog.csdnimg.cn/20201217172005485.png" alt="label"></p>
<h1 id="前缀和与差分模板"><a href="#前缀和与差分模板" class="headerlink" title="前缀和与差分模板"></a>前缀和与差分模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">给区间[l, r]中的每个数加上c：B[l] += c, B[r + <span class="number">1</span>] -= c</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>输入一个长度为 n 的整数序列。</p>
<p>接下来输入 m 个操作，每个操作包含三个整数 l,r,c，表示将序列中 [l,r] 之间的每个数加上 c。</p>
<p>请你输出进行完所有操作后的序列。</p>
<p><strong>输入格式</strong><br>第一行包含两个整数 n 和 m。</p>
<p>第二行包含 n 个整数，表示整数序列。</p>
<p>接下来 m 行，每行包含三个整数 l，r，c，表示一个操作。</p>
<p><strong>输出格式</strong><br>共一行，包含 n 个整数，表示最终序列。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n,m≤100000,<br>1≤l≤r≤n ,<br>−1000≤c≤1000,<br>−1000≤整数序列中元素的值≤1000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>6 3<br>1 2 2 1 2 1<br>1 3 1<br>3 5 1<br>1 6 1</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>3 4 5 3 4 2</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[N],b[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> c)</span></span>&#123;</span><br><span class="line">    b[l] += c;</span><br><span class="line">    b[r+<span class="number">1</span>] -= c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m); </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">insert</span>(i, i, a[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="type">int</span> l , r , c ;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;l,&amp;r,&amp;c);</span><br><span class="line">        <span class="built_in">insert</span>(l,r,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) b[i] += b[i<span class="number">-1</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,b[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//差分 时间复杂度 o(m)</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N  100010</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N], b[N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">        b[i] = a[i] - a[i - <span class="number">1</span>];      <span class="comment">//构建差分数组</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> l, r, c;</span><br><span class="line">    <span class="keyword">while</span> (m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;l, &amp;r, &amp;c);</span><br><span class="line">        b[l] += c;     <span class="comment">//将序列中[l, r]之间的每个数都加上c</span></span><br><span class="line">        b[r + <span class="number">1</span>] -= c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i] = b[i] + a[i - <span class="number">1</span>];    <span class="comment">//前缀和运算</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>前缀和与差分</tag>
      </tags>
  </entry>
  <entry>
    <title>798. 差分矩阵</title>
    <url>/archives/eacf8905.html</url>
    <content><![CDATA[<p><a href="https://www.acwing.com/solution/content/27325/">差分矩阵解析</a></p>
<h1 id="前缀和与差分模板"><a href="#前缀和与差分模板" class="headerlink" title="前缀和与差分模板"></a>前缀和与差分模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">给以(x1, y1)为左上角，(x2, y2)为右下角的子矩阵中的所有元素加上c：</span><br><span class="line">S[x1, y1] += c, S[x2 + <span class="number">1</span>, y1] -= c, S[x1, y2 + <span class="number">1</span>] -= c, S[x2 + <span class="number">1</span>, y2 + <span class="number">1</span>] += c</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>输入一个 n 行 m 列的整数矩阵，再输入 q 个操作，每个操作包含五个整数 x1,y1,x2,y2,c，其中 (x1,y1) 和 (x2,y2) 表示一个子矩阵的左上角坐标和右下角坐标。</p>
<p>每个操作都要将选中的子矩阵中的每个元素的值加上 c。</p>
<p>请你将进行完所有操作后的矩阵输出。</p>
<p><strong>输入格式</strong><br>第一行包含整数 n,m,q。</p>
<p>接下来 n 行，每行包含 m 个整数，表示整数矩阵。</p>
<p>接下来 q 行，每行包含 5 个整数 x1,y1,x2,y2,c，表示一个操作。</p>
<p><strong>输出格式</strong><br>共 n 行，每行 m 个整数，表示所有操作进行完毕后的最终矩阵。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n,m≤1000,<br>1≤q≤100000,<br>1≤x1≤x2≤n,<br>1≤y1≤y2≤m,<br>−1000≤c≤1000,<br>−1000≤矩阵内元素的值≤1000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>3 4 3<br>1 2 2 1<br>3 2 2 1<br>1 1 1 1<br>1 1 2 2 1<br>1 3 2 3 2<br>3 1 3 4 1</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>2 3 4 1<br>4 3 4 1<br>2 2 2 2</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m, q;</span><br><span class="line"><span class="type">int</span> a[N][N], b[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> x1, <span class="type">int</span> y1, <span class="type">int</span> x2, <span class="type">int</span> y2, <span class="type">int</span> c)</span></span>&#123;</span><br><span class="line">    b[x1][y1] += c;</span><br><span class="line">    b[x2 + <span class="number">1</span>][y1] -= c;</span><br><span class="line">    b[x1][y2 + <span class="number">1</span>] -= c;</span><br><span class="line">    b[x2 + <span class="number">1</span>][y2 + <span class="number">1</span>] += c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;q);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n ;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i][j]);</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            <span class="built_in">insert</span>(i, j, i, j, a[i][j]);</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="type">int</span> x1,y1, x2,y2, c;</span><br><span class="line">        cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2 &gt;&gt; c;</span><br><span class="line">        <span class="built_in">insert</span>(x1,y1,x2,y2,c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            b[i][j] += b[i - <span class="number">1</span>][j] + b[i][j - <span class="number">1</span>] - b[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,b[i][j]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 1010</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m,q;</span><br><span class="line"><span class="type">int</span> a[N][N], b[N][N];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> x1, <span class="type">int</span> y1, <span class="type">int</span> x2, <span class="type">int</span> y2, <span class="type">int</span> c)</span>&#123;</span><br><span class="line">    b[x1][y1] += c;</span><br><span class="line">    b[x2 + <span class="number">1</span>][y1] -= c;</span><br><span class="line">    b[x1][y2 + <span class="number">1</span>] -= c;</span><br><span class="line">    b[x2 + <span class="number">1</span>][y2 + <span class="number">1</span>] += c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;q);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i][j]);</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            insert(i,j,i,j,a[i][j]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="type">int</span> x1,y1, x2,y2, c;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d%d&quot;</span>,&amp;x1,&amp;y1,&amp;x2,&amp;y2,&amp;c);</span><br><span class="line">        insert(x1,y1,x2,y2,c);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            b[i][j] += b[i - <span class="number">1</span>][j] + b[i][j - <span class="number">1</span>] - b[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;   </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,b[i][j]);</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>前缀和与差分</tag>
      </tags>
  </entry>
  <entry>
    <title>794. 高精度除法</title>
    <url>/archives/bfde0367.html</url>
    <content><![CDATA[<h1 id="高精度模板"><a href="#高精度模板" class="headerlink" title="高精度模板"></a>高精度模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">div</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A,<span class="type">int</span> b,<span class="type">int</span> &amp;r)</span></span>&#123;  <span class="comment">//r是引用</span></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;  <span class="comment">//商</span></span><br><span class="line">    r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = A.<span class="built_in">size</span>() - <span class="number">1</span>; i&gt;=<span class="number">0</span>; i-- )&#123;</span><br><span class="line">        r = r*<span class="number">10</span> + A[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>(r / b);</span><br><span class="line">        r %= b;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">reverse</span>(C.<span class="built_in">begin</span>(),C.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">while</span>(C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop_back</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">div</span><span class="params">(<span class="type">int</span> len,<span class="type">int</span> num)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">	    s1[i] = s1[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line">	    r = r*<span class="number">10</span> + s1[i];</span><br><span class="line">        a[i] = r/num;</span><br><span class="line">        r %= num;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(!a[i]) i--;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(i&lt;<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;len;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="number">0</span>&amp;&amp;c==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[i]!=<span class="number">0</span>) c=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%d&quot;</span>,r);</span><br><span class="line">&#125;                           </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定两个非负整数（不含前导 0） A，B，请你计算 A/B 的商和余数。</p>
<p><strong>输入格式</strong><br>共两行，第一行包含整数 A，第二行包含整数 B。</p>
<p><strong>输出格式</strong><br>共两行，第一行输出所求的商，第二行输出所求余数。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤A的长度≤100000 ,<br>1≤B≤10000,<br>B 一定不为 0</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>7<br>2</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>3<br>1</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">div</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A,<span class="type">int</span> b,<span class="type">int</span> &amp;r)</span></span>&#123;  <span class="comment">//r是引用</span></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;  <span class="comment">//商</span></span><br><span class="line">    r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = A.<span class="built_in">size</span>() - <span class="number">1</span>; i&gt;=<span class="number">0</span>; i-- )&#123;</span><br><span class="line">        r = r*<span class="number">10</span> + A[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>(r / b);</span><br><span class="line">        r %= b;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">reverse</span>(C.<span class="built_in">begin</span>(),C.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">while</span>(C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop_back</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    string a;</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    </span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    </span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; A;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i =a.<span class="built_in">size</span>() - <span class="number">1</span> ;i &gt;= <span class="number">0</span>; i-- ) A.<span class="built_in">push_back</span>(a[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> r;</span><br><span class="line">    <span class="keyword">auto</span> C = <span class="built_in">div</span>(A,b,r);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = C.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span> ; i--) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,C[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, r);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> s1[N], s2[N];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> r=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> c=<span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">div</span><span class="params">(<span class="type">int</span> len,<span class="type">int</span> num)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">	    s1[i] = s1[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line">	    r = r*<span class="number">10</span> + s1[i];</span><br><span class="line">        a[i] = r/num;</span><br><span class="line">        r %= num;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span>(!a[i]) i--;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(i&lt;<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;len;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="number">0</span>&amp;&amp;c==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[i]!=<span class="number">0</span>) c=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n%d&quot;</span>,r);</span><br><span class="line">&#125;                               </span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>,s1,s2);</span><br><span class="line">	</span><br><span class="line">	<span class="type">int</span> len1 =<span class="built_in">strlen</span>(s1);</span><br><span class="line">    <span class="type">int</span> len2 =<span class="built_in">strlen</span>(s2);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; len2; i++)&#123;</span><br><span class="line">        num = num*<span class="number">10</span>+ (s2[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    div(len1,num);    <span class="comment">//引用高精度除法函数</span></span><br><span class="line">	</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>高精度</tag>
      </tags>
  </entry>
  <entry>
    <title>799. 最长连续不重复子序列</title>
    <url>/archives/1ed9dcdb.html</url>
    <content><![CDATA[<h1 id="双指针算法模板"><a href="#双指针算法模板" class="headerlink" title="双指针算法模板"></a>双指针算法模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (j &lt; i &amp;&amp; <span class="built_in">check</span>(i, j)) j ++ ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 具体问题的逻辑</span></span><br><span class="line">&#125;</span><br><span class="line">常见问题分类：</span><br><span class="line">    (<span class="number">1</span>) 对于一个序列，用两个指针维护一段区间</span><br><span class="line">    (<span class="number">2</span>) 对于两个序列，维护某种次序，比如归并排序中合并两个有序序列的操作</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定一个长度为 n 的整数序列，请找出最长的不包含重复的数的连续区间，输出它的长度。</p>
<p><strong>输入格式</strong><br>第一行包含整数 n。</p>
<p>第二行包含 n 个整数（均在 0∼105 范围内），表示整数序列。</p>
<p><strong>输出格式</strong><br>共一行，包含一个整数，表示最长的不包含重复的数的连续区间的长度。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤10^5</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>5<br>1 2 2 3 5</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>3</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[N],s[N];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ,j = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        s[a[i]] ++;</span><br><span class="line">        <span class="keyword">while</span> (s[a[i]] &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            s[a[j]] --;</span><br><span class="line">            j ++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        res = <span class="built_in">max</span>(res, i - j + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,res);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[N],s[N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a&gt;b) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i =  <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>,j=<span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        s[a[i]]++;</span><br><span class="line">        <span class="keyword">while</span>(s[a[i]]&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            s[a[j]]--;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        res = max(res, i-j+<span class="number">1</span>);</span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>双指针算法</tag>
      </tags>
  </entry>
  <entry>
    <title>800. 数组元素的目标和</title>
    <url>/archives/65d0487c.html</url>
    <content><![CDATA[<h1 id="双指针算法模板"><a href="#双指针算法模板" class="headerlink" title="双指针算法模板"></a>双指针算法模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (j &lt; i &amp;&amp; <span class="built_in">check</span>(i, j)) j ++ ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 具体问题的逻辑</span></span><br><span class="line">&#125;</span><br><span class="line">常见问题分类：</span><br><span class="line">    (<span class="number">1</span>) 对于一个序列，用两个指针维护一段区间</span><br><span class="line">    (<span class="number">2</span>) 对于两个序列，维护某种次序，比如归并排序中合并两个有序序列的操作</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定两个升序排序的有序数组 A 和 B，以及一个目标值 x。</p>
<p>数组下标从 0 开始。</p>
<p>请你求出满足 A[i]+B[j]=x 的数对 (i,j)。</p>
<p>数据保证有唯一解。</p>
<p><strong>输入格式</strong><br>第一行包含三个整数 n,m,x，分别表示 A 的长度，B 的长度以及目标值 x。</p>
<p>第二行包含 n 个整数，表示数组 A。</p>
<p>第三行包含 m 个整数，表示数组 B。</p>
<p><strong>输出格式</strong><br>共一行，包含两个整数 i 和 j。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>数组长度不超过 10^5。<br>同一数组内元素各不相同。<br>1≤数组元素≤10^9</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>4 5 6<br>1 2 4 7<br>3 4 6 8 9</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>1 1</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N],b[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;x);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>, j= m - <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(j &gt;= <span class="number">0</span> &amp;&amp; a[i] + b[j] &gt; x) j--;</span><br><span class="line">        <span class="keyword">if</span>(j &gt;= <span class="number">0</span> &amp;&amp; a[i] + b[j] == x) cout &lt;&lt; i &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; j &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[N],b[N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m,x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;x);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>,j = m - <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(j &gt;= <span class="number">0</span> &amp;&amp; a[i] + b[j] &gt; x) j--;</span><br><span class="line">        <span class="keyword">if</span>(j &gt;= <span class="number">0</span> &amp;&amp; a[i] + b[j] == x) </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>,i,j);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>双指针算法</tag>
      </tags>
  </entry>
  <entry>
    <title>801. 二进制中1的个数</title>
    <url>/archives/576e39a6.html</url>
    <content><![CDATA[<h1 id="位运算模板"><a href="#位运算模板" class="headerlink" title="位运算模板"></a>位运算模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><p>lowbit(x)是x的二进制表达式中最低位的1所对应的值。</p>
<p>比如，6的二进制是110，所以lowbit(6)=2。</p>
<p>最近回头看树状数组，发现关于lowbit()函数，目前有两种算法。</p>
<p>第一种是比较常见的，也是我一直在用的：<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>最近发现了另一种算法，如下所示：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&amp;(x^(x<span class="number">-1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>两种算法的结果都是对的。<br>相比之下，第一种算法利用了负整数的补码特性，非常的巧妙，而第二种算法用另外一种方式计算出了最低位，其思想跟补码的也很相似。当然还是推荐第一种，不仅巧妙而且好记。</p>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定一个长度为 n 的数列，请你求出数列中每个数的二进制表示中 1 的个数。</p>
<p><strong>输入格式</strong><br>第一行包含整数 n。</p>
<p>第二行包含 n 个整数，表示整个数列。</p>
<p><strong>输出格式</strong><br>共一行，包含 n 个整数，其中的第 i 个数表示数列中的第 i 个数的二进制表示中 1 的个数。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤100000,<br>0≤数列中元素的值≤109</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><pre><code class="lang-5```">```1 2 3 4 5
</code></pre>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p><code>1 1 2 1 2</code></p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; -x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>; <span class="comment">//计算二进制数中又几个1</span></span><br><span class="line">        <span class="keyword">while</span>(x)&#123;</span><br><span class="line">            x -= <span class="built_in">lowbit</span>(x), res ++;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">lowbit</span><span class="params">(<span class="type">int</span> x)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; -x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(x)&#123;</span><br><span class="line">            x -= lowbit(x);</span><br><span class="line">            res ++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,res);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>位运算</tag>
      </tags>
  </entry>
  <entry>
    <title>802. 区间和</title>
    <url>/archives/15f5d870.html</url>
    <content><![CDATA[<h1 id="离散化模板"><a href="#离散化模板" class="headerlink" title="离散化模板"></a>离散化模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; alls; <span class="comment">// 存储所有待离散化的值</span></span><br><span class="line"><span class="built_in">sort</span>(alls.<span class="built_in">begin</span>(), alls.<span class="built_in">end</span>()); <span class="comment">// 将所有值排序</span></span><br><span class="line">alls.<span class="built_in">erase</span>(<span class="built_in">unique</span>(alls.<span class="built_in">begin</span>(), alls.<span class="built_in">end</span>()), alls.<span class="built_in">end</span>());   <span class="comment">// 去掉重复元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 二分求出x对应的离散化的值</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span> <span class="comment">// 找到第一个大于等于x的位置</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> l = <span class="number">0</span>, r = alls.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (alls[mid] &gt;= x) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r + <span class="number">1</span>; <span class="comment">// 映射到1, 2, ...n</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>假定有一个无限长的数轴，数轴上每个坐标上的数都是 0。</p>
<p>现在，我们首先进行 n 次操作，每次操作将某一位置 x 上的数加 c。</p>
<p>接下来，进行 m 次询问，每个询问包含两个整数 l 和 r，你需要求出在区间 [l,r] 之间的所有数的和。</p>
<p><strong>输入格式</strong><br>第一行包含两个整数 n 和 m。</p>
<p>接下来 n 行，每行包含两个整数 x 和 c。</p>
<p>再接下来 m 行，每行包含两个整数 l 和 r。</p>
<p><strong>输出格式</strong><br>共 m 行，每行输出一个询问中所求的区间内数字和。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>−109≤x≤109 ,<br>1≤n,m≤105,<br>−109≤l≤r≤109,<br>−10000≤c≤10000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>3 3<br>1 2<br>3 6<br>7 5<br>1 3<br>4 6<br>7 8</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>8<br>0<br>5</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">300010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[N],s[N];</span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; alls;</span><br><span class="line">vector&lt;PII&gt; add,query;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> l = <span class="number">0</span>, r = alls.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r&gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(alls[mid] &gt;= x) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="type">int</span> x,c;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt;c;</span><br><span class="line">        add.<span class="built_in">push_back</span>(&#123;x,c&#125;);</span><br><span class="line">        </span><br><span class="line">        alls.<span class="built_in">push_back</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">        <span class="type">int</span> l,r;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        query.<span class="built_in">push_back</span>(&#123;l,r&#125;);</span><br><span class="line">        </span><br><span class="line">        alls.<span class="built_in">push_back</span>(l);</span><br><span class="line">        alls.<span class="built_in">push_back</span>(r);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//去重</span></span><br><span class="line">    <span class="built_in">sort</span>(alls.<span class="built_in">begin</span>(), alls.<span class="built_in">end</span>());</span><br><span class="line">    alls.<span class="built_in">erase</span>(<span class="built_in">unique</span>(alls.<span class="built_in">begin</span>(), alls.<span class="built_in">end</span>()),alls.<span class="built_in">end</span>());</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//处理插入</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> item : add)&#123;</span><br><span class="line">        <span class="type">int</span> x = <span class="built_in">find</span>(item.first);</span><br><span class="line">        a[x] += item.second;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//预处理前缀和</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= alls.<span class="built_in">size</span>(); i++) s[i] = s[i - <span class="number">1</span>] + a[i];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//处理询问</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> item : query)&#123;</span><br><span class="line">        <span class="type">int</span> l = <span class="built_in">find</span>(item.first), r = <span class="built_in">find</span>(item.second);</span><br><span class="line">        cout &lt;&lt; s[r] - s [l - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">findleftk</span><span class="params">(<span class="type">int</span> a[],<span class="type">int</span> lo,<span class="type">int</span> hi,<span class="type">int</span> k)</span>&#123;<span class="comment">//二分查找 重复元素最左侧的一个</span></span><br><span class="line">    <span class="keyword">if</span>(hi-lo&lt;=<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[lo]&gt;=k) <span class="keyword">return</span> lo;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[lo+<span class="number">1</span>]&gt;=k) <span class="keyword">return</span> lo+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> lo+<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="type">int</span> mid=(lo+hi)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[mid]&lt;k) <span class="keyword">return</span> findleftk(a,mid+<span class="number">1</span>,hi,k);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> findleftk(a,lo,mid+<span class="number">1</span>,k);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">findrightk</span><span class="params">(<span class="type">int</span> a[],<span class="type">int</span> lo,<span class="type">int</span> hi,<span class="type">int</span> k)</span>&#123;     </span><br><span class="line">    <span class="keyword">if</span>(hi-lo&lt;=<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[lo+<span class="number">1</span>]&lt;=k) <span class="keyword">return</span> lo+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[lo]&lt;=k) <span class="keyword">return</span> lo;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> lo<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="type">int</span> mid=(lo+hi)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[mid]&gt;k) <span class="keyword">return</span> findrightk(a,lo,mid,k);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> findrightk(a,mid,hi,k);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">quicksort</span><span class="params">(<span class="type">int</span> a[],<span class="type">int</span> b[],<span class="type">int</span> lo,<span class="type">int</span> hi)</span>&#123;</span><br><span class="line">    <span class="type">int</span> n=hi-lo,i=lo,j=hi<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=<span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="type">int</span> t=a[lo],p=b[lo];</span><br><span class="line">        <span class="keyword">while</span>(i&lt;j)&#123;</span><br><span class="line">            <span class="keyword">while</span>(i&lt;j &amp;&amp; a[j]&gt;t) j--;</span><br><span class="line">            <span class="keyword">if</span>(i&lt;j)&#123;</span><br><span class="line">                a[i]=a[j];</span><br><span class="line">                b[i++]=b[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(i&lt;j &amp;&amp; a[i]&lt;t) i++;</span><br><span class="line">            <span class="keyword">if</span>(i&lt;j)&#123;</span><br><span class="line">                a[j]=a[i];</span><br><span class="line">                b[j--]=b[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        a[i]=t;</span><br><span class="line">        b[i]=p;</span><br><span class="line">        quicksort(a,b,lo,i);</span><br><span class="line">        quicksort(a,b,i+<span class="number">1</span>,hi);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m,i,j,k,p,q;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a[n],b[n],sum[n];	<span class="comment">//a[]存下标 b[]存数值</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a[i],&amp;b[i]);</span><br><span class="line">    quicksort(a,b,<span class="number">0</span>,n);</span><br><span class="line"></span><br><span class="line">    sum[<span class="number">0</span>]=b[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++) sum[i]=sum[i<span class="number">-1</span>]+b[i]; <span class="comment">//前缀和</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;p,&amp;q);</span><br><span class="line">        j=findleftk(a,<span class="number">0</span>,n,p);   <span class="comment">//先二分查找</span></span><br><span class="line">        k=findrightk(a,<span class="number">0</span>,n,q);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(j&lt;=k) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum[k]-sum[j]+b[j]);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//暴力求和会超时 用前缀和来求</span></span><br><span class="line">    <span class="comment">// sum=0;</span></span><br><span class="line">    <span class="comment">// for(j=0;j&lt;n;j++)&#123;</span></span><br><span class="line">    <span class="comment">//     if(a[j]&gt;=p &amp;&amp; a[j]&lt;=q) sum+=b[j];</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">// printf(&quot;%d\n&quot;,sum);</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>离散化</tag>
      </tags>
  </entry>
  <entry>
    <title>803. 区间合并</title>
    <url>/archives/dbf3f60f.html</url>
    <content><![CDATA[<h1 id="离散化模板"><a href="#离散化模板" class="headerlink" title="离散化模板"></a>离散化模板</h1><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 将所有存在交集的区间合并</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge</span><span class="params">(vector&lt;PII&gt; &amp;segs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;PII&gt; res;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(segs.<span class="built_in">begin</span>(), segs.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> st = <span class="number">-2e9</span>, ed = <span class="number">-2e9</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> seg : segs)</span><br><span class="line">        <span class="keyword">if</span> (ed &lt; seg.first)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (st != <span class="number">-2e9</span>) res.<span class="built_in">push_back</span>(&#123;st, ed&#125;);</span><br><span class="line">            st = seg.first, ed = seg.second;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> ed = <span class="built_in">max</span>(ed, seg.second);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (st != <span class="number">-2e9</span>) res.<span class="built_in">push_back</span>(&#123;st, ed&#125;);</span><br><span class="line"></span><br><span class="line">    segs = res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定 n 个区间 [li,ri]，要求合并所有有交集的区间。</p>
<p>注意如果在端点处相交，也算有交集。</p>
<p>输出合并完成后的区间个数。</p>
<p>例如：[1,3] 和 [2,6] 可以合并为一个区间 [1,6]。<br><strong>输入格式</strong><br>第一行包含整数 n。</p>
<p>接下来 n 行，每行包含两个整数 l 和 r。</p>
<p><strong>输出格式</strong><br>共一行，包含一个整数，表示合并区间完成后的区间个数。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤100000,<br>−10^9≤li≤ri≤10^9</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>5<br>1 2<br>2 4<br>5 6<br>7 8<br>7 9</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>3</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge</span><span class="params">(vector&lt;PII&gt; &amp;segs)</span></span>&#123;</span><br><span class="line">    vector&lt;PII&gt; res;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">sort</span>(segs.<span class="built_in">begin</span>(), segs.<span class="built_in">end</span>());  <span class="comment">//左端点排序</span></span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> st = <span class="number">-2e9</span>, ed = <span class="number">-2e9</span>;  <span class="comment">//左右端点初始化，负无穷；</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> seg : segs)</span><br><span class="line">        <span class="keyword">if</span>(ed &lt; seg.first)&#123;</span><br><span class="line">            <span class="keyword">if</span>(st != <span class="number">-2e9</span>) res.<span class="built_in">push_back</span>(&#123;st, ed&#125;);  <span class="comment">//初始化的[负无穷，负无穷]区间要跳过，不能装入</span></span><br><span class="line">            st = seg.first, ed = seg.second;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> ed = <span class="built_in">max</span>(ed,seg.second);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(st != <span class="number">-2e9</span>) res.<span class="built_in">push_back</span>(&#123;st, ed&#125;);</span><br><span class="line">    segs = res;</span><br><span class="line">    </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    </span><br><span class="line">    vector&lt;PII&gt; segs;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="type">int</span> l, r;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;l,&amp;r);</span><br><span class="line">        segs.<span class="built_in">push_back</span>(&#123;l,r&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">merge</span>(segs);</span><br><span class="line">    </span><br><span class="line">    cout &lt;&lt; segs.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> left;</span><br><span class="line">    <span class="type">int</span> right;</span><br><span class="line">&#125;pai;</span><br><span class="line"></span><br><span class="line">pai segs[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span>&#123;  <span class="comment">//快速排序</span></span><br><span class="line">    pai a[N];</span><br><span class="line">    <span class="keyword">if</span>(l==r) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> mid = (l+r)/<span class="number">2</span>;</span><br><span class="line">    sort(l, mid), sort(mid+<span class="number">1</span>, r);</span><br><span class="line">    <span class="type">int</span> k=<span class="number">0</span>, i=l, j=mid+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(segs[i].left &lt;= segs[j].left)</span><br><span class="line">            a[k++] = segs[i++];</span><br><span class="line">        <span class="keyword">else</span> a[k++] = segs[j++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) a[k++] = segs[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) a[k++] = segs[j++];</span><br><span class="line">    <span class="keyword">for</span>(i=l,j=<span class="number">0</span>; i &lt;= r; i++,j++)</span><br><span class="line">        segs[i] = a[j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">merge</span><span class="params">()</span>&#123;</span><br><span class="line">    sort(<span class="number">1</span>,n);</span><br><span class="line">    <span class="type">int</span> i=<span class="number">1</span>, j=<span class="number">2</span>, k=<span class="number">0</span>; <span class="comment">//i为一个区间 ，j为第二个区间，k记入几段区间</span></span><br><span class="line">    <span class="keyword">while</span>(i&lt;=n)&#123;  <span class="comment">//合并区间</span></span><br><span class="line">        <span class="keyword">if</span>(segs[i].right &gt;= segs[j].left &amp;&amp; j&lt;=n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(segs[i].right &lt;= segs[j].right)&#123;</span><br><span class="line">                segs[i].right = segs[j].right; </span><br><span class="line">            &#125;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            k++;</span><br><span class="line">            i = j;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;segs[i].left, &amp;segs[i].right);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,merge());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>区间合并</tag>
      </tags>
  </entry>
  <entry>
    <title>785.快速排序</title>
    <url>/archives/ff8068c0.html</url>
    <content><![CDATA[<h1 id="快排模板"><a href="#快排模板" class="headerlink" title="快排模板"></a>快排模板</h1><h2 id="C-模板"><a href="#C-模板" class="headerlink" title="C++模板"></a>C++模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[(l + r) /<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++; <span class="keyword">while</span>(q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j --; <span class="keyword">while</span>(q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span>(i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">quick_sort</span>(q, l, j);</span><br><span class="line">    <span class="built_in">quick_sort</span>(q, j + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="C模板"><a href="#C模板" class="headerlink" title="C模板"></a>C模板</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[(l + r) /<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++; <span class="keyword">while</span>(q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j --; <span class="keyword">while</span>(q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span>(i &lt; j)&#123;</span><br><span class="line">            <span class="type">int</span> t = q[i];</span><br><span class="line">            q[i] = q[j];</span><br><span class="line">            q[j] = t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    quick_sort(q, l, j);</span><br><span class="line">    quick_sort(q, j + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定你一个长度为 n 的整数数列。</p>
<p>请你使用快速排序对这个数列按照从小到大进行排序。</p>
<p>并将排好序的数列按顺序输出。</p>
<p>输入格式<br>输入共两行，第一行包含整数 n。</p>
<p>第二行包含 n 个整数（所有整数均在 1∼109 范围内），表示整个数列。</p>
<p>输出格式<br>输出共一行，包含 n 个整数，表示排好序的数列。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤100000</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>5<br>3 1 2 4 5</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>1 2 3 4 5</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[(l + r) /<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++; <span class="keyword">while</span>(q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j --; <span class="keyword">while</span>(q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span>(i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">quick_sort</span>(q, l, j);</span><br><span class="line">    <span class="built_in">quick_sort</span>(q, j + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">quick_sort</span>(q, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,q[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[(l + r) /<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++; <span class="keyword">while</span>(q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j --; <span class="keyword">while</span>(q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span>(i &lt; j)&#123;</span><br><span class="line">            <span class="type">int</span> t = q[i];</span><br><span class="line">            q[i] = q[j];</span><br><span class="line">            q[j] = t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    quick_sort(q, l, j);</span><br><span class="line">    quick_sort(q, j + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> q[N];</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line"></span><br><span class="line">    quick_sort(q, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,q[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>快速排序</tag>
      </tags>
  </entry>
  <entry>
    <title>786.第K个数</title>
    <url>/archives/e4e8a895.html</url>
    <content><![CDATA[<h1 id="快排模板"><a href="#快排模板" class="headerlink" title="快排模板"></a>快排模板</h1><h2 id="C-模板"><a href="#C-模板" class="headerlink" title="C++模板"></a>C++模板</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l == r) <span class="keyword">return</span> q[l];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[(l + r)/<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++ ; <span class="keyword">while</span> (q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j -- ; <span class="keyword">while</span> (q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j - l + <span class="number">1</span> &gt;= k) <span class="keyword">return</span> <span class="built_in">quick_sort</span>(q, l, j, k);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">quick_sort</span>(q, j + <span class="number">1</span>, r, k - (j - l + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="C模板"><a href="#C模板" class="headerlink" title="C模板"></a>C模板</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> k)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (l == r) <span class="keyword">return</span> q[l];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[(l + r)/<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++ ; <span class="keyword">while</span> (q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j -- ; <span class="keyword">while</span> (q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j)&#123;</span><br><span class="line">            <span class="type">int</span> temp = q[i];</span><br><span class="line">            q[i] = q[j];</span><br><span class="line">            q[j] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j - l + <span class="number">1</span> &gt;= k) <span class="keyword">return</span> quick_sort(q, l, j, k);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> quick_sort(q, j + <span class="number">1</span>, r, k - (j - l + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定一个长度为 n 的整数数列，以及一个整数 k，请用快速选择算法求出数列从小到大排序后的第 k 个数。</p>
<p>输入格式<br>第一行包含两个整数 n 和 k。</p>
<p>第二行包含 n 个整数（所有整数均在 1∼109 范围内），表示整数数列。</p>
<p>输出格式<br>输出一个整数，表示数列的第 k 小数。</p>
<h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤n≤100000,<br>1≤k≤n；</p>
<h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>5 3<br>2 4 1 5 3</p>
<h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>3</p>
<hr>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l == r) <span class="keyword">return</span> q[l];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[(l + r)/<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++ ; <span class="keyword">while</span> (q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j -- ; <span class="keyword">while</span> (q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j - l + <span class="number">1</span> &gt;= k) <span class="keyword">return</span> <span class="built_in">quick_sort</span>(q, l, j, k);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">quick_sort</span>(q, j + <span class="number">1</span>, r, k - (j - l + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="built_in">quick_sort</span>(q, <span class="number">0</span>, n - <span class="number">1</span>, k));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> k)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (l == r) <span class="keyword">return</span> q[l];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[(l + r)/<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++ ; <span class="keyword">while</span> (q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j -- ; <span class="keyword">while</span> (q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j)&#123;</span><br><span class="line">            <span class="type">int</span> temp = q[i];</span><br><span class="line">            q[i] = q[j];</span><br><span class="line">            q[j] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (j - l + <span class="number">1</span> &gt;= k) <span class="keyword">return</span> quick_sort(q, l, j, k);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> quick_sort(q, j + <span class="number">1</span>, r, k - (j - l + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    <span class="type">int</span> q[N];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,quick_sort(q, <span class="number">0</span>, n - <span class="number">1</span>, k));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>acwing题库</tag>
        <tag>快速排序</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言中的scanf、getchar、putchar、gets、puts</title>
    <url>/archives/7dafaa9e.html</url>
    <content><![CDATA[<h1 id="C语言中的scanf、getchar、putchar、gets、puts"><a href="#C语言中的scanf、getchar、putchar、gets、puts" class="headerlink" title="C语言中的scanf、getchar、putchar、gets、puts"></a>C语言中的scanf、getchar、putchar、gets、puts</h1><p>C语言函数库中有一批标准输入输出函数，它是以标准的输入输出设备（一般为终端设备）为输入输出对象的。其中有putchar(输出字符)、getchar(输入字符)、printf(格式输出)、scanf(格式输入)、puts（输出字符串）、gets（输入字符串）。</p>
<ul>
<li><strong>C语言本身不提供输入输出语句</strong>，输入输出操作是由C语言标准函数库中的函数来实现的。</li>
<li><strong>printf和scanf不是C语言的关键字</strong>，而是库函数的名字。</li>
<li>如果程序调用标准输入输出函数，则需在本程序开头用<span class="p red">#include</span>指令把<span class="p red">stdio.h</span>头文件包含到程序中，例<span class="p red">#include <stdio.h></stdio.h></span> 。</li>
</ul>
<h2 id="1-scanf"><a href="#1-scanf" class="headerlink" title="1.scanf ()"></a>1.scanf ()</h2><h3 id="scanf-函数的一般形式：scanf-“格式控制”，地址表列"><a href="#scanf-函数的一般形式：scanf-“格式控制”，地址表列" class="headerlink" title="scanf()函数的一般形式：scanf(“格式控制”，地址表列)"></a>scanf()函数的一般形式：scanf(“格式控制”，地址表列)</h3><ul>
<li><span class="p red">%</span>是格式字符，指定输入格式</li>
<li>地址表列中每一项必须以取地址运算符<span class="p red">&</span>开头<strong>输入数据的类型</strong></li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">格式</th>
<th style="text-align:left">字符意义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">d</td>
<td style="text-align:left">输入十进制整数</td>
</tr>
<tr>
<td style="text-align:left">o</td>
<td style="text-align:left">输入八进制整数</td>
</tr>
<tr>
<td style="text-align:left">x</td>
<td style="text-align:left">输入十六进制整数</td>
</tr>
<tr>
<td style="text-align:left">u</td>
<td style="text-align:left">输入无符号十进制整数</td>
</tr>
<tr>
<td style="text-align:left">f或e</td>
<td style="text-align:left">输入浮点型数字</td>
</tr>
<tr>
<td style="text-align:left">c</td>
<td style="text-align:left">输入单个字符</td>
</tr>
<tr>
<td style="text-align:left">s</td>
<td style="text-align:left">输入字符串</td>
</tr>
</tbody>
</table>
</div>
<p><strong>scanf需要注意：</strong></p>
<ul>
<li>在输入<strong>多个</strong><span class="p green">数值数据</span>时，若格式控制中没有非格式字符作输入数据之间的间隔则可用空格、Tab或者回车做间隔。</li>
<li>在输入<strong>多个</strong><span class="p green">字符数据</span>时，若格式控制中无非格式字符，则认为所有输入的字符均为有效字符。</li>
<li>在输入（单个）数据时，C编译器在碰到空格、<kbd>Tab</kbd>、回车或者非法数据时（如对“%d”输入45B时，B为非法数据，）则认为<strong>该数据</strong>结束。输出的结果为45。</li>
</ul>
<p><strong>事例：</strong></p>
<h4 id="数值数据："><a href="#数值数据：" class="headerlink" title="数值数据："></a>数值数据：</h4><span class="p h3">1.在scanf语句的格式串中没有非格式字符时</span> 
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    int a,b,c;</span><br><span class="line">    scanf(&quot;%d%d%d&quot;,&amp;a,&amp;b,&amp;c);</span><br><span class="line">    printf(&quot;a=%d,b=%d,c=%d&quot;,a,b,c);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span class="p green">在scanf语句的格式串中由于没有非格式字符</span>在“%d%d%d”之间作输入时的间隔，因此在输入时要用一个以上的空格或回车键作为每两个输入数之间的间隔。如：
<div class="tip "><p>1 2 3<br>或者<br>1<br>2<br>3</p>
</div>
<span class="p h3">2.在scanf语句的格式串中有非格式字符时</span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    int a,b,c;</span><br><span class="line">    scanf(&quot;%d,%d,%d&quot;,&amp;a,&amp;b,&amp;c);</span><br><span class="line">    printf(&quot;a=%d,b=%d,c=%d&quot;,a,b,c);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span class="p green">如果格式控制串中有非格式字符则输入时也要输入该非格式字符。</span>
<p>输入时用“，”作间隔符，输入为4，5，6<br>再比如<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scanf(&quot;a=%d,b=%d,c=%d&quot;,&amp;a,&amp;b,&amp;c);</span><br></pre></td></tr></table></figure><br>输入应为：a=3,b=4,c=5</p>
<span class="p h3">3.用十进制整数指定输入的字符数（宽度）：</span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scanf(&quot;%3d&quot;,&amp;a); </span><br></pre></td></tr></table></figure>
<p>输入456789只把456赋值变量a，其余部分被截去<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scanf(&quot;%4d%4d&quot;,&amp;a,&amp;b);</span><br></pre></td></tr></table></figure><br>输入456789将把456赋值a，而把789赋值b</p>
<h4 id="字符数据"><a href="#字符数据" class="headerlink" title="字符数据"></a>字符数据</h4><span class="p h3">1.在scanf输入的字符数据中无非格式字符时</span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scanf(&quot;%c%c%c&quot;,&amp;a,&amp;b,&amp;c);</span><br></pre></td></tr></table></figure>
<p>在输入<span class="p green">字符数据</span>时，若格式控制中无非格式字符，则认为所有输入的字符均为有效字符。<br>输入d\e\f,则把‘d’赋值给a，‘\’赋值给b，‘e’赋值给c。只有当输入为def,才能将‘d’赋值给a.’e’赋值给b，‘f’赋值给c。</p>
<span class="p h3">2.在scanf输入的字符数据中有非格式字符时</span>
<p><strong>如果格式控制串中有非格式字符则输入时也要输入该非格式字符。</strong><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scanf (&quot;%c %c %c&quot;,&amp;a,&amp;b,&amp;c);</span><br></pre></td></tr></table></figure><br>因为在格式控制中加入了空格作为间隔，所以在输入各数据之间需加空格。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">canf (&quot;%c,%c,%c&quot;,&amp;a,&amp;b,&amp;c);</span><br></pre></td></tr></table></figure><br>因为在格式控制中加入了‘，’作为间隔，所以在输入各数据之间需加‘，’。</p>
<h4 id="ASCII"><a href="#ASCII" class="headerlink" title="ASCII"></a>ASCII</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    char a,b,c;</span><br><span class="line">    printf(&quot;input character a,b,c\n&quot;);</span><br><span class="line">    scanf(&quot;%c %c %c&quot;,&amp;a,&amp;b,&amp;c);</span><br><span class="line">    printf(&quot;%d,%d,%d\n%c,%c,%c\n&quot;,a,b,c,a-32,b-32,c-32);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输入三个小写字母，输出其ASCII吗和对应的大写字母</p>
<h4 id="将整个字符串一次输入或输出。用‘-s’格式符，意思是对字符串（string）的输入输出"><a href="#将整个字符串一次输入或输出。用‘-s’格式符，意思是对字符串（string）的输入输出" class="headerlink" title="将整个字符串一次输入或输出。用‘%s’格式符，意思是对字符串（string）的输入输出"></a>将整个字符串一次输入或输出。用‘%s’格式符，意思是对字符串（string）的输入输出</h4><ul>
<li>scanf函数中的输入项如果是字符数组名，不要再加地址符&amp;，因为在C语言中数组名代表该数组第一个元素的地址(或者说数组的起始地址)。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scanf(&quot;%s&quot;, &amp;str);		//str前面不应加&amp;</span><br></pre></td></tr></table></figure></li>
<li>输出的字符中不包括结束符′\0′。</li>
<li>用“%s”格式符输出字符串时，printf函数中的输出项是字符数组名，而不是数组元素名。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	char c[]=&quot;China&quot;;</span><br><span class="line">	printf(&quot;%s\n&quot;,c);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>如果数组长度大于字符串的实际长度，也只输出到遇′\0′结束。</li>
<li>如果一个字符数组中包含一个以上′\0′，则遇第一个′\0′时输出就结束。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">   char c[6];</span><br><span class="line">scanf(&quot;%s&quot;,c);</span><br></pre></td></tr></table></figure>
从键盘输入：China<br>系统会自动在China后面加一个‘\0’结束符<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">char str1[5],str2[5],str3[5];</span><br><span class="line">scanf(&quot;%s%s%s&quot;,str1,str2,str3);</span><br></pre></td></tr></table></figure>
<strong>如果利用一个scanf函数输入多个字符串，则应在输入时以空格分隔。</strong><br>从键盘输入：How are you？<br>由于有空格字符分隔，作为三个字符串输入。<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">char str[13];</span><br><span class="line">scanf(&quot;%s&quot;,str);</span><br></pre></td></tr></table></figure>
从键盘输入：How are you?<br>由于系统把空格字符作为输入的字符串之间的分隔符，因此只能将空格前的字符“How”送到str中</li>
</ul>
<h2 id="2-getchar（）"><a href="#2-getchar（）" class="headerlink" title="2.getchar（）"></a>2.getchar（）</h2><h3 id="getchar（）函数原型：int-getchar（void）"><a href="#getchar（）函数原型：int-getchar（void）" class="headerlink" title="getchar（）函数原型：int getchar（void）"></a>getchar（）函数原型：int getchar（void）</h3><p>用于从标准输入输出控制台读取字符</p>
<p>【参数】该函数没有参数</p>
<p>【返回值】函数的返回值为用户输入的第一个字符的ASCII码，若出错返回-1，且将用户输入的字符回显到屏幕。（循环语句中）如果用户在按回车键之前输入了不只一个字符，其他字符会保留在键盘缓冲区中，等待后续getchar()调用读取。也就是说，后续的getchat()调用不会等待用户按键，而是直接读取缓冲区中的字符，直到缓冲区的字符读取完毕后，才等待用户按键。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main( )&#123;</span><br><span class="line">    int ch;</span><br><span class="line">    while( (ch=getchar()) != &#x27;\n&#x27; )  //从控制台流中读取字符，直到按回车键结束</span><br><span class="line">        printf (&quot;%c&quot;, ch;  //输出读取内容</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>输入abcd，输出abcd<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main( )&#123;</span><br><span class="line">    int ch;</span><br><span class="line">    while( (ch=getchar()) != &#x27;\n&#x27; )  //从控制台流中读取字符，直到按回车键结束</span><br><span class="line">        printf (&quot;%d&quot;, ch;  //输出读取内容</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>输入abcd，输出979899100<br><span class="p green">注意将ch=getchar()用括号括起来</span></p>
<h2 id="3-putchar（）"><a href="#3-putchar（）" class="headerlink" title="3.putchar（）"></a>3.putchar（）</h2><h3 id="putchar-原型-int-putchar（int-ch）"><a href="#putchar-原型-int-putchar（int-ch）" class="headerlink" title="putchar()原型:int putchar（int ch）"></a>putchar()原型:int putchar（int ch）</h3><p>用于将给定的字符输出控制台</p>
<p>【参数】ch为要输出的字符。</p>
<p>【返回值】输出成功，返回该字符的ASCII码值，否则返回EOF。</p>
<p><strong>purchar(‘字符’)或者putchar（字符变量）</strong><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">   char ch;</span><br><span class="line">   ch=&#x27;A&#x27;;</span><br><span class="line">   putchar(ch);</span><br><span class="line">   putchar(&#x27;A&#x27;);</span><br><span class="line">   return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>输出结果：AA</p>
<h2 id="4-gets（）"><a href="#4-gets（）" class="headerlink" title="4.gets（）"></a>4.gets（）</h2><h3 id="gets（）函数原型：char-gets-char-str"><a href="#gets（）函数原型：char-gets-char-str" class="headerlink" title="gets（）函数原型：char gets(char str);"></a>gets（）函数原型：char <em>gets(char </em>str);</h3><p>【参数】char *类型， str 可以是一个字符指针变量名(没理解)，也可以是一个字符数组名。</p>
<p><strong>1、gets() 函数的功能是从输入缓冲区中读取一个字符串存储到字符指针变量 str 所指向的内存空间。</strong><br><strong>2、从终端输入一个字符串到字符数组，并且得到一个函数值，该函数是字符数组的起始地址</strong></p>
<span class="p green">gets()函数从流中读取字符串，直到出现换行符或读到文件尾为止，最后加上NULL（‘\0’）作为字符串结束。</span>(使用 gets() 时，系统会将最后“敲”的换行符从缓冲区中取出来，然后丢弃，所以缓冲区中不会遗留换行符。) 所读取的字符串暂存在给定的参数string中。
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">   char str1[20]=&#123;0&#125;; //字符数组初始化为\0</span><br><span class="line">   gets（str1）;</span><br><span class="line">   printf(&quot;%s&quot;,str1);</span><br><span class="line">   puts(str1);</span><br><span class="line">   return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>从键盘输入：Computer<br>输出：ComputerComputer<br><strong>将输入的字符串″Computer″送给字符数组str（请注意，送给数组的共有9个字符，而不是8个字符），返回的函数值是字符数组str的第一个元素的地址。</strong></p>
<h2 id="5-puts（）"><a href="#5-puts（）" class="headerlink" title="5.puts（）"></a>5.puts（）</h2><h3 id="puts（）函数原型：int-puts（int-s）"><a href="#puts（）函数原型：int-puts（int-s）" class="headerlink" title="puts（）函数原型：int puts（int *s）;"></a>puts（）函数原型：int puts（int *s）;</h3><p>作用：将一个字符串（以‘\0’结束的字符序列）输出到终端</p>
<p>用puts函数输出的字符串中可以包含转义字符。</p>
<p>在用puts输出时将字符串结束标志′\0′转换成′\n′，即输出完字符串后换行。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">   char str[]=&#123;&quot;China\nBeijing&quot;&#125;;</span><br><span class="line">	puts(str);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>输出结果：China<br>Beijing</p>
]]></content>
  </entry>
  <entry>
    <title>代码演示</title>
    <url>/archives/be82d226.html</url>
    <content><![CDATA[<h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">判断一个整数是否是回文数。</span><br><span class="line">回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</span><br><span class="line"><span class="comment">//转化为字符串实现</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPalindrome</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">reversedStr</span> <span class="operator">=</span> (<span class="keyword">new</span> <span class="title class_">StringBuilder</span>(x + <span class="string">&quot;&quot;</span>)).reverse().toString();</span><br><span class="line">        <span class="keyword">return</span> (x + <span class="string">&quot;&quot;</span>).equals(reversedStr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用数字解决问题</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    bool <span class="title function_">isPalindrome</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="comment">// 特殊情况：</span></span><br><span class="line">        <span class="comment">// 如上所述，当 x &lt; 0 时，x 不是回文数。</span></span><br><span class="line">        <span class="comment">// 同样地，如果数字的最后一位是 0，为了使该数字为回文，</span></span><br><span class="line">        <span class="comment">// 则其第一位数字也应该是 0</span></span><br><span class="line">        <span class="comment">// 只有 0 满足这一属性</span></span><br><span class="line">        <span class="keyword">if</span> (x &lt; <span class="number">0</span> || (x % <span class="number">10</span> == <span class="number">0</span> &amp;&amp; x != <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">revertedNumber</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (x &gt; revertedNumber) &#123;</span><br><span class="line">            revertedNumber = revertedNumber * <span class="number">10</span> + x % <span class="number">10</span>;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当数字长度为奇数时，我们可以通过 revertedNumber/10 去除处于中位的数字。</span></span><br><span class="line">        <span class="comment">// 例如，当输入为 12321 时，在 while 循环的末尾我们可以得到 x = 12，revertedNumber = 123，</span></span><br><span class="line">        <span class="comment">// 由于处于中位的数字不影响回文（它总是与自己相等），所以我们可以简单地将其去除。</span></span><br><span class="line">        <span class="keyword">return</span> x == revertedNumber || x == revertedNumber / <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>java</tag>
        <tag>力扣</tag>
      </tags>
  </entry>
  <entry>
    <title>APP精品网址导航</title>
    <url>/archives/433943fb.html</url>
    <content><![CDATA[<blockquote>
<p><strong>会不定期更新哦！</strong></p>
</blockquote>
<h1 id="资源下载网站："><a href="#资源下载网站：" class="headerlink" title="资源下载网站："></a>资源下载网站：</h1><p>在线下载Instagram<a href="https://instaer.app/">https://instaer.app/</a></p>
<p>推特视频下载<a href="https://twdown.net/">https://twdown.net/</a>     <a href="https://www.twitterfk.com/">https://www.twitterfk.com/</a></p>
<p>Youtube 下载器<a href="https://yt1s.com/zh-cn314">https://yt1s.com/zh-cn314</a>   <a href="https://zh.savefrom.net/126/">https://zh.savefrom.net/126/</a>  <a href="https://ytop1.com/en146">https://ytop1.com/en146</a></p>
<p>在线下载器<a href="https://www.online-downloader.com/index-Chinese">https://www.online-downloader.com/index-Chinese</a></p>
<p>油管音频下载<a href="https://www.mp3juices.cc/juicefca7e/">https://www.mp3juices.cc/juicefca7e/</a></p>
<p>油管字幕下载 <a href="https://downsub.com/">https://downsub.com/</a></p>
<p>Chrome浏览器插件下载<a href="https://www.chrome666.com/">https://www.chrome666.com/</a></p>
<p>天翼小站<a href="https://yun.hei521.cn/">https://yun.hei521.cn/</a></p>
<p>阿里云盘资源<a href="https://res.yunpan.win/">https://res.yunpan.win/</a></p>
<p>壁纸下载<a href="https://wallhaven.cc/">https://wallhaven.cc/</a></p>
<p>电子书下载<a href="https://zh.z-lib.org/">https://zh.z-lib.org/</a></p>
<p>无损音乐下载<a href="https://www.sq688.com/singer/10001.html">https://www.sq688.com/singer/10001.html</a></p>
<p>番剧下载<a href="https://nyaa.ink/">https://nyaa.ink/</a></p>
<p>动漫下载<a href="https://share.dmhy.org/">https://share.dmhy.org/</a></p>
<p>磁力搜索<a href="https://xn--0tr952eyzisl5a.com/">https://猫和老鼠.com/</a></p>
<h1 id="体育直播："><a href="#体育直播：" class="headerlink" title="体育直播："></a>体育直播：</h1><p>jrs直播<a href="http://www.zglkq.net/">http://www.zglkq.net/</a></p>
<p>jrskan直播<a href="http://www.jrskan.com/?live">http://www.jrskan.com/?live</a></p>
<p>310直播<a href="http://www.310.tv/">http://www.310.tv/</a></p>
<p>球吧网<a href="https://www.ballbar.cc/">https://www.ballbar.cc/</a></p>
<p>JRS直播<a href="http://jrszb222.com/">http://jrszb222.com/</a></p>
<h1 id="工具网站："><a href="#工具网站：" class="headerlink" title="工具网站："></a>工具网站：</h1><p>菜鸟工具<a href="https://c.runoob.com/">https://c.runoob.com/</a></p>
<p>favicon生成器<a href="https://www.favicon.cc/">https://www.favicon.cc/</a></p>
<p>老薛主机<a href="https://www.laoxuehost.com/hosting/">https://www.laoxuehost.com/hosting/</a></p>
<p>必盛云主机<a href="https://www.bisend.cn/">https://www.bisend.cn/</a></p>
<p>域名注册<a href="https://www.godaddy.com/en-sg">https://www.godaddy.com/en-sg</a></p>
<p>可能吧公众号排版器<a href="https://knb.im/mp/">https://knb.im/mp/</a></p>
<p>假名生成器<a href="https://www.fakenamegenerator.com/">https://www.fakenamegenerator.com/</a></p>
<p>临时邮箱<a href="https://www.linshiyouxiang.net/">https://www.linshiyouxiang.net/</a></p>
<p>全平台视频下载<a href="https://weibo.iiilab.com/">https://weibo.iiilab.com/</a></p>
<p>在线工具<a href="http://www.gjw123.com/#">http://www.gjw123.com/#</a></p>
<p>短网址跳转<a href="https://dwztz.com/">https://dwztz.com/</a></p>
<p>二维码梦工厂<a href="http://qrdream.com/">http://qrdream.com/</a></p>
<p>it之家签到<a href="https://fxxkcar.com/ithome.html">https://fxxkcar.com/ithome.html</a></p>
<p>IT之家自动签到程序<a href="https://iewl.herokuapp.com/www/addUser.html">https://iewl.herokuapp.com/www/addUser.html</a></p>
<p>YouTube下载<a href="https://www.y2mate.com/en373">https://www.y2mate.com/en373</a></p>
<p>在线图片去底工具<a href="https://www.aigei.com/bgremover/">https://www.aigei.com/bgremover/</a></p>
<p>iOS安卓来电黄页优化<a href="https://github.com/metowolf/vCards">https://github.com/metowolf/vCards</a></p>
<p>微信聊天记录导出<a href="http://wxbackup.imxfd.com/">http://wxbackup.imxfd.com/</a></p>
<p>极简简历<a href="https://www.polebrief.com/index">https://www.polebrief.com/index</a></p>
<p>简历本<a href="https://www.jianliben.com/">https://www.jianliben.com/</a></p>
<p>文库下载助手<a href="https://imwcr.cn/api/GetDocumentText/">https://imwcr.cn/api/GetDocumentText/</a></p>
<p>极简插件<a href="https://chrome.zzzmh.cn/#/index">https://chrome.zzzmh.cn/#/index</a></p>
<p>油猴脚本<a href="https://greasyfork.org/zh-CN/scripts">https://greasyfork.org/zh-CN/scripts</a></p>
<p>油猴插件<a href="https://www.tampermonkey.net/">https://www.tampermonkey.net/</a></p>
<p>10分钟邮箱<a href="https://10minutemail.net/m/">https://10minutemail.net/m/</a></p>
<p>假电子邮件生成器<a href="https://emailfake.com/">https://emailfake.com/</a></p>
<p>临时邮箱<a href="https://www.moakt.com/">https://www.moakt.com/</a></p>
<p>gmail临时邮箱<a href="https://www.smartnator.com/">https://www.smartnator.com/</a></p>
<p>免费接码<a href="https://mianfeijiema.com/">https://mianfeijiema.com/</a></p>
<p>免费在线接受短信<a href="https://yunjiema.net/">https://yunjiema.net/</a></p>
<p>Listen1音乐播放器<a href="https://listen1.github.io/listen1/">https://listen1.github.io/listen1/</a></p>
<p>图片放大<a href="http://waifu2x.udp.jp/">http://waifu2x.udp.jp/</a></p>
<p>白描<a href="https://web.baimiaoapp.com/">https://web.baimiaoapp.com/</a></p>
<p>PDF处理<a href="https://smallpdf.com/">https://smallpdf.com/</a></p>
<p>App历史版本查询<a href="https://tools.lancely.tech/apple/app-search">https://tools.lancely.tech/apple/app-search</a></p>
<p><a href="https://zh.z-lib.org/">数字图书馆</a></p>
<h1 id="影视网站："><a href="#影视网站：" class="headerlink" title="影视网站："></a>影视网站：</h1><p>泥巴影院午夜场-需魔法上网<a href="https://www.nbys1.tv/index.html">https://www.nbys1.tv/index.html</a></p>
<p>晗剧-韩剧<a href="https://www.hanju.fun/">https://www.hanju.fun/</a></p>
<p>努努影院<a href="https://www.nunuyy1.org/">https://www.nunuyy1.org/</a></p>
<p>蛋蛋赞影院<a href="https://www.dandanzan10.top/">https://www.dandanzan10.top/</a></p>
<p>港剧屋<a href="http://www.gangju5.cc/">http://www.gangju5.cc/</a></p>
<p>TVB云播港剧<a href="http://www.tvyb02.com/">http://www.tvyb02.com/</a></p>
<p>xijing美剧<a href="http://xijing.tv/movie/index">http://xijing.tv/movie/index</a></p>
<p>91日剧<a href="http://www.wwmulu.com/">http://www.wwmulu.com/</a></p>
<p>HDmoli<a href="https://www.hdmoli.com/">https://www.hdmoli.com/</a></p>
<p>哔嘀影视<a href="https://www.btbdys.com/">https://www.btbdys.com/</a></p>
<p>COKEMV<a href="https://cokemv.me/">https://cokemv.me/</a></p>
<p>NO视频<a href="https://www.novipnoad.com/">https://www.novipnoad.com/</a></p>
<p>独播库<a href="https://duboku.ru/">https://duboku.ru/</a></p>
<p>天空影视<a href="https://www.tkys.tv/">https://www.tkys.tv/</a></p>
<p>厂长资源<a href="https://www.qianoo.cn/">https://www.qianoo.cn/</a></p>
<p>555影视<a href="http://www.555dy.vip/">http://www.555dy.vip/</a></p>
<p>剧迷<a href="https://gimytv.app/">https://gimytv.app/</a></p>
<p>低端影视<a href="https://ddrk.me/">https://ddrk.me/</a></p>
<p>LeZhu<a href="http://www.lezhutv.com/">http://www.lezhutv.com/</a></p>
<p>Libvio<a href="https://www.libvio.me/">https://www.libvio.me/</a></p>
<p>真不卡<a href="https://www.zhenbuka5.com/">https://www.zhenbuka5.com/</a></p>
<h1 id="动漫网站："><a href="#动漫网站：" class="headerlink" title="动漫网站："></a>动漫网站：</h1><p>Zzzfun<a href="http://www.zzzfun.com/">http://www.zzzfun.com/</a></p>
<p>omofun动漫<a href="https://omofun.tv/">https://omofun.tv/</a></p>
<p>漫岛动漫<a href="https://www.mandao.tv/">https://www.mandao.tv/</a></p>
<p>Ebb<a href="https://ebb.io/">https://ebb.io/</a></p>
]]></content>
      <tags>
        <tag>APP精品网址导航</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构</title>
    <url>/archives/79666db.html</url>
    <content><![CDATA[<p>第一章、绪论<br>1.1  数据结构的基本概念<br>1.1.1  基本概念和术语</p>
<ol>
<li>数据<br>数据是信息的载体，是描述客观事物属性性的数、字符及所有能输入到计算机中并被计算机程序识别和处理的符号的集合。数据是计算机程序加工的原料。</li>
<li>数据元素<br>数据元素时数据的基本单位，通常作为一个整体进行考虑和处理。一个数据元素可由若干个数据项组成，数据项是构成数据元素的不可分割的最小单位。例如，学生记录就是一个数据元素，它由学号、姓名、性别等数据项组成。</li>
<li>数据对象<br>数据对象是具有相同性质的数据元素的集合，是数据的一个子集。</li>
<li>数据类型<br>数据类型是一个值的集合和定义在此集合上的一组操作的总称。<br>1）原子类型：其值不可再分的数据类型。<br>2）结构类型：其值可以在分解为若干成分（分量）的数据类型。<br>3）抽象数据类型：抽象数据组织及与之相关的操作。<br>5.数据结构<br>数据结构是相互之间存在一种或多种特定关系的数据元素的集合。在任何问题中，数据元素都不是孤立存在的，它们之间存在某种关系，这种数据元素相互之间的关系称为结构（Structure）。数据结构包括三方面的内容：逻辑结构、存储结构和数据的运算。<br>数据的逻辑结构和存储结构是密不可分的两个方面，一个算法的设计取决于所选定的逻辑结构，而算法的实现依赖于所采用的的存储结构。<br>1.1.2  数据结构三要素</li>
<li>数据的逻辑结构<br>逻辑结构是指数据元素之间的逻辑关系，即从逻辑关系上描述数据。它与数据的存储无关，是独立于计算机的。<br>数据的逻辑结构分为线性结构和非线性结构，<br>1）线性表是典型的线性结构；<br>2）集合、树和图是典型的非线性结构。<br>数据的逻辑结构分类<br>集合：结构中的数据元素之间除“同属一个集合”外，别无其他关系。<br>线性结构：结构中的数据元素之间只存在一对一的关系。<br>树形结构：结构中的数据元素之间存在一对多的关系。<br>图状结构或网状结构：结构中的数据元素之间存在多对多的关系。</li>
<li>数据的存储结构<br>存储结构是指数据结构在计算机中的表示（又称映像），也称物理结构。它包括数据元素的表示和关系的表示。数据的存储结构是用计算机语言实现的逻辑结构，它依赖于计算机语言。数据的存储结构主要有顺序存储、链式存储、索引存储和散列存储。<br>1）顺序存储：把逻辑上相邻的元素存储在物理位置上也相邻的存储单元中，元素之间的关系由存储单元的邻接关系来体现。<br>（1）优点：可以实现随机存取，每个元素占用最少的存储空间；<br>（2）缺点：只能使用相邻的一整块存储单元，因此可能产生较多的外部碎片。<br>2）链式存储：不要求逻辑上相邻的元素在物理位置上也相邻，借助指示元素存储地址的指针来表示元素之间的逻辑关系。<br>（1）优点：不会出现碎片现象，能充分利用所有存储单元；<br>（2）缺点：每个元素因存储指针而占用额外的存储空间，且只能实现顺序存取。<br>3）索引存储：在存储元素信息的同时，还建立附加的索引表。索引表中的每项称为索引项，索引项的一般形式是（关键字，地址）。<br>（1）优点：检索速度快；<br>（2）缺点：附加的索引表额外占用存储空间。另外，增加和删除数据时也要修改索引表，因而会花费较多时间。<br>4）散列存储：根据元素的关键字直接计算出该元素的存储地址，又称哈希（Hash）存储。<br>（1）优点：检索、增加和删除结点的操作都很快；<br>（2）缺点：若散列函数不好，则可能出现元素存储单元的冲突，而解决冲突会增加时间和空间开销。<br>3.数据的运算<br>施加在数据上的运算包括运算的定义和实现。运算的定义是针对逻辑结构的，指出运算的功能；运算的实现是针对存储结构的，指出运算的具体操作步骤。<br>1.2  算法和算法的评价<br>1.2.1  算法的基本概念<br>算法是对特定问题求解步骤的一种描述，它是指令的有限序列，其中每条指令表示一个或多个操作。此外，一个算法还具有下列5个重要特性：<br>1）有穷性：一个算法必须总在执行有穷步之后结束，且每一步都可在有穷时间内完成。<br>2）确定性：算法中每条指令必须有确切的含义，对于相同的输入只能得出相同的输出。<br>3）可行性：算法中描述的操作都可以通过已经实现的基本运算执行有限次来实现。<br>4）输入：一个算法有零个或多个输入，这些输入取自于某个特定的对象的集合。<br>5）输出：一个算法有一个或多个输出，这些输出是与输入有着某种特定关系的量。<br>通常，设计一个“好”的算法应考虑以下目标：<br>1）正确性：算法应能够正确地解决求解问题。<br>2）可读性：算法应具有良好的可读性。<br>3）健壮性：输入非法数据时，算法能适当地做出反应或进行处理。<br>4）高效率和低存储量需求：效率指算法执行时间，存储量需求指算法执行过程中所需要的最大存储空间。<br>1.2.2  算法效率的度量<br>1.时间复杂度<br>一个语句的频度是指该语句在算法中被重复执行的次数。算法中所有语句的频度之和记为T(n)，它是该算法问题规模 n 的函数，时间复杂度主要分析T(n)的数量级。算法中基本运算（最深层循环内的语句）的频度与T(n)同数量级，因此通常采用算法中基本运算的频度 f(n) 来分析算法的时间复杂度。因此，算法的时间复杂度记为<br>T(n)=Of(n)<br>式中，O的含义是T(n)的数量级，其严格的数学定义是：若T(n)和 f(n)是定义在正整数集合上的两个函数，则存在正常数C和n₀，使得当n≥n₀时，都满足0≤T(n)≤Cf(n)<br>一般总是考虑在最坏情况下的时间复杂度，以保证算法的运行时间不会比它更长。<br>在分析一个程序的时间复杂性时，有以下两条规则：<br>a) 加法规则<pre><code>         T(n) = T₁(n) + T₂(n) = O(f(n)) + O(g(n)) = O(max(f(n)),g(n)))
</code></pre>b) 乘法规则<br>T(n) = T₁(n) × T₂(n) = O(f(n)) × O(g(n)) = O((f(n) × g(n))<br>常见的渐近时间复杂度为<br>O(1) &lt; O(log₂n) &lt; O(nlog₂n) &lt; O(n²) &lt; O(n³) &lt; O(2ⁿ) &lt; O(n!) &lt; O(nⁿ）<br>2.空间复杂度<br>算法的空间复杂度S(n)定义为该算法所耗费的存储空间，它是问题规模 n 的函数。记为<br>S(n) = O(g(n))<br>一个程序在执行时除了需要存储空间来存放本身所用的指令、常数、变量和输入数据外，还需要一些对数据进行操作的工作单元和存储一些为实现计算所需信息的辅助空间。若输入数据所占空间只取决于问题本身，和算法无关，则只需分析出输入和程序之外的额外空间。<br>算法原地工作是指算法所需的辅助空间为常量，即 O(1)。</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>30天习惯养成</title>
    <url>/archives/162bc967.html</url>
    <content><![CDATA[<h1 id="连续断糖30天"><a href="#连续断糖30天" class="headerlink" title="连续断糖30天"></a>连续断糖30天</h1><iframe width="100%" height="615" src="//player.bilibili.com/player.html?aid=431084785&bvid=BV1iG411J7sp&cid=847870856&page=1&high_quality=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>


<h1 id="连续洗30天冷水澡"><a href="#连续洗30天冷水澡" class="headerlink" title="连续洗30天冷水澡"></a>连续洗30天冷水澡</h1><iframe width="100%" height="615" src="//player.bilibili.com/player.html?aid=469111103&bvid=BV1F5411R7jb&cid=720790486&page=1&high_quality=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen " sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe>


<h1 id="《糖-新一代健康杀手-》"><a href="#《糖-新一代健康杀手-》" class="headerlink" title="《糖:新一代健康杀手?》"></a>《糖:新一代健康杀手?》</h1><blockquote>
<p><strong>如果你听到我们每天摄入的糖在很大程度上造成了全球肥胖人数，以及罹患一些当代最常见的慢性疾病的人数激增的话你有何感想？而如果你听到糖就会上瘾，而且在很多你意想不到的食物中都添加了糖，你有何感想？</strong></p>
</blockquote>
<iframe width="100%" height="615" src="//player.bilibili.com/player.html?aid=511278476&bvid=BV17u411r7ff&cid=713323471&page=1&high_quality=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe>]]></content>
      <tags>
        <tag>30天习惯养成</tag>
      </tags>
  </entry>
  <entry>
    <title>诗词歌赋</title>
    <url>/archives/c4f018f0.html</url>
    <content><![CDATA[<div class="poem"><div class="poem-title">木兰花·拟古决绝词柬友</div><div class="poem-author">纳兰性德</div><p>人生若只如初见，何事秋风悲画扇。<br>等闲变却故人心，却道故人心易变。<br>骊山语罢清宵半，泪雨霖铃终不怨。<br>何如薄幸锦衣郎，比翼连枝当日愿。</p>
</div>]]></content>
      <tags>
        <tag>诗词歌赋</tag>
      </tags>
  </entry>
  <entry>
    <title>清澈的爱</title>
    <url>/archives/19edc71e.html</url>
    <content><![CDATA[<ul>
<li>陈氏有男儿。</li>
<li>名祥榕。</li>
<li>闽州屏南人士，</li>
<li>遇寇而不畏生死，</li>
<li>热血洒于疆场。</li>
<li>冠三军，</li>
<li>慑外敌。</li>
<li>护中华夏，</li>
<li>震昆仑，</li>
<li>陈母姚氏闻儿绩，</li>
<li>不悲不泣，</li>
<li>傲然挺立，</li>
<li>遂问：“戍边烽火，吾儿勇否？”</li>
<li><p>众将答曰：“勇冠三军，青史留名！”</p>
</li>
<li><p>清澈的爱    只为中国</p>
</li>
<li>————19岁的陈祥榕烈士生前写下的战斗口号</li>
</ul>
]]></content>
      <tags>
        <tag>陈祥榕</tag>
      </tags>
  </entry>
  <entry>
    <title>杂乱无章</title>
    <url>/archives/ddb74602.html</url>
    <content><![CDATA[<iframe width="100%" height="715" src="/img/WeChat_20221009161605.mp4" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen"> </iframe>]]></content>
      <tags>
        <tag>杂乱无章</tag>
      </tags>
  </entry>
  <entry>
    <title>人生路上，哪有什么“正确答案”</title>
    <url>/archives/1fed5fb.html</url>
    <content><![CDATA[<iframe width="100%" height="615" src="//player.bilibili.com/player.html?aid=383029585&bvid=BV1pZ4y127nw&cid=571518576&page=1&high_quality=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="allowfullscreen" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts"> </iframe>]]></content>
      <tags>
        <tag>杂乱无章</tag>
      </tags>
  </entry>
  <entry>
    <title>分享</title>
    <url>/archives/4f2a7d08.html</url>
    <content><![CDATA[<h1 id="一只特立独行的猪"><a href="#一只特立独行的猪" class="headerlink" title="一只特立独行的猪"></a>一只特立独行的猪</h1><ul>
<li>插队的时候，我喂过猪、也放过牛。假如没有人来管，这两种动物也完全知道该怎样生活。它们会自由自在地闲逛，饥则食渴则饮，春天来临时还要谈谈爱情；这样一来，它们的生活层次很低，完全乏善可陈。人来了以后，给它们的生活做出了安排：每一头牛和每一口猪的生活都有了主题。就它们中的大多数而言，这种生活主题是很悲惨的：前者的主题是干活，后者的主题是长肉。我不认为这有什么可抱怨的，因为我当时的生活也不见得丰富了多少，除了八个样板戏，也没有什么消遣。有极少数的猪和牛，它们的生活另有安排。以猪为例，种猪和母猪除了吃，还有别的事可干。就我所见，它们对这些安排也不大喜欢。种猪的任务是交配，换言之，我们的政策准许它当个花花公子。但是疲惫的种猪往往摆出一种肉猪（肉猪是阉过的）才有的正人君子架势，死活不肯跳到母猪背上去。母猪的任务是生崽儿，但有些母猪却要把猪崽儿吃掉。总的来说，人的安排使猪痛苦不堪。但它们还是接受了：猪总是猪啊。</li>
</ul>
<ul>
<li>对生活做种种设置是人特有的品性。不光是设置动物，也设置自己。我们知道，在古希腊有个斯巴达，那里的生活被设置得了无生趣，其目的就是要使男人成为亡命战士，使女人成为生育机器，前者像些斗鸡，后者像些母猪。这两类动物是很特别的，但我以为，它们肯定不喜欢自己的生活。但不喜欢又能怎么样？人也好，动物也罢，都很难改变自己的命运。</li>
</ul>
<ul>
<li>以下谈到的一只猪有些与众不同。我喂猪时，它已经有四五岁了，从名分上说，它是肉猪，但长得又黑又瘦，两眼炯炯有光。这家伙像山羊一样敏捷，一米高的猪栏一跳就过；它还能跳上猪圈的房顶，这一点又像是猫——所以它总是到处游逛，根本就不在圈里呆着。所有喂过猪的知青都把它当宠儿来对待，它也是我的宠儿——因为它只对知青好，容许他们走到三米之内，要是别的人，它早就跑了。它是公的，原本该劁掉。不过你去试试看，哪怕你把劁猪刀藏在身后，它也能嗅出来，朝你瞪大眼睛，噢噢地吼起来。我总是用细米糠熬的粥喂它，等它吃够了以后，才把糠兑到野草里喂别的猪。其他猪看了嫉妒，一起嚷起来。这时候整个猪场一片鬼哭狼嚎，但我和它都不在乎。吃饱了以后，它就跳上房顶去晒太阳，或者模仿各种声音。它会学汽车响、拖拉机响，学得都很像；有时整天不见踪影，我估计它到附近的村寨里找母猪去了。我们这里也有母猪，都关在圈里，被过度的生育搞得走了形，又脏又臭，它对它们不感兴趣；村寨里的母猪好看一些。它有很多精彩的事迹，但我喂猪的时间短，知道得有限，索性就不写了。总而言之，所有喂过猪的知青都喜欢它，喜欢它特立独行的派头儿，还说它活得潇洒。但老乡们就不这么浪漫，他们说，这猪不正经。领导则痛恨它，这一点以后还要谈到。我对它则不止是喜欢——我尊敬它，常常不顾自己虚长十几岁这一现实，把它叫做“猪兄”。如前所述，这位猪兄会模仿各种声音。我想它也学过人说话，但没有学会——假如学会了，我们就可以做倾心之谈。但这不能怪它。人和猪的音色差得太远了。</li>
</ul>
<ul>
<li>后来，猪兄学会了汽笛叫，这个本领给它招来了麻烦。我们那里有座糖厂，中午要鸣一次汽笛，让工人换班。我们队下地干活时，听见这次汽笛响就收工回来。我的猪兄每天上午十点钟总要跳到房上学汽笛，地里的人听见它叫就回来——这可比糖厂鸣笛早了一个半小时。坦白地说，这不能全怪猪兄，它毕竟不是锅炉，叫起来和汽笛还有些区别，但老乡们却硬说听不出来。领导上因此开了一个会，把它定成了破坏春耕的坏分子，要对它采取专政手段——会议的精神我已经知道了，但我不为它担忧——因为假如专政是指绳索和杀猪刀的话，那是一点门都没有的。以前的领导也不是没试过，一百人也治不住它。狗也没用：猪兄跑起来像颗鱼雷，能把狗撞出一丈开外。谁知这回是动了真格的，指导员带了二十几个人，手拿五四式手枪；副指导员带了十几人，手持看青的火枪，分两路在猪场外的空地上兜捕它。这就使我陷入了内心的矛盾：按我和它的交情，我该舞起两把杀猪刀冲出去，和它并肩战斗，但我又觉得这样做太过惊世骇俗——它毕竟是只猪啊；还有一个理由，我不敢对抗领导，我怀疑这才是问题之所在。总之，我在一边看着。猪兄的镇定使我佩服之极：它很冷静地躲在手枪和火枪的连线之内，任凭人喊狗咬，不离那条线。这样，拿手枪的人开火就会把拿火枪的打死，反之亦然；两头同时开火，两头都会被打死。至于它，因为目标小，多半没事。就这样连兜了几个圈子，它找到了一个空子，一头撞出去了；跑得潇洒之极。以后我在甘蔗地里还见过它一次，它长出了獠牙，还认识我，但已不容我走近了。这种冷淡使我痛心，但我也赞成它对心怀叵测的人保持距离。</li>
</ul>
<ul>
<li>我已经四十岁了，除了这只猪，还没见过谁敢于如此无视对生活的设置。相反，我倒见过很多想要设置别人生活的人，还有对被设置的生活安之若素的人。因为这个原故，我一直怀念这只特立独行的猪。插队的时候，我喂过猪、也放过牛。假如没有人来管，这两种动物也完全知道该怎样生活。它们会自由自在地闲逛，饥则食渴则饮，春天来临时还要谈谈爱情；这样一来，它们的生活层次很低，完全乏善可陈。人来了以后，给它们的生活做出了安排：每一头牛和每一口猪的生活都有了主题。就它们中的大多数而言，这种生活主题是很悲惨的：前者的主题是干活，后者的主题是长肉。我不认为这有什么可抱怨的，因为我当时的生活也不见得丰富了多少，除了八个样板戏，也没有什么消遣。有极少数的猪和牛，它们的生活另有安排。以猪为例，种猪和母猪除了吃，还有别的事可干。就我所见，它们对这些安排也不大喜欢。种猪的任务是交配，换言之，我们的政策准许它当个花花公子。但是疲惫的种猪往往摆出一种肉猪（肉猪是阉过的）才有的正人君子架势，死活不肯跳到母猪背上去。母猪的任务是生崽儿，但有些母猪却要把猪崽儿吃掉。总的来说，人的安排使猪痛苦不堪。但它们还是接受了：猪总是猪啊。</li>
</ul>
<ul>
<li>对生活做种种设置是人特有的品性。不光是设置动物，也设置自己。我们知道，在古希腊有个斯巴达，那里的生活被设置得了无生趣，其目的就是要使男人成为亡命战士，使女人成为生育机器，前者像些斗鸡，后者像些母猪。这两类动物是很特别的，但我以为，它们肯定不喜欢自己的生活。但不喜欢又能怎么样？人也好，动物也罢，都很难改变自己的命运。</li>
</ul>
<ul>
<li>以下谈到的一只猪有些与众不同。我喂猪时，它已经有四五岁了，从名分上说，它是肉猪，但长得又黑又瘦，两眼炯炯有光。这家伙像山羊一样敏捷，一米高的猪栏一跳就过；它还能跳上猪圈的房顶，这一点又像是猫——所以它总是到处游逛，根本就不在圈里呆着。所有喂过猪的知青都把它当宠儿来对待，它也是我的宠儿——因为它只对知青好，容许他们走到三米之内，要是别的人，它早就跑了。它是公的，原本该劁掉。不过你去试试看，哪怕你把劁猪刀藏在身后，它也能嗅出来，朝你瞪大眼睛，噢噢地吼起来。我总是用细米糠熬的粥喂它，等它吃够了以后，才把糠兑到野草里喂别的猪。其他猪看了嫉妒，一起嚷起来。这时候整个猪场一片鬼哭狼嚎，但我和它都不在乎。吃饱了以后，它就跳上房顶去晒太阳，或者模仿各种声音。它会学汽车响、拖拉机响，学得都很像；有时整天不见踪影，我估计它到附近的村寨里找母猪去了。我们这里也有母猪，都关在圈里，被过度的生育搞得走了形，又脏又臭，它对它们不感兴趣；村寨里的母猪好看一些。它有很多精彩的事迹，但我喂猪的时间短，知道得有限，索性就不写了。总而言之，所有喂过猪的知青都喜欢它，喜欢它特立独行的派头儿，还说它活得潇洒。但老乡们就不这么浪漫，他们说，这猪不正经。领导则痛恨它，这一点以后还要谈到。我对它则不止是喜欢——我尊敬它，常常不顾自己虚长十几岁这一现实，把它叫做“猪兄”。如前所述，这位猪兄会模仿各种声音。我想它也学过人说话，但没有学会——假如学会了，我们就可以做倾心之谈。但这不能怪它。人和猪的音色差得太远了。</li>
</ul>
<ul>
<li>后来，猪兄学会了汽笛叫，这个本领给它招来了麻烦。我们那里有座糖厂，中午要鸣一次汽笛，让工人换班。我们队下地干活时，听见这次汽笛响就收工回来。我的猪兄每天上午十点钟总要跳到房上学汽笛，地里的人听见它叫就回来——这可比糖厂鸣笛早了一个半小时。坦白地说，这不能全怪猪兄，它毕竟不是锅炉，叫起来和汽笛还有些区别，但老乡们却硬说听不出来。领导上因此开了一个会，把它定成了破坏春耕的坏分子，要对它采取专政手段——会议的精神我已经知道了，但我不为它担忧——因为假如专政是指绳索和杀猪刀的话，那是一点门都没有的。以前的领导也不是没试过，一百人也治不住它。狗也没用：猪兄跑起来像颗鱼雷，能把狗撞出一丈开外。谁知这回是动了真格的，指导员带了二十几个人，手拿五四式手枪；副指导员带了十几人，手持看青的火枪，分两路在猪场外的空地上兜捕它。这就使我陷入了内心的矛盾：按我和它的交情，我该舞起两把杀猪刀冲出去，和它并肩战斗，但我又觉得这样做太过惊世骇俗——它毕竟是只猪啊；还有一个理由，我不敢对抗领导，我怀疑这才是问题之所在。总之，我在一边看着。猪兄的镇定使我佩服之极：它很冷静地躲在手枪和火枪的连线之内，任凭人喊狗咬，不离那条线。这样，拿手枪的人开火就会把拿火枪的打死，反之亦然；两头同时开火，两头都会被打死。至于它，因为目标小，多半没事。就这样连兜了几个圈子，它找到了一个空子，一头撞出去了；跑得潇洒之极。以后我在甘蔗地里还见过它一次，它长出了獠牙，还认识我，但已不容我走近了。这种冷淡使我痛心，但我也赞成它对心怀叵测的人保持距离。</li>
</ul>
<ul>
<li>我已经四十岁了，除了这只猪，还没见过谁敢于如此无视对生活的设置。相反，我倒见过很多想要设置别人生活的人，还有对被设置的生活安之若素的人。因为这个原故，我一直怀念这只特立独行的猪。</li>
</ul>
<hr>
<h2 id="gt-注：文章取自王小波的《一只特立独行的猪》"><a href="#gt-注：文章取自王小波的《一只特立独行的猪》" class="headerlink" title="&gt; 注：文章取自王小波的《一只特立独行的猪》"></a>&gt; 注：文章取自王小波的《一只特立独行的猪》</h2><blockquote>
<p><strong>除了这只猪，还没见过谁敢于如此无视对生活的设置。相反，我倒见过很多想要设置别人生活的人，还有对被设置的生活安之若素的人。</strong></p>
<p><strong>或许人和猪一样，也是只求自由的本性，“它们会自由自在地闲逛，饥则食渴则饮，春天来临时还要谈谈爱情”，无疑，猪所处的这种自然状态，正如人所追求的自由生活一样，是一种自然的要求和生活方式。</strong></p>
</blockquote>
]]></content>
      <tags>
        <tag>一只特立独行的猪</tag>
        <tag>王小波</tag>
      </tags>
  </entry>
  <entry>
    <title>阿猫阿狗</title>
    <url>/archives/22323d85.html</url>
    <content><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="//music.163.com/outchain/player?type=2&id=27483200&auto=1&height=32"></iframe>

<hr>
<ul>
<li>故事讲到这里已经结束了。</li>
<li>故事里的他们每个人真真切切地活在我们周围，生动而鲜活。他们生活在社会的底层，生似蜉蝣，朝生暮死，不饮不食，自己熬度的百年光阴只是别人的弹指一挥。家长里短，为了一栋房子，一个学位，拼了命加班工作努力奔波，大家关心都是口袋几金，家里几平，孩子几个，这些俗不可耐的事情只能发生在人间。奔一辈子大房子，死后几平小墓地。大人物最懂开玩笑，谁都很重要。他们说我们都是社会的一颗螺丝钉，谁都不能缺少，人人有责。这就是要你坚持挺着，并且架上虚无缥缈的社会义务。然而现实阿猫阿狗都随水流一般，冲向下水道，在底处，并没什么不同，有眼有口，却没有风景和话语权。《2012》中臃肿的富人靠交钱就可以上诺亚方舟，而阿猫阿狗“面目模糊”，甚至“不入镜头”。<br>也或许，我们都是阿猫阿狗。</li>
<li>这个世界能有多公平呢？它不会因为你干最脏最累的活就给你最高工资，因为脏和累不是评判工资的标准；也不会因为你经历了风雨人生就给你幸福生活，更不会因为你一句“我没有功劳也有苦劳”就给你多发几万块年终奖。</li>
<li>“这首歌用高亢、坚决的韵律和呐喊抵触了歌词的负面情绪，明白这一切，讲出这些认识，讽刺挖苦，消极，但不怠慢。现在社会提倡积极，可盲目的积极值得提倡吗？消极未必就不是好事，消极能够更清醒一些，而清醒一些，活的明白一些，做一些事情也更能区分意义和价值。‘’就像在说即使社会残酷如此，阿猫阿狗依然奋进，因为知道他们的烈焰和利刃必须撕裂所有的痛苦和苦难，切开所有阻挡和荆棘， 生活才能得以继续。<br>最后以一首小诗结尾，但愿阿猫阿狗历经人生辗转之后，有一份安稳的生活。</li>
<li>“愿风裁取每一粒微尘</li>
<li>愿灵魂抵达记忆的尽头</li>
<li>愿一切的浩瀚都归于渺小</li>
<li>愿每身孤独都拥抱共鸣</li>
<li>愿衣襟带花</li>
<li>愿岁月风平。</li>
</ul>
<hr>
]]></content>
      <tags>
        <tag>随想</tag>
      </tags>
  </entry>
  <entry>
    <title>2019.6.8</title>
    <url>/archives/2ab0d059.html</url>
    <content><![CDATA[<p>知乎上有这么一个话题：<br><span class="p center logo h3 cyan">高考最后一科的最后一刻钟你在想什么？</span><br>2019.6.8.广东高考<br>最后一科是英语，<br>16:50停笔后看了眼时间，<br>合上笔，检查了一下答题卡和答题卷，<br>长舒了一口气，微微靠了靠墙，看向了窗外。<br>那天雨下的很大，夹着雷打。<br>结束后，并没有急着回宿舍收拾东西，<br>来到长廊上，<br><del>看着那时最喜欢的女生慢慢走出校门</del>，<br><del>自己心里清楚</del>，<br><del>也许是最后一次偷偷的看她了</del>!<br>太阳出来的刚刚好，<br>那是的彩虹是我见过最美丽的。<br>一切都结束了，好像一切也才刚刚开始!</p>
<p><img src="/images/gaokao.jpg" alt="gaokao"></p>
]]></content>
      <tags>
        <tag>话题</tag>
      </tags>
  </entry>
</search>
